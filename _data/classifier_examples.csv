atom,id,url,file_line,code
Assignment As Value,0,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/amdsmb/amdsmb.c#L393,amdsmb.c#L393,(error = amdsmb_wait(sc)) == SMB_ENOERR
Assignment As Value,1,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/libgomp/testsuite/libgomp.oacc-c-c++-common/parallel-dims.c#L531,parallel-dims.c#L531,gangs_min = workers_min = vectors_min = INT_MAX
Assignment As Value,2,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/usr.bin/paste/paste.c#L139,paste.c#L139,head = tmp = NULL
Assignment As Value,3,https://github.com/mongodb/mongo/blob/67f735e6705091659e2a8cf46a9285f09bcf749a/src/third_party/wiredtiger/src/reconcile/rec_write.c#L2736,rec_write.c#L2736,entry = max_image_slot = slots = 0
Assignment As Value,4,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sbin/clri/clri.c#L115,clri.c#L115,(inonum = atoi(*argv)) <= 0
Assignment As Value,5,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/usr.sbin/jail/jail.c#L152,jail.c#L152,"(ch = getopt(argc, argv, ""cdf:hiJ:lmn:p:qrRs:u:U:v"")) != -1"
Assignment As Value,6,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/media/mtransport/third_party/nICEr/src/ice/ice_component.c#L476,ice_component.c#L476,"if ((r = nr_ice_component_create_tcp_host_candidate(ctx, component, &addrs[i].addr, TCP_TYPE_PASSIVE, backlog, 0, lufrag, pwd, &isock_psv))){
    r_log(LOG_ICE, LOG_WARNING, ""ICE(%s): failed to create passive TCP host candidate: %d"", ctx->label, r);
}"
Assignment As Value,7,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/iicbus/twsi/mv_twsi.c#L164,mv_twsi.c#L164,m0 = n0 = 4
Assignment As Value,8,https://github.com/mongodb/mongo/blob/67f735e6705091659e2a8cf46a9285f09bcf749a/src/third_party/wiredtiger/src/lsm/lsm_worker.c#L147,lsm_worker.c#L147,"(ret = __wt_lsm_manager_pop_entry(session, WT_LSM_WORK_MERGE, &entry)) == 0"
Assignment As Value,9,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/byacc/test/btyacc/inherit1.tab.c#L443,inherit1.tab.c#L443,(newsize *= 2) > YYMAXDEPTH
Assignment As Value,10,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/media/libvpx/libvpx/vp8/common/mfqe.c#L161,mfqe.c#L161,"while (actd >>= 1)
    thr++;"
Assignment As Value,11,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/netbsd-tests/fs/vfs/t_vfsops.c#L133,t_vfsops.c#L133,"RL(fd = rump_sys_open(FNAME, O_RDWR | O_CREAT, 0777))"
Assignment As Value,12,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/usr.bin/mail/main.c#L330,main.c#L330,ws.ws_col = ws.ws_row = 0
Assignment As Value,13,https://github.com/mysql/mysql-server/blob/0138556a55168da12eaf0bc3038947148d6b0863/extra/yassl/taocrypt/src/ripemd.cpp#L162,ripemd.cpp#L162,b1 = b2 = digest_[1]
Assignment As Value,14,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/fs/xfs/xfs_bmap_util.c#L1078,xfs_bmap_util.c#L1078,"if ((temp = do_mod(startoffset_fsb, extsz)))
    e += temp;"
Assignment As Value,15,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/cam/ctl/ctl_tpc.c#L960,ctl_tpc.c#L960,(tior = TAILQ_FIRST(&run)) != NULL
Assignment As Value,16,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/cddl/contrib/opensolaris/lib/libdtrace/common/dt_module.c#L838,dt_module.c#L838,(dmp->dm_asmap = malloc(sizeof (void*) * dmp->dm_asrsv)) == NULL
Assignment As Value,17,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/cddl/contrib/opensolaris/common/avl/avl.c#L832,avl.c#L832,"(neighbor = AVL_NEXT(t, obj)) == NULL"
Assignment As Value,18,https://github.com/WebKit/webkit/blob/e8c73206a09f734bc64f77d6275a727aa2811754/Tools/TestWebKitAPI/glib/WebKitGLib/TestMain.cpp#L56,TestMain.cpp#L56,"while ((fileName = g_dir_read_name(directory))){
    GUniquePtr<char> filePath(g_build_filename(directoryPath, fileName, nullptr));
    if (g_file_test(filePath.get(), G_FILE_TEST_IS_DIR))
        removeNonEmptyDirectory(filePath.get());
    else
        g_unlink(filePath.get());
}"
Assignment As Value,19,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/binutils/gas/config/tc-arm.c#L2566,tc-arm.c#L2566,(symbolP = md_undefined_symbol(name)) == NULL
Assignment As Value,20,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/ada/gcc-interface/trans.c#L1933,trans.c#L1933,(double_align = double_float_alignment) > 0
Assignment As Value,21,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/nvi/vi/vs_line.c#L239,vs_line.c#L239,SMAP_CACHE(tsmp = smp - 1)
Assignment As Value,22,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/nvi/vi/v_txt.c#L465,v_txt.c#L465,filec_redraw = hexcnt = showmatch = 0
Assignment As Value,23,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/usr.sbin/ppp/nat_cmd.c#L158,nat_cmd.c#L158,lremoteport = hremoteport = 0
Assignment As Value,24,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/reload.c#L2880,reload.c#L2880,"substed_operand[i] = recog_data.operand[i] = find_reloads_toplev(recog_data.operand[i], i, address_type[i], ind_levels, 0, insn, &address_reloaded[i])"
Assignment As Value,25,https://github.com/mongodb/mongo/blob/67f735e6705091659e2a8cf46a9285f09bcf749a/src/third_party/icu4c-57.1/source/i18n/collationkeys.cpp#L194,collationkeys.cpp#L194,return ok = FALSE;
Assignment As Value,26,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/libcpp/files.c#L320,files.c#L320,(pchdir = opendir(pchname)) != NULL
Assignment As Value,27,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/isdn/hisax/l3dss1.c#L1787,l3dss1.c#L1787,!(skb = l3_alloc_skb(l))
Assignment As Value,28,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/llvm/tools/lldb/source/Commands/CommandObjectType.cpp#L2926,CommandObjectType.cpp#L2926,"if ((is_global_search = (m_command_options.m_language == eLanguageTypeUnknown))){
    languages.push_back(Language::FindPlugin(eLanguageTypeObjC));
    languages.push_back(Language::FindPlugin(eLanguageTypeC_plus_plus));
}else{
    languages.push_back(Language::FindPlugin(m_command_options.m_language));
}"
Assignment As Value,29,https://github.com/mysql/mysql-server/blob/0138556a55168da12eaf0bc3038947148d6b0863/libmysql/libmysql.c#L3196,libmysql.c#L3196,tm->minute = tm->second = 0
Assignment As Value,30,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/zlib/examples/gzlog.c#L354,gzlog.c#L354,"(fd = open(log->path, O_CREAT | O_EXCL, 0644)) < 0"
Assignment As Value,31,https://github.com/apache/httpd/blob/6fe234860d15c797f34bc9c0e290fd23a73233c7/server/mpm/motorz/motorz.c#L1421,motorz.c#L1421,<!!!>
Assignment As Value,32,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/hwpmc/hwpmc_mod.c#L3600,hwpmc_mod.c#L3600,"(error = copyin(arg, &a, sizeof (a))) != 0"
Assignment As Value,33,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/caps/BasePrincipal.cpp#L209,BasePrincipal.cpp#L209,NS_IF_ADDREF(*aCSP = mCSP)
Assignment As Value,34,https://github.com/mongodb/mongo/blob/67f735e6705091659e2a8cf46a9285f09bcf749a/src/third_party/wiredtiger/src/log/log_slot.c#L525,log_slot.c#L525,closed = raced = slept = false
Assignment As Value,35,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/net/ethernet/broadcom/b44.c#L449,b44.c#L449,"(err = b44_writephy(bp, B44_MII_ALEDCTRL, val & MII_ALEDCTRL_ALLMSK)) != 0"
Assignment As Value,36,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/gfx/cairo/cairo/src/cairo-png.c#L87,cairo-png.c#L87,b[1] = b[2] = b[3] = 0
Assignment As Value,37,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/fortran/scanner.c#L768,scanner.c#L768,(c = next_char()) == ' '
Assignment As Value,38,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/sound/oss/sequencer.c#L1660,sequencer.c#L1660,queue = iqueue = NULL
Assignment As Value,39,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/security/nss/cmd/makepqg/makepqg.c#L192,makepqg.c#L192,(status = PL_GetNextOpt(optstate)) == PL_OPT_OK
Comma Operator,0,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/tcpdump/print-dccp.c#L558,print-dccp.c#L558,"ndo, ""%s optlen goes past header length"", tok2str(dccp_option_values, ""Option %u"", *option)"
Comma Operator,1,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/media/tuners/mt2060.c#L228,mt2060.c#L228,"priv->frequency = (f_lo1 - f_lo2 - IF2) * 1000, num1 = f_lo1 / (FREF / 64)"
Comma Operator,2,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/llvm/tools/clang/lib/StaticAnalyzer/Checkers/NullabilityChecker.cpp#L183,NullabilityChecker.cpp#L183,"*BT, Msg, N"
Comma Operator,3,https://github.com///blob//#L122,#L122,"x, BOOST_PP_SEQ_ENUM_91"
Comma Operator,4,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/js/src/jit/BaselineIC.h#L435,BaselineIC.h#L435,"space, getStubCode()"
Comma Operator,5,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/arch/unicore32/kernel/hibernate.c#L85,hibernate.c#L85,"pgd++, pgd_idx++"
Comma Operator,6,https://github.com/WebKit/webkit/blob/e8c73206a09f734bc64f77d6275a727aa2811754/Tools/TestWebKitAPI/Tests/WTF/CheckedArithmeticOperations.cpp#L186,CheckedArithmeticOperations.cpp#L186,"resetOverflow(ovalue), ovalue.didCrash()"
Comma Operator,7,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/torture/pr70307.c#L61,pr70307.c#L61,"0, 0"
Comma Operator,8,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/Sema/unused-expr.c#L95,unused-expr.c#L95,"(void)0, fn1()"
Comma Operator,9,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/fs/xfs/libxfs/xfs_attr.c#L1252,xfs_attr.c#L1252,"blk++, level++"
Comma Operator,10,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/lib/CodeGen/CGClass.cpp#L567,CGClass.cpp#L567,"EHCleanup, BaseClassDecl, isBaseVirtual"
Comma Operator,11,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/binutils/binutils/readelf.c#L5478,readelf.c#L5478,"i = 0, sec = section_headers"
Comma Operator,12,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/llvm/tools/lldb/source/Plugins/ObjectFile/ELF/ObjectFileELF.cpp#L1188,ObjectFileELF.cpp#L1188,"idx = 0, offset = 0"
Comma Operator,13,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/lib/StaticAnalyzer/Checkers/SimpleStreamChecker.cpp#L133,SimpleStreamChecker.cpp#L133,"FileDesc, StreamState::getOpened()"
Comma Operator,14,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/subversion/subversion/libsvn_subr/utf_validate.c#L272,utf_validate.c#L272,"++data, --max_len"
Comma Operator,15,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/pms/RefTisa/tisa/sassata/common/tdport.c#L2564,tdport.c#L2564,"""tdsaParseLinkRateMode: OpticalMode off phy %d phyProperties 0x%x\n"", index, tdsaAllShared->Ports[index].agPhyConfig.phyProperties"
Comma Operator,16,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/netwerk/cache2/CacheEntry.cpp#L1223,CacheEntry.cpp#L1223,"""CacheEntry::OpenOutputStream [this=%p]"", this"
Comma Operator,17,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/staging/rtl8723bs/hal/rtl8723b_hal_init.c#L2427,rtl8723b_hal_init.c#L2427,"""<==Hal_GetChnlGroup8723B,  (%s) Channel = %d, Group =%d,\n"", bIn24G ? ""2.4G"" : ""5G"", Channel, *pGroup"
Comma Operator,18,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/media/libvpx/libvpx/vp9/encoder/vp9_mbgraph.c#L308,vp9_mbgraph.c#L308,"offset = 0, mb_row = 0"
Comma Operator,19,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/x86/iommu/intel_ctx.c#L743,intel_ctx.c#L743,"""unmap %p error %d"", domain, error"
Comma Operator,20,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/hyperv/netvsc/if_hn.c#L2900,if_hn.c#L2900,"""%u pktinfo overflows RNDIS packet msg"", pi_type"
Comma Operator,21,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/contrib/dev/acpica/components/executer/exoparg1.c#L538,exoparg1.c#L538,"AE_INFO, ""Integer too large to convert to BCD: 0x%8.8X%8.8X"", ACPI_FORMAT_UINT64(Operand[0]->Integer.Value)"
Comma Operator,22,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/virtio/network/if_vtnet.c#L2932,if_vtnet.c#L2932,"""%s: too many rx mbufs %d for %d segments"", __func__, sc->vtnet_rx_nmbufs, sc->vtnet_rx_nsegs"
Comma Operator,23,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/llvm/tools/llvm-pdbutil/StreamUtil.cpp#L36,StreamUtil.cpp#L36,"DenseMap < uint16_t, DbiModuleDescriptor > ModStreams"
Comma Operator,24,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/dom/plugins/base/nsNPAPIPluginInstance.cpp#L323,nsNPAPIPluginInstance.cpp#L323,"""NPP New called: this=%p, npp=%p, mime=%s, argc=%d, return=%d\n"", this, &mNPP, mimetype, quirkParamLength, error"
Comma Operator,25,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/tcpdump/print-atalk.c#L143,print-atalk.c#L143,"ndo, "" [|ddp]"""
Comma Operator,26,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/x86/iommu/intel_idpgtbl.c#L508,intel_idpgtbl.c#L508,"""modifying idmap pagetable domain %p"", domain"
Comma Operator,27,https://github.com/WebKit/webkit/blob/e8c73206a09f734bc64f77d6275a727aa2811754/Source/ThirdParty/ANGLE/src/libANGLE/renderer/d3d/d3d11/winrt/SwapChainPanelNativeWindow.cpp#L200,SwapChainPanelNativeWindow.cpp#L200,"sizeChangedHandler.ReleaseAndGetAddressOf(), this->shared_from_this()"
Comma Operator,28,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/pccard/pccard_cis.c#L774,pccard_cis.c#L774,"count = 0, start = 0, i = 0"
Comma Operator,29,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/g++.old-deja/g++.bugs/900428_01.C#L88,900428_01.C#L88,"(void)1, r"
Comma Operator,30,https://github.com/emacs-mirror/emacs/blob/cb73c70180f57f3fb99fae3aaefbacf0a61cea3f/src/xterm.c#L1907,xterm.c#L1907,"i = 0, j = s->cmp_from"
Comma Operator,31,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/arch/x86/net/bpf_jit_comp.c#L1147,bpf_jit_comp.c#L1147,"proglen = 0, i = 0"
Comma Operator,32,https://github.com/mongodb/mongo/blob/67f735e6705091659e2a8cf46a9285f09bcf749a/src/third_party/mozjs-45/extract/js/src/jsstr.cpp#L4291,jsstr.cpp#L4291,"cx, v.toDouble()"
Comma Operator,33,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/cgraph.c#L1473,cgraph.c#L1473,"parm = DECL_ARGUMENTS(old_decl), num = 0"
Comma Operator,34,https://github.com/mysql/mysql-server/blob/0138556a55168da12eaf0bc3038947148d6b0863/sql/ndb_local_connection.cc#L312,ndb_local_connection.cc#L312,"""error: %d"", error"
Comma Operator,35,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/netgraph/ng_ksocket.c#L1035,ng_ksocket.c#L1035,"""%s: wrong socket"", __func__"
Comma Operator,36,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/gcclibs/libcpp/traditional.c#L1045,traditional.c#L1045,"src++, len--"
Comma Operator,37,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/nvi/vi/v_txt.c#L2184,v_txt.c#L2184,"ac = argc, av = argv, colwidth = 0"
Comma Operator,38,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/x86/include/bus.h#L938,bus.h#L938,"addr1 += 2 * (count - 1), addr2 += 2 * (count - 1)"
Comma Operator,39,https://github.com/mongodb/mongo/blob/67f735e6705091659e2a8cf46a9285f09bcf749a/src/mongo/dbtests/query_stage_and.cpp#L439,query_stage_and.cpp#L439,"&_opCtx, &ws, coll, 20 * big.size()"
Conditional,0,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/parser/html/nsHtml5StreamParser.cpp#L911,nsHtml5StreamParser.cpp#L911,mMode == LOAD_AS_DATA ? false : mExecutor->IsScriptEnabled()
Conditional,1,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp#L1242,HexagonInstrInfo.cpp#L1242,(Rd == Rt) ? K1 : 0
Conditional,2,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/toolkit/components/protobuf/src/google/protobuf/wrappers.pb.cc#L2134,wrappers.pb.cc#L2134,::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()
Conditional,3,https://github.com/WebKit/webkit/blob/e8c73206a09f734bc64f77d6275a727aa2811754/Source/WebCore/rendering/InlineFlowBox.h#L245,InlineFlowBox.h#L245,"m_overflow ? m_overflow->visualOverflowRect() : enclosingLayoutRect(frameRectIncludingLineHeight(lineTop, lineBottom))"
Conditional,4,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/media/pci/bt8xx/bttv-cards.c#L3147,bttv-cards.c#L3147,"btv->has_radio ? ""yes"" : ""no"""
Conditional,5,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/media/usb/dvb-usb-v2/lmedm04.c#L625,lmedm04.c#L625,(ret < 0) ? -ENODEV : 0
Conditional,6,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/dom/base/nsINode.cpp#L998,nsINode.cpp#L998,pos1 < pos2 ? (nsIDOMNode::DOCUMENT_POSITION_PRECEDING | nsIDOMNode::DOCUMENT_POSITION_CONTAINS) : (nsIDOMNode::DOCUMENT_POSITION_FOLLOWING | nsIDOMNode::DOCUMENT_POSITION_CONTAINED_BY)
Conditional,7,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorOps.cpp#L457,LegalizeVectorOps.cpp#L457,Op.getOpcode() == ISD::UINT_TO_FP ? ISD::ZERO_EXTEND : ISD::SIGN_EXTEND
Conditional,8,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/llvm/tools/lldb/source/API/SBStructuredData.cpp#L72,SBStructuredData.cpp#L72,m_impl_up ? m_impl_up->GetType() : eStructuredDataTypeInvalid
Conditional,9,https://github.com/WebKit/webkit/blob/e8c73206a09f734bc64f77d6275a727aa2811754/Source/WebCore/editing/EditorCommand.cpp#L233,EditorCommand.cpp#L233,"a.compareBoundaryPoints(Range::END_TO_END, b).releaseReturnValue() <= 0 ? b : a"
Conditional,10,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/pcmcia/soc_common.c#L446,soc_common.c#L446,"events == 0 ? ""<NONE>"" : """""
Conditional,11,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/cfgcleanup.c#L980,cfgcleanup.c#L980,"reload_completed ? rtx_renumbered_equal_p(e1, e2) : rtx_equal_p(e1, e2)"
Conditional,12,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/Wsign-compare-1.c#L8,Wsign-compare-1.c#L8,x ? y : -1
Conditional,13,https://github.com/mysql/mysql-server/blob/0138556a55168da12eaf0bc3038947148d6b0863/sql/spatial.cc#L359,spatial.cc#L359,has_srid ? SRID_SIZE : 0
Conditional,14,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/llvm/tools/clang/lib/Serialization/ASTReaderDecl.cpp#L2948,ASTReaderDecl.cpp#L2948,ED->getASTContext().getLangOpts().CPlusPlus ? ED->getDefinition() : nullptr
Conditional,15,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/rtc/rtc-stk17ta8.c#L150,rtc-stk17ta8.c#L150,pdata->alrm_mday < 0 || (pdata->irqen & RTC_UF) ? 0x80 : bin2bcd(pdata->alrm_mday)
Conditional,16,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/third_party/aom/third_party/libwebm/mkvmuxer/mkvmuxer.cc#L3221,mkvmuxer.cc#L3221,mode_ == kLive ? accurate_cluster_duration_ : true
Conditional,17,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/usb/controller/ohci.c#L888,ohci.c#L888,(cc == 0) ? USB_ERR_NORMAL_COMPLETION : (cc == OHCI_CC_STALL) ? USB_ERR_STALLED : USB_ERR_IOERROR
Conditional,18,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/arch/mips/sgi-ip22/ip22-gio.c#L170,ip22-gio.c#L170,(len >= PAGE_SIZE) ? (PAGE_SIZE - 1) : len
Conditional,19,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/binutils/gas/config/tc-arm.c#L5914,tc-arm.c#L5914,(found & 4) ? 16 : found | 4
Conditional,20,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/watchdog/xen_wdt.c#L190,xen_wdt.c#L190,"copy_to_user(argp, &ident, sizeof (ident)) ? -EFAULT : 0"
Conditional,21,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/net/wireless/intersil/orinoco/hw.c#L1138,hw.c#L1138,(priv->port_type == 3) ? HERMES_RID_CNFOWNSSID : HERMES_RID_CNFDESIREDSSID
Conditional,22,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/media/ffvpx/libavcodec/codec_desc.c#L2988,codec_desc.c#L2988,desc ? desc->type : AVMEDIA_TYPE_UNKNOWN
Conditional,23,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/parser/expat/lib/xmlparse.c#L5114,xmlparse.c#L5114,dtd->standalone ? !openInternalEntities : !dtd->hasParamEntityRefs
Conditional,24,https://github.com/mongodb/mongo/blob/67f735e6705091659e2a8cf46a9285f09bcf749a/src/mongo/db/ops/write_ops_exec.cpp#L111,write_ops_exec.cpp#L111,serverGlobalParams.sampleRate == 1.0 ? true : opCtx->getClient()->getPrng().nextCanonicalDouble() < serverGlobalParams.sampleRate
Conditional,25,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/lib/AST/DeclObjC.cpp#L655,DeclObjC.cpp#L655,SuperClass ? SuperClass->lookupNestedProtocol(Name) : nullptr
Conditional,26,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/mwl/mwlhal.c#L1142,mwlhal.c#L1142,(chw == MWL_CH_20_MHz_WIDTH) ? &mh->mh_20M : &mh->mh_40M
Conditional,27,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/usr.sbin/ppp/probe.c#L74,probe.c#L74,ipv6_available() ? 1 : 0
Conditional,28,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/layout/base/nsLayoutUtils.cpp#L5054,nsLayoutUtils.cpp#L5054,isHorizontalAxis ? styleBorder->GetComputedBorder().LeftRight() : styleBorder->GetComputedBorder().TopBottom()
Conditional,29,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sbin/dhclient/options.c#L580,options.c#L580,length > 255 ? 255 : length
Conditional,30,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/sound/pci/ice1712/aureon.c#L979,aureon.c#L979,nvol ? (nvol + PCM_MIN) : 0
Conditional,31,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/security/nss/cmd/multinit/multinit.c#L520,multinit.c#L520,"commonName ? commonName : ""*NoName*"""
Conditional,32,https://github.com/apache/subversion/blob/0a73cab17bd4114d1ce96dc5b89b0e44ec0fd5d1/subversion/tests/libsvn_subr/dirent_uri-test.c#L181,dirent_uri-test.c#L181,"tests[i].result ? ""TRUE"" : ""FALSE"""
Conditional,33,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/llvm/tools/lldb/source/Interpreter/CommandInterpreter.cpp#L1640,CommandInterpreter.cpp#L1640,(cmd_obj != NULL) ? cmd_obj->WantsRawCommandString() : false
Conditional,34,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/gfx/skia/skia/src/core/SkVertices.cpp#L80,SkVertices.cpp#L80,sizes.fCSize ? (SkColor*)ptr : nullptr
Conditional,35,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/modules/pdfium/pdfium/core/fxge/dib/fx_dib_composite.cpp#L4703,fx_dib_composite.cpp#L4703,((uint8_t)color == 0xff) ? 1 : 0
Conditional,36,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/js/src/wasm/AsmJS.cpp#L6302,AsmJS.cpp#L6302,expr->isKind(PNK_DIV) ? Op::I32DivU : Op::I32RemU
Conditional,37,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/pinctrl/pinctrl-rockchip.c#L2072,pinctrl-rockchip.c#L2072,pull ? false : true
Conditional,38,https://github.com/mysql/mysql-server/blob/0138556a55168da12eaf0bc3038947148d6b0863/storage/ndb/src/common/transporter/Packer.cpp#L399,Packer.cpp#L399,signalId ? 1 : 0
Conditional,39,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/image/test/gtest/TestDecoders.cpp#L89,TestDecoders.cpp#L89,aTestCase.mFlags & TEST_CASE_IS_FUZZY ? 1 : 0
Implicit Predicate,0,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/net/wireless/broadcom/b43/dma.c#L1185,dma.c#L1185,"destroy_ring(dma, tx_ring_mcast);"
Implicit Predicate,1,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/pinctrl/spear/pinctrl-plgpio.c#L593,pinctrl-plgpio.c#L593,"if (ret){
    dev_err(&pdev->dev, ""failed to add irqchip to gpiochip\n"");
    goto remove_gpiochip;
}"
Implicit Predicate,2,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/crypto/heimdal/lib/hx509/revoke.c#L1307,revoke.c#L1307,"if (ret){
    free(*crl);
    *crl = NULL;
    return ret;
}"
Implicit Predicate,3,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/binutils/gas/config/tc-arm.c#L7693,tc-arm.c#L7693,"constraint (inst.operands[0].imm != 2,
	      _(""only two consecutive VFP SP registers allowed here""));"
Implicit Predicate,4,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/netinet/sctp_indata.c#L1628,sctp_indata.c#L1628,"if (do_wakeup){
    sctp_wakeup_the_read_socket(stcb->sctp_ep, stcb, SCTP_SO_NOT_LOCKED);
}"
Implicit Predicate,5,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/crypto/openssl/apps/srp.c#L474,srp.c#L474,"if (VERBOSE)
    BIO_printf(bio_err, ""trying to read default_srp in \"" BASE_SECTION \""\n"");"
Implicit Predicate,6,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/net/ethernet/mellanox/mlx5/core/en_main.c#L4187,en_main.c#L4187,"if (err)
    goto err_destroy_direct_rqts;"
Implicit Predicate,7,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/media/i2c/lm3646.c#L128,lm3646.c#L128,"if (reg_val & FAULT_NTC_TRIP)
    ctrl->val |= V4L2_FLASH_FAULT_LED_OVER_TEMPERATURE;"
Implicit Predicate,8,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/arm/allwinner/clk/aw_usbclk.c#L125,aw_usbclk.c#L125,"if (error)
    return (error);"
Implicit Predicate,9,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/video/fbdev/omap2/omapfb/dss/apply.c#L752,apply.c#L752,"if (r){
    DSSERR(""cannot write registers for manager %s: illegal configuration\n"", mgr->name);
    continue;
}"
Implicit Predicate,10,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/thermal/int340x_thermal/processor_thermal_device.c#L426,processor_thermal_device.c#L426,"if (ret){
    intel_soc_dts_iosf_exit(proc_priv->soc_dts);
    pci_disable_msi(pdev);
    proc_priv->soc_dts = NULL;
}"
Implicit Predicate,11,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/vis/vis.c#L254,vis.c#L254,"if (fold){
    col = foldit(cp, col, foldwidth, eflags);
}"
Implicit Predicate,12,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/hwpmc/hwpmc_mod.c#L3495,hwpmc_mod.c#L3495,PMC_MARK_ROW_STANDALONE(n);
Implicit Predicate,13,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/arch/powerpc/kvm/book3s_32_mmu_host.c#L109,book3s_32_mmu_host.c#L109,"dprintk_sr(""SR: Searching 0x%llx -> 0x%llx\n"",
			    gvsid, map->host_vsid);"
Implicit Predicate,14,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/net/wireless/intel/iwlegacy/debug.c#L1391,debug.c#L1391,"DEBUGFS_ADD_FILE(sensitivity, dir_debug, S_IRUSR);"
Implicit Predicate,15,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/gcc/config/arm/arm.c#L6305,arm.c#L6305,"if (write_back){
    XVECEXP(result, 0, 0) = gen_rtx_SET(VOIDmode, from, plus_constant(from, count * 4 * sign));
    i = 1;
    count++;
}"
Implicit Predicate,16,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/net/wireless/broadcom/b43/main.c#L3288,main.c#L3288,"if (err)
    goto err_gpio_clean;"
Implicit Predicate,17,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/nvi/vi/v_txt.c#L2256,v_txt.c#L2256,"if (reset)
    F_SET(sp, SC_TINPUT_INFO);"
Implicit Predicate,18,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/firewire/sbp_targ.c#L1854,sbp_targ.c#L1854,"if (debug)
    printf(""link active (DOORBELL)\n"");"
Implicit Predicate,19,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sbin/newfs_nandfs/newfs_nandfs.c#L957,newfs_nandfs.c#L957,"for (;n--;mp++){
    s2 = mp->f_mntfromname;
    if (!strncmp(s2, _PATH_DEV, len))
        s2 += len;

    if ((r && s2 != mp->f_mntfromname && !strcmp(s1 + 1, s2)) || !strcmp(s1, s2))
        errx(1, ""%s is mounted on %s"", fname, mp->f_mntonname);
}"
Implicit Predicate,20,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/net/wireless/ath/ath10k/mac.c#L2838,mac.c#L2838,"if (ret){
    ath10k_warn(ar, ""failed to setup peer SMPS for vdev %i: %d\n"", arvif->vdev_id, ret);
    return;
}"
Implicit Predicate,21,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/security/nss/cmd/pk11util/pk11util.c#L400,pk11util.c#L400,"if (isNum(vname[0])){
    return NULL;
}"
Implicit Predicate,22,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/input/mouse/elan_i2c_i2c.c#L187,elan_i2c_i2c.c#L187,"if (error){
    dev_err(&client->dev, ""failed to read current power state: %d\n"", error);
    return error;
}"
Implicit Predicate,23,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/usb/gadget/function/f_tcm.c#L641,f_tcm.c#L641,"if (ret)
    goto out;"
Implicit Predicate,24,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/net/netfilter/xt_TPROXY.c#L555,xt_TPROXY.c#L555,"if (err)
    return err;"
Implicit Predicate,25,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/fs/nfsclient/nfs_clrpcops.c#L291,nfs_clrpcops.c#L291,"if (error)
    return (error);"
Implicit Predicate,26,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/OpenMP/target_teams_distribute_simd_loop_messages.cpp#L95,target_teams_distribute_simd_loop_messages.cpp#L95,"for (int i = 0;i;i++)
    c[i] = a[i];"
Implicit Predicate,27,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/pr59350.c#L77,pr59350.c#L77,"if (uDNS_ReceiveTestQuestionResponse(m, msg, end, srcaddr, srcport))
    return;"
Implicit Predicate,28,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/fs/jfs/acl.c#L143,acl.c#L143,"if (rc)
    return rc;"
Implicit Predicate,29,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/arch/mips/txx9/generic/smsc_fdc37m81x.c#L73,smsc_fdc37m81x.c#L73,"if (g_smsc_fdc37m81x_base){
    outb(SMSC_FDC37M81X_CONFIG_ENTER, g_smsc_fdc37m81x_base + SMSC_FDC37M81X_CONFIG_INDEX);
}"
Implicit Predicate,30,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/platform/x86/toshiba_acpi.c#L1922,toshiba_acpi.c#L1922,"if (ret)
    return ret;"
Implicit Predicate,31,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/modules/pdfium/pdfium/core/fxge/dib/fx_dib_composite.cpp#L275,fx_dib_composite.cpp#L275,"if (src_alpha){
    *dest_scan = back_alpha + src_alpha - back_alpha * src_alpha / 255;
}"
Implicit Predicate,32,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/md/bcache/journal.c#L690,journal.c#L690,"while (1){
    struct journal_write* w = c->journal.cur;
    sectors = __set_blocks(w->data, w->data->keys + nkeys, block_bytes(c)) * c->sb.block_size;
    if (sectors <= min_t(size_t, c->journal.blocks_free * c->sb.block_size, PAGE_SECTORS << JSET_BITS))
        return w;

    if (wait)
        closure_wait(&c->journal.wait, &cl);

    if (!journal_full(&c->journal)){
        if (wait)
            trace_bcache_journal_entry_full(c);

        BUG_ON(!w->data->keys);
        journal_try_write(c);
    }else{
        if (wait)
            trace_bcache_journal_full(c);

        journal_reclaim(c);
        spin_unlock(&c->journal.lock);
        btree_flush_write(c);
    }
    closure_sync(&cl);
    spin_lock(&c->journal.lock);
    wait = true;
}"
Implicit Predicate,33,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/subversion/subversion/libsvn_fs_x/tree.c#L920,tree.c#L920,"if (flags & open_path_node_only){
    const char* directory;
    if (!root->is_txn_root){
        dag_node_t* node;
        SVN_ERR(try_match_last_node(&node, root, path, path_len, iterpool));
        if (node){
            svn_pool_destroy(iterpool);
            parent_path = make_parent_path(node, 0, 0, pool);
            parent_path->copy_inherit = copy_id_inherit_self;
            *parent_path_p = parent_path;
            return SVN_NO_ERROR;
        }
    }
    directory = svn_dirent_dirname(path, pool);
    if (directory[1] != 0){
        SVN_ERR(dag_node_cache_get(&here, root, directory, pool));
        if (here){
            apr_size_t dirname_len = strlen(directory);
            path_so_far->len = dirname_len;
            rest = path + dirname_len + 1;
        }
    }
}"
Implicit Predicate,34,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/arch/arm/mach-pxa/am200epd.c#L112,am200epd.c#L112,"if (err){
    dev_err(&am200_device->dev, ""failed requesting gpio %s, err=%d\n"", gpio_names[i], err);
    goto err_req_gpio;
}"
Implicit Predicate,35,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/third_party/aom/av1/av1_cx_iface.c#L276,av1_cx_iface.c#L276,"RANGE_CHECK_HI(extra_cfg, noise_sensitivity, 6);"
Implicit Predicate,36,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/fs/ext4/mballoc.c#L4798,mballoc.c#L4798,"if (overflow){
    if (flags & EXT4_FREE_BLOCKS_NOFREE_LAST_CLUSTER){
        if (count > overflow)
            count -= overflow;
        else
            return;
    }else
        count += sbi->s_cluster_ratio - overflow;
}"
Implicit Predicate,37,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/sound/soc/codecs/rt5665.c#L4939,rt5665.c#L4939,"if (ret)
    dev_err(&i2c->dev, ""Failed to reguest IRQ: %d\n"", ret);"
Implicit Predicate,38,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/i2c/busses/i2c-digicolor.c#L116,i2c-digicolor.c#L116,"if (i2c->last)
    dc_i2c_cmd(i2c, II_CMD_STOP);
else
    complete(&i2c->done);"
Implicit Predicate,39,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/reload.c#L6870,reload.c#L6870,"while (1){
    p = PREV_INSN(p);
    if (p == where)
        return value;

    if (CALL_P(p)){
        int i;
        if (goal_mem || need_stable_sp)
            return 0;

        if (regno >= 0 && regno < FIRST_PSEUDO_REGISTER)
            for (i = 0;i < nregs;++i)
                if (call_used_regs[regno + i] || targetm.hard_regno_call_part_clobbered(regno + i, mode))
                    return 0;

        if (valueno >= 0 && valueno < FIRST_PSEUDO_REGISTER)
            for (i = 0;i < valuenregs;++i)
                if (call_used_regs[valueno + i] || targetm.hard_regno_call_part_clobbered(valueno + i, mode))
                    return 0;
    }
    if (INSN_P(p)){
        pat = PATTERN(p);
        if (volatile_insn_p(pat))
            return 0;

        if (GET_CODE(pat) == COND_EXEC)
            pat = COND_EXEC_CODE(pat);

        if (GET_CODE(pat) == SET || GET_CODE(pat) == CLOBBER){
            rtx dest = SET_DEST(pat);
            while (GET_CODE(dest) == SUBREG || GET_CODE(dest) == ZERO_EXTRACT || GET_CODE(dest) == STRICT_LOW_PART)
                dest = XEXP(dest, 0);
            if (REG_P(dest)){
                int xregno = REGNO(dest);
                int end_xregno = END_REGNO(dest);
                if (xregno < regno + nregs && end_xregno > regno)
                    return 0;

                if (xregno < valueno + valuenregs && end_xregno > valueno)
                    return 0;

                if (goal_mem_addr_varies && reg_overlap_mentioned_for_reload_p(dest, goal))
                    return 0;

                if (xregno == STACK_POINTER_REGNUM && need_stable_sp)
                    return 0;
            }else
                if (goal_mem && MEM_P(dest) && !push_operand(dest, GET_MODE(dest)))
                    return 0;
                else
                    if (MEM_P(dest) && regno >= FIRST_PSEUDO_REGISTER && reg_equiv_memory_loc(regno) != 0)
                        return 0;
                    else
                        if (need_stable_sp && push_operand(dest, GET_MODE(dest)))
                            return 0;
        }else
            if (GET_CODE(pat) == PARALLEL){
                int i;
                for (i = XVECLEN(pat, 0) - 1;i >= 0;i--){
                    rtx v1 = XVECEXP(pat, 0, i);
                    if (GET_CODE(v1) == COND_EXEC)
                        v1 = COND_EXEC_CODE(v1);

                    if (GET_CODE(v1) == SET || GET_CODE(v1) == CLOBBER){
                        rtx dest = SET_DEST(v1);
                        while (GET_CODE(dest) == SUBREG || GET_CODE(dest) == ZERO_EXTRACT || GET_CODE(dest) == STRICT_LOW_PART)
                            dest = XEXP(dest, 0);
                        if (REG_P(dest)){
                            int xregno = REGNO(dest);
                            int end_xregno = END_REGNO(dest);
                            if (xregno < regno + nregs && end_xregno > regno)
                                return 0;

                            if (xregno < valueno + valuenregs && end_xregno > valueno)
                                return 0;

                            if (goal_mem_addr_varies && reg_overlap_mentioned_for_reload_p(dest, goal))
                                return 0;

                            if (xregno == STACK_POINTER_REGNUM && need_stable_sp)
                                return 0;
                        }else
                            if (goal_mem && MEM_P(dest) && !push_operand(dest, GET_MODE(dest)))
                                return 0;
                            else
                                if (MEM_P(dest) && regno >= FIRST_PSEUDO_REGISTER && reg_equiv_memory_loc(regno) != 0)
                                    return 0;
                                else
                                    if (need_stable_sp && push_operand(dest, GET_MODE(dest)))
                                        return 0;
                    }
                }
            }

        if (CALL_P(p) && CALL_INSN_FUNCTION_USAGE(p)){
            rtx link;
            for (link = CALL_INSN_FUNCTION_USAGE(p);XEXP(link, 1) != 0;link = XEXP(link, 1)){
                pat = XEXP(link, 0);
                if (GET_CODE(pat) == CLOBBER){
                    rtx dest = SET_DEST(pat);
                    if (REG_P(dest)){
                        int xregno = REGNO(dest);
                        int end_xregno = END_REGNO(dest);
                        if (xregno < regno + nregs && end_xregno > regno)
                            return 0;
                        else
                            if (xregno < valueno + valuenregs && end_xregno > valueno)
                                return 0;
                            else
                                if (goal_mem_addr_varies && reg_overlap_mentioned_for_reload_p(dest, goal))
                                    return 0;
                    }else
                        if (goal_mem && MEM_P(dest) && !push_operand(dest, GET_MODE(dest)))
                            return 0;
                        else
                            if (need_stable_sp && push_operand(dest, GET_MODE(dest)))
                                return 0;
                }
            }
        }
    }
}"
Literal Encoding,0,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.c-torture/execute/pr59101.c#L6,pr59101.c#L6,~a & 4102790424LL
Literal Encoding,1,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/net/decnet/sysctl_net_decnet.c#L41,sysctl_net_decnet.c#L41,768 << 3
Literal Encoding,2,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/graphite/fuse-1.c#L35,fuse-1.c#L35,i ^ 12
Literal Encoding,3,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/modules/freetype2/src/cff/cffload.c#L2004,cffload.c#L2004,100L << 16
Literal Encoding,4,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/security/sandbox/chromium/base/hash.h#L51,hash.h#L51,481046412LL << 32
Literal Encoding,5,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/media/libtremor/lib/tremor_floor0.c#L111,tremor_floor0.c#L111,27 << 15
Literal Encoding,6,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/media/pci/cx18/cx18-av-vbi.c#L232,cx18-av-vbi.c#L232,9 << (4 * x)
Literal Encoding,7,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/ath/ath_hal/ar5210/ar5210_misc.c#L385,ar5210_misc.c#L385,25 << 2
Literal Encoding,8,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/arch/x86/lib/insn.c#L108,insn.c#L108,insn->addr_bytes ^= 12
Literal Encoding,9,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/pr66299-1.c#L70,pr66299-1.c#L70,10U << x
Literal Encoding,10,https://github.com/mongodb/mongo/blob/67f735e6705091659e2a8cf46a9285f09bcf749a/src/third_party/libstemmer_c/src_c/stem_ISO_8859_1_french.c#L1096,stem_ISO_8859_1_french.c#L1096,1069056 >> (z->p[z->c - 1] & 0x1f)
Literal Encoding,11,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/media/webrtc/trunk/webrtc/modules/audio_processing/ns/nsx_core_mips.c#L42,nsx_core_mips.c#L42,11 << 12
Literal Encoding,12,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/cp/cpddk.c#L6131,cpddk.c#L6131,"(short )(l57(a, 2)) << 8 & 768"
Literal Encoding,13,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/iio/imu/adis16400_core.c#L159,adis16400_core.c#L159,819200 >> t
Literal Encoding,14,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/libgomp/testsuite/libgomp.c++/reduction-5.C#L23,reduction-5.C#L23,i & 30
Literal Encoding,15,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/macintosh/windfarm_rm31.c#L360,windfarm_rm31.c#L360,50 << 16
Literal Encoding,16,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/isdn/hisax/l3dss1.c#L2925,l3dss1.c#L2925,81 | 0x80
Literal Encoding,17,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/media/common/v4l2-tpg/v4l2-tpg-core.c#L873,v4l2-tpg-core.c#L873,235 << 4
Literal Encoding,18,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/bwn/if_bwn_cordic.h#L72,if_bwn_cordic.h#L72,180 << 16
Literal Encoding,19,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/media/libjpeg/simd/jfdctfst-altivec.c#L103,jfdctfst-altivec.c#L103,F_0_541 << CONST_SHIFT
Literal Encoding,20,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/libgomp/testsuite/libgomp.c++/reduction-9.C#L82,reduction-9.C#L82,i & 30
Literal Encoding,21,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/contrib/octeon-sdk/cvmx-srio.c#L915,cvmx-srio.c#L915,11 << 16
Literal Encoding,22,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/config/epiphany/epiphany.c#L1967,epiphany.c#L1967,(current_frame_info.pretend_size + 4) & -8
Literal Encoding,23,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/macintosh/windfarm_pm72.c#L535,windfarm_pm72.c#L535,30 << 20
Literal Encoding,24,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/gpu/drm/i915/intel_sdvo.c#L1354,intel_sdvo.c#L1354,9 << 19
Literal Encoding,25,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/gcc/config/ia64/unwind-ia64.c#L1814,unwind-ia64.c#L1814,context->rp & -16
Literal Encoding,26,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/drm2/i915/intel_sdvo.c#L1167,intel_sdvo.c#L1167,9 << 19
Literal Encoding,27,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/sound/firewire/motu/motu.c#L52,motu.c#L52,100 << fw_dev->max_speed
Literal Encoding,28,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/toolkit/components/url-classifier/chromium/safebrowsing.pb.cc#L9645,safebrowsing.pb.cc#L9645,cached_has_bits & 14u
Literal Encoding,29,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/usb/host/isp1362-hcd.c#L2555,isp1362-hcd.c#L2555,25 << 24
Literal Encoding,30,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.target/i386/avx512dq-vbroadcasti32x8-2.c#L27,avx512dq-vbroadcasti32x8-2.c#L27,SIZE | 123
Literal Encoding,31,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/media/mtransport/third_party/nICEr/src/ice/ice_component.c#L354,ice_component.c#L354,*port |= 49152
Literal Encoding,32,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/drm2/i915/intel_pm.c#L2567,intel_pm.c#L2567,40 << 16
Literal Encoding,33,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/sound/pci/azt3328.c#L644,azt3328.c#L644,13 << 10
Literal Encoding,34,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/js/src/ctypes/libffi/src/nios2/ffi.c#L284,ffi.c#L284,9 << 22
Literal Encoding,35,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/alc/if_alc.c#L960,if_alc.c#L960,44 << ANA_LONG_CABLE_TH_100_SHIFT
Literal Encoding,36,https://github.com/WebKit/webkit/blob/e8c73206a09f734bc64f77d6275a727aa2811754/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/tests/test_opus_api.c#L292,test_opus_api.c#L292,(3 - (fp3s & 3)) * 13 & 119
Literal Encoding,37,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/media/webrtc/trunk/webrtc/p2p/base/stunrequest_unittest.cc#L61,stunrequest_unittest.cc#L61,100 << i
Literal Encoding,38,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/arch/x86/kernel/pvclock.c#L38,pvclock.c#L38,1000000ULL << 32
Literal Encoding,39,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/sound/pci/trident/trident_main.c#L725,trident_main.c#L725,48000 << 12
Logic As Control Flow,0,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/byacc/test/btyacc/quote_calc3.tab.c#L940,quote_calc3.tab.c#L940,((yyn = yyrindex[yystate]) != 0) && (yyn += yychar) >= 0
Logic As Control Flow,1,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/mm/hugetlb.c#L2264,hugetlb.c#L2264,"for_each_node_mask_to_free(h, nr_nodes, node, nodes_allowed)"
Logic As Control Flow,2,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/net/xfrm/xfrm_state.c#L985,xfrm_state.c#L985,"tmpl->id.spi && (x0 = __xfrm_state_lookup(net, mark, daddr, tmpl->id.spi, tmpl->id.proto, encap_family)) != NULL"
Logic As Control Flow,3,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/isdn/hisax/sedlbauer.c#L371,sedlbauer.c#L371,(val & ISAR_IRQSTA) && --cnt
Logic As Control Flow,4,https://github.com/mongodb/mongo/blob/67f735e6705091659e2a8cf46a9285f09bcf749a/src/third_party/wiredtiger/ext/encryptors/rotn/rotn_encrypt.c#L358,rotn_encrypt.c#L358,(rotn_encryptor->secretkey = malloc(len + 1)) == NULL || (rotn_encryptor->shift_forw = malloc(len)) == NULL || (rotn_encryptor->shift_back = malloc(len)) == NULL
Logic As Control Flow,5,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/xl/if_xl.c#L3106,if_xl.c#L3106,sc->xl_wdog_timer == 0 || --sc->xl_wdog_timer != 0
Logic As Control Flow,6,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/iio/accel/mma9553.c#L314,mma9553.c#L314,"mma9553_get_bits(config, MMA9553_MASK_CONF_CONFIG) && --retries > 0"
Logic As Control Flow,7,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/arm/amlogic/aml8726/aml8726_machdep.c#L70,aml8726_machdep.c#L70,"(freq = aml8726_clkmsr_bus_frequency()) == 0 || (node = OF_finddevice(""/soc"")) == 0"
Logic As Control Flow,8,https://github.com/apache/httpd/blob/6fe234860d15c797f34bc9c0e290fd23a73233c7/modules/filters/mod_include.c#L1880,mod_include.c#L1880,!error_fmt && ((status = ap_run_sub_req(rr)))
Logic As Control Flow,9,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/byacc/test/yacc/varsyntax_calc1.tab.c#L885,varsyntax_calc1.tab.c#L885,((yyn = yygindex[yym]) != 0) && (yyn += yystate) >= 0
Logic As Control Flow,10,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/cfgcleanup.c#L2852,cfgcleanup.c#L2852,"!(mode & CLEANUP_CFGLAYOUT) && (!JUMP_P(BB_END(b)) || (reload_completed ? simplejump_p(BB_END(b)) : (onlyjump_p(BB_END(b)) && !tablejump_p(BB_END(b), NULL, NULL)))) && (next = merge_blocks_move(s, b, c, mode))"
Logic As Control Flow,11,https://github.com/git/git/blob/ba78f398be65e941b93276680f68a81075716472/read-cache.c#L576,read-cache.c#L576,"pos >= istate->cache_nr || compare_name((ce = istate->cache[pos]), path, namelen)"
Logic As Control Flow,12,https://github.com/WebKit/webkit/blob/e8c73206a09f734bc64f77d6275a727aa2811754/Source/WebCore/css/CSSComputedStyleDeclaration.cpp#L2350,CSSComputedStyleDeclaration.cpp#L2350,m_pseudoElementSpecifier == AFTER && (pseudoElement = m_element->afterPseudoElement())
Logic As Control Flow,13,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/ipc/chromium/src/third_party/libevent/evmap.c#L317,evmap.c#L317,EVENT_DEBUG_MODE_IS_ON() && (old_ev = LIST_FIRST(&ctx->events))
Logic As Control Flow,14,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/llvm/tools/lldb/source/Plugins/ExpressionParser/Go/GoParser.cpp#L388,GoParser.cpp#L388,(lit = match(GoLexer::LIT_INTEGER)) || (lit = match(GoLexer::LIT_FLOAT)) || (lit = match(GoLexer::LIT_IMAGINARY)) || (lit = match(GoLexer::LIT_RUNE)) || (lit = match(GoLexer::LIT_STRING))
Logic As Control Flow,15,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/internal-fn.c#L1890,internal-fn.c#L1890,"!VECTOR_MODE_P(GET_MODE(lhsr)) || (op = optab_for_tree_code(code, TREE_TYPE(arg0), optab_default)) == unknown_optab"
Logic As Control Flow,16,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/usr.bin/m4/eval.c#L340,eval.c#L340,argc > 2 && (n = atoi(argv[2])) != 0
Logic As Control Flow,17,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/crypto/openssh/authfile.c#L408,authfile.c#L408,"(strlcpy(file, filename, sizeof file) < sizeof (file)) && (strlcat(file, "".pub"", sizeof file) < sizeof (file)) && (r = sshkey_try_load_public(pub, file, commentp)) == 0"
Logic As Control Flow,18,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/crypto/openssl/apps/passwd.c#L97,passwd.c#L97,!badopt && !opt_done && argv[++i] != NULL
Logic As Control Flow,19,https://github.com/mongodb/mongo/blob/67f735e6705091659e2a8cf46a9285f09bcf749a/src/third_party/wiredtiger/ext/datasources/helium/helium.c#L585,helium.c#L585,commit && (ret = he_commit(hs->he_txn)) != 0
Logic As Control Flow,20,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/acpica/acpi_pcib_acpi.c#L170,acpi_pcib_acpi.c#L170,"acpi_disabled(""pcib"") || (h = acpi_get_handle(dev)) == NULL"
Logic As Control Flow,21,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/intl/icu/source/tools/toolutil/pkgitems.cpp#L470,pkgitems.cpp#L470,length < (int32_t)sizeof (UConverterStaticData) || (uint32_t)length < (staticDataSize = ds->readUInt32(inStaticData->structSize))
Logic As Control Flow,22,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/gcc/passes.c#L238,passes.c#L238,dump_initialized_p(i) && (dfi->flags & TDF_GRAPH) != 0 && (name = get_dump_file_name(i)) != NULL
Logic As Control Flow,23,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/gpu/drm/gma500/intel_gmbus.c#L288,intel_gmbus.c#L288,--len && ++loop < 4
Logic As Control Flow,24,https://github.com/mysql/mysql-server/blob/0138556a55168da12eaf0bc3038947148d6b0863/sql/spatial.cc#L382,spatial.cc#L382,"geom_type < wkb_first || geom_type > wkb_last || !(result = create_by_typeid(buffer, (int)geom_type))"
Logic As Control Flow,25,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/crypto/heimdal/lib/wind/normalize.c#L278,normalize.c#L278,"old_cc != cc && (comb = find_composition(v, 2))"
Logic As Control Flow,26,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/libgomp/testsuite/libgomp.c++/collapse-2.C#L181,collapse-2.C#L181,omp_get_num_threads() == 8 && ((3 - *i) * 12 + (-3 - *j) * 4 + (16 - *k) != (omp_get_thread_num() * 9 + f++))
Logic As Control Flow,27,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/crypto/openssl/apps/srp.c#L594,srp.c#L594,!row[DB_srpid] || !row[DB_srpgN] || !row[DB_srptype] || !row[DB_srpverifier] || !row[DB_srpsalt] || (userinfo && (!(row[DB_srpinfo] = BUF_strdup(userinfo))))
Logic As Control Flow,28,https://github.com/mysql/mysql-server/blob/0138556a55168da12eaf0bc3038947148d6b0863/storage/innobase/fsp/fsp0file.cc#L573,fsp0file.cc#L573,*b == '\0' && --nonzero_bytes != 0
Logic As Control Flow,29,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/media/ffvpx/libavcodec/options.c#L62,options.c#L62,prev && (c = av_codec_next(c))
Logic As Control Flow,30,https://github.com/emacs-mirror/emacs/blob/cb73c70180f57f3fb99fae3aaefbacf0a61cea3f/src/xfont.c#L685,xfont.c#L685,len <= 0 || (len = xfont_encode_coding_xlfd(name)) < 0
Logic As Control Flow,31,https://github.com/mysql/mysql-server/blob/0138556a55168da12eaf0bc3038947148d6b0863/sql/auth/sql_auth_cache.cc#L506,sql_auth_cache.cc#L506,wild_pos == 1 && *str == wild_many && *(++str) == '\0'
Logic As Control Flow,32,https://github.com/mysql/mysql-server/blob/0138556a55168da12eaf0bc3038947148d6b0863/storage/ndb/src/kernel/blocks/dbdih/DbdihMain.cpp#L23243,DbdihMain.cpp#L23243,tabPtr.p->tabStatus != TabRecord::TS_ACTIVE || ++fragid >= tabPtr.p->totalfragments
Logic As Control Flow,33,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/net/ipv6/ip6mr.c#L2328,ip6mr.c#L2328,"!dev || (vif = ip6mr_find_vif(mrt, dev)) < 0"
Logic As Control Flow,34,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/cse.c#L6557,cse.c#L6557,NONDEBUG_INSN_P(insn) && num_insns++ > PARAM_VALUE(PARAM_MAX_CSE_INSNS)
Logic As Control Flow,35,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/dom/html/HTMLAudioElement.cpp#L53,HTMLAudioElement.cpp#L53,!win || !(doc = win->GetExtantDoc())
Logic As Control Flow,36,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/cddl/contrib/opensolaris/lib/libdtrace/common/dt_module.c#L1501,dt_module.c#L1501,"dmp->dm_extern != NULL && (idp = dt_idhash_lookup(dmp->dm_extern, name)) != NULL"
Logic As Control Flow,37,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/gcc/c-typeck.c#L890,c-typeck.c#L890,"TREE_TYPE(t1) != TREE_TYPE(t2) && 0 == (val = comptypes_internal(TREE_TYPE(t1), TREE_TYPE(t2)))"
Logic As Control Flow,38,https://github.com/mongodb/mongo/blob/67f735e6705091659e2a8cf46a9285f09bcf749a/src/third_party/wiredtiger/src/utilities/util_dump.c#L323,util_dump.c#L323,"(*p == ',' || *p == ')') && --nkeys == 0"
Logic As Control Flow,39,https://github.com/emacs-mirror/emacs/blob/cb73c70180f57f3fb99fae3aaefbacf0a61cea3f/src/composite.c#L941,composite.c#L941,"c > ' ' && (c == ZERO_WIDTH_NON_JOINER || c == ZERO_WIDTH_JOINER || (val = CHAR_TABLE_REF(Vunicode_category_table, c), (INTEGERP(val) && (XINT(val) <= UNICODE_CATEGORY_So))))"
Macro Operator Precedence,0,https://github.com/WebKit/webkit/blob/e8c73206a09f734bc64f77d6275a727aa2811754/Source/ThirdParty/libwebrtc/Source/third_party/protobuf/php/ext/google/protobuf/upb.h#L6846,upb.h#L6846,"RETURN_REFFED(upb::FieldDef, upbdefs_google_protobuf_FieldDescriptorProto_type)"
Macro Operator Precedence,1,https://github.com/mysql/mysql-server/blob/0138556a55168da12eaf0bc3038947148d6b0863/extra/rapidjson/test/unittest/writertest.cpp#L169,writertest.cpp#L169,<!!!>
Macro Operator Precedence,2,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/fs/ext4/mballoc.c#L3088,mballoc.c#L3088,<!!!>
Macro Operator Precedence,3,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/netinet/sctp_usrreq.c#L1737,sctp_usrreq.c#L1737,"SCTP_CHECK_AND_CAST(av, optval, struct sctp_assoc_value, *optsize)"
Macro Operator Precedence,4,https://github.com/mongodb/mongo/blob/67f735e6705091659e2a8cf46a9285f09bcf749a/src/mongo/db/geo/geoparser.cpp#L377,geoparser.cpp#L377,"BAD_VALUE(""Unknown CRS name: "" << name)"
Macro Operator Precedence,5,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/llvm/tools/lldb/source/Utility/FastDemangle.cpp#L1435,FastDemangle.cpp#L1435,"WRITE(""operator "")"
Macro Operator Precedence,6,https://github.com/WebKit/webkit/blob/e8c73206a09f734bc64f77d6275a727aa2811754/Source/ThirdParty/ANGLE/src/compiler/translator/glslang_tab.cpp#L3112,glslang_tab.cpp#L3112,"ES3_OR_NEWER(""%="", (yyloc), ""integer modulus operator"")"
Macro Operator Precedence,7,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/ipw/if_ipw.c#L1676,if_ipw.c#L1676,"DPRINTFN(5, (""sending fragment (%d)\n"", i))"
Macro Operator Precedence,8,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/netwerk/sctp/src/netinet/sctp_usrreq.c#L3387,sctp_usrreq.c#L3387,"SCTP_CHECK_AND_CAST(stimo, optval, struct sctp_timeouts, *optsize)"
Macro Operator Precedence,9,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/gfx/skia/skia/src/utils/SkLuaCanvas.cpp#L123,SkLuaCanvas.cpp#L123,"AUTO_LUA(""concat"")"
Macro Operator Precedence,10,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/ldns/compat/fake-rfc2553.h#L169,fake-rfc2553.h#L169,freeaddrinfo(struct addrinfo *)
Macro Operator Precedence,11,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/kern/subr_unit.c#L628,subr_unit.c#L628,"KASSERT(y != -1, (""UNR corruption: No clear bit in bitmap.""))"
Macro Operator Precedence,12,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/arch/x86/events/intel/uncore_snbep.c#L814,uncore_snbep.c#L814,"__BITS_VALUE(atomic_read(&er->ref), i, 6)"
Macro Operator Precedence,13,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/lib/libc/rpc/auth_des.c#L244,auth_des.c#L244,"FREE(ad->ad_netid, strlen(ad->ad_netid) + 1)"
Macro Operator Precedence,14,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/crypto/heimdal/lib/krb5/test_acl.c#L89,test_acl.c#L89,"STRINGMATCH(context, ""ret 2 match 1"", s1, ""foo"")"
Macro Operator Precedence,15,https://github.com/mysql/mysql-server/blob/0138556a55168da12eaf0bc3038947148d6b0863/extra/rapidjson/test/unittest/readertest.cpp#L389,readertest.cpp#L389,<!!!>
Macro Operator Precedence,16,https://github.com/git/git/blob/ba78f398be65e941b93276680f68a81075716472/compat/nedmalloc/malloc.c.h#L3894,malloc.c.h#L3894,(msegmentptr)(chunk2mem(sp))
Macro Operator Precedence,17,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/tools/perf/util/unwind-libunwind-local.c#L264,unwind-libunwind-local.c#L264,"dw_read_encoded_value(enc, end, hdr.fde_count_enc)"
Macro Operator Precedence,18,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/testing/gtest/gmock/include/gmock/gmock-actions.h#L155,gmock-actions.h#L155,"class GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_(::std::string, """")
{


}"
Macro Operator Precedence,19,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/netwerk/base/RequestContextService.cpp#L162,RequestContextService.cpp#L162,"LOG((""RequestContext::AddBlockingTransaction this=%p blockers=%u"",
       this, static_cast<uint32_t>(mBlockingTransactionCount)))"
Macro Operator Precedence,20,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/net/ethernet/altera/altera_sgdma.c#L481,altera_sgdma.c#L481,"list_remove_head(&priv->txlisthd, buffer, struct tse_buffer, lh)"
Macro Operator Precedence,21,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.c-torture/compile/20001123-1.c#L10,20001123-1.c#L10,"typeof __builtin_va_arg(va, struct X*)"
Macro Operator Precedence,22,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/usr.bin/lastcomm/readrec.c#L236,readrec.c#L236,<!!!>
Macro Operator Precedence,23,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/tcsh/tw.init.c#L409,tw.init.c#L409,CLRDIR(tw_cmd_state.dfd)
Macro Operator Precedence,24,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/infiniband/hw/hfi1/driver.c#L811,driver.c#L811,"prescan_rxq(rcd, &packet)"
Macro Operator Precedence,25,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/cpp/macro1.c#L53,macro1.c#L53,"bar(bar, 32)"
Macro Operator Precedence,26,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/g++.dg/plugin/diagnostic-test-expressions-1.C#L543,diagnostic-test-expressions-1.C#L543,+ 1
Macro Operator Precedence,27,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/toolkit/components/remote/nsXRemoteService.cpp#L207,nsXRemoteService.cpp#L207,TO_LITTLE_ENDIAN32(*reinterpret_cast<int32_t*>(data))
Macro Operator Precedence,28,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/samples/mic/mpssd/mpssd.c#L108,mpssd.c#L108,ARRAY_SIZE(virtnet_dev_page.vqconfig)
Macro Operator Precedence,29,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/netwerk/protocol/http/nsHttpConnectionMgr.cpp#L4321,nsHttpConnectionMgr.cpp#L4321,"LOG((""nsHalfOpenSocket::StartFastOpen SetupConn failed ""
             ""[this=%p rv=%x]\n"", this, static_cast<uint32_t>(rv)))"
Macro Operator Precedence,30,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/elftoolchain/libelf/libelf_allocate.c#L99,libelf_allocate.c#L99,FREE(e->e_u.e_ar.e_symtab)
Macro Operator Precedence,31,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/media/pci/cobalt/cobalt-flash.c#L93,cobalt-flash.c#L93,ADRS(dest - 2)
Macro Operator Precedence,32,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/toolkit/components/protobuf/src/google/protobuf/wrappers.pb.cc#L2362,wrappers.pb.cc#L2362,"DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            ""google.protobuf.StringValue.value""))"
Macro Operator Precedence,33,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/crypto/heimdal/lib/asn1/template.c#L552,template.c#L552,"DPO(val[i].data, val[i].length - 1)"
Macro Operator Precedence,34,https://github.com/mongodb/mongo/blob/67f735e6705091659e2a8cf46a9285f09bcf749a/src/third_party/mozjs-45/extract/js/src/vm/CharacterEncoding.cpp#L282,CharacterEncoding.cpp#L282,"INVALID(ReportBufferTooSmall, /* dummy = */ 0, 1)"
Macro Operator Precedence,35,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/SemaCXX/switch-implicit-fallthrough-cxx98.cpp#L107,switch-implicit-fallthrough-cxx98.cpp#L107,"MY_CASE(44, break)"
Macro Operator Precedence,36,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/tools/testing/selftests/timers/raw_skew.c#L133,raw_skew.c#L133,"shift_right(ppm, 16)"
Macro Operator Precedence,37,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/apr/random/unix/apr_random.c#L206,apr_random.c#L206,"hash_add(g->key_hash,g->pools[n].pool,g->pools[n].bytes)"
Macro Operator Precedence,38,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/media/libvpx/libvpx/third_party/libyuv/include/libyuv/video_common.h#L105,video_common.h#L105,"FOURCC('d', 'm', 'b', '1')"
Macro Operator Precedence,39,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/net/wireless/intel/iwlegacy/common.c#L1096,common.c#L1096,"SLP_VEC(4, 7, 10, 10, 0xFF)"
Omitted Curly Braces,0,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/usr.sbin/lpr/common_source/matchjobs.c#L319,matchjobs.c#L319,"if (jobnum > 99999)
    goto bad_input;"
Omitted Curly Braces,1,https://github.com/WebKit/webkit/blob/e8c73206a09f734bc64f77d6275a727aa2811754/Source/WebCore/html/HTMLTableElement.cpp#L243,HTMLTableElement.cpp#L243,"if (!row)
    break;"
Omitted Curly Braces,2,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/llvm/utils/TableGen/InstrInfoEmitter.cpp#L491,InstrInfoEmitter.cpp#L491,"if (Inst.isAdd)
    OS << ""|(1ULL<<MCID::Add)"";"
Omitted Curly Braces,3,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/sound/soc/soc-generic-dmaengine-pcm.c#L236,soc-generic-dmaengine-pcm.c#L236,"if (pcm->config)
    fn = pcm->config->compat_filter_fn;"
Omitted Curly Braces,4,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/ath/ath_hal/ar5210/ar5210_keycache.c#L140,ar5210_keycache.c#L140,"if (k->kv_len <= 104 / NBBY)
    key4 &= 0xff;"
Omitted Curly Braces,5,https://github.com/WebKit/webkit/blob/e8c73206a09f734bc64f77d6275a727aa2811754/Source/WebCore/svg/SVGLength.h#L144,SVGLength.h#L144,"if (isReadOnly())
    return Exception{NoModificationAllowedError};"
Omitted Curly Braces,6,https://github.com/WebKit/webkit/blob/e8c73206a09f734bc64f77d6275a727aa2811754/Source/JavaScriptCore/runtime/ArrayPrototype.cpp#L999,ArrayPrototype.cpp#L999,"if (UNLIKELY(!thisObj))
    return encodedJSValue();"
Omitted Curly Braces,7,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/reload.c#L4141,reload.c#L4141,"if ((MEM_P(operand) || (REG_P(operand) && REGNO(operand) >= FIRST_PSEUDO_REGISTER)) && (goal_alternative[goal_alternative_matches[i]] != NO_REGS))
    operand_reloadnum[i] = operand_reloadnum[goal_alternative_matches[i]] = push_reload(recog_data.operand[goal_alternative_matches[i]], recog_data.operand[i], recog_data.operand_loc[goal_alternative_matches[i]], recog_data.operand_loc[i], (enum reg_class)goal_alternative[goal_alternative_matches[i]], operand_mode[goal_alternative_matches[i]], operand_mode[i], 0, 1, goal_alternative_matches[i], RELOAD_OTHER);"
Omitted Curly Braces,8,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.c-torture/execute/pr38051.c#L75,pr38051.c#L75,"if (a1 != b1)
    return mymemcmp1((a1), (b1));"
Omitted Curly Braces,9,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/netpfil/ipfw/test/main.c#L401,main.c#L401,"if (pass == 0)
    return;"
Omitted Curly Braces,10,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/dfp/pr41049.c#L101,pr41049.c#L101,"TESTVAL_NONNEG (10000, SUFFIX, sizeof (TYPE));"
Omitted Curly Braces,11,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/OpenMP/distribute_simd_loop_messages.cpp#L89,distribute_simd_loop_messages.cpp#L89,"for (;ii < 10;++ii)
    c[ii] = a[ii];"
Omitted Curly Braces,12,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/intl/icu/source/i18n/decNumber.cpp#L3885,decNumber.cpp#L3885,"if (decNumberIsInfinite(lhs)){
    if (decNumberIsInfinite(rhs) && diffsign){
        *status |= DEC_Invalid_operation;
        break;
    }
    bits = lhs->bits & DECNEG;
}else
    bits = (rhs->bits ^ negate) & DECNEG;"
Omitted Curly Braces,13,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/mmc/host/cavium-octeon.c#L102,cavium-octeon.c#L102,"if (!host->has_ciu3)
    up (&octeon_bootbus_sem);
else
    up(&host->mmc_serializer);"
Omitted Curly Braces,14,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/arch/arm/mach-u300/dummyspichip.c#L185,dummyspichip.c#L185,"if (status < 0)
    pr_warn(""Simple test 9: FAILURE: failed with status %d (probably FIFO overrun)\n"", status);
else
    pr_info(""Simple test 9: SUCCESS!\n"");"
Omitted Curly Braces,15,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/mips/mips/pm_machdep.c#L198,pm_machdep.c#L198,"if (error != 0)
    return (error);"
Omitted Curly Braces,16,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/libarchive/libarchive/archive_entry.c#L581,archive_entry.c#L581,"if (archive_mstring_get_wcs(entry->archive, &entry->ae_pathname, &p) == 0)
    return (p);"
Omitted Curly Braces,17,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/net/wireless/broadcom/b43legacy/main.c#L3682,main.c#L3682,"if (!have_gphy)
    have_bphy = 1;"
Omitted Curly Braces,18,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/llvm/tools/clang/lib/StaticAnalyzer/Core/RegionStore.cpp#L1818,RegionStore.cpp#L1818,"if (!hasPartialLazyBinding)
    return UndefinedVal();"
Omitted Curly Braces,19,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/kernel/trace/trace_events_hist.c#L1596,trace_events_hist.c#L1596,"if (cmd_ops->set_filter)
    cmd_ops->set_filter(NULL, trigger_data, NULL);"
Omitted Curly Braces,20,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/isdn/hisax/avm_pci.c#L406,avm_pci.c#L406,"if (bcs->cs->debug & L1_DEB_WARN)
    debugl1(bcs->cs, ""ch%d XDU"", bcs->channel);"
Omitted Curly Braces,21,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/misc/eeprom/at24.c#L695,at24.c#L695,"if (at24->use_smbus_write == I2C_SMBUS_I2C_BLOCK_DATA)
    at24->write_func = at24_eeprom_write_smbus_block;
else
    at24->write_func = at24_eeprom_write_smbus_byte;"
Omitted Curly Braces,22,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/net/ethernet/chelsio/cxgb4/l2t.c#L485,l2t.c#L485,"if (tp->vlan_shift >= 0 && l2t->vlan != VLAN_NONE)
    ntuple |= (u64)(FT_VLAN_VLD_F | l2t->vlan) << tp->vlan_shift;"
Omitted Curly Braces,23,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/bhnd/siba/siba.c#L807,siba.c#L807,"if ((dinfo = device_get_ivars(child)) != NULL)
    siba_free_dinfo(dev, dinfo);"
Omitted Curly Braces,24,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/media/i2c/m5mols/m5mols_controls.c#L397,m5mols_controls.c#L397,"if (ret < 0)
    return ret;"
Omitted Curly Braces,25,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/js/src/jit/arm/CodeGenerator-arm.cpp#L2413,CodeGenerator-arm.cpp#L2413,"if (accessType == Scalar::Int64)
    masm.wasmStoreI64(mir->access(), ToRegister64(lir->getInt64Operand(lir->ValueIndex)), HeapReg, ptr, ptr);
else
    masm.wasmStore(mir->access(), ToAnyRegister(lir->getOperand(lir->ValueIndex)), HeapReg, ptr, ptr);"
Omitted Curly Braces,26,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/mm/hugetlb.c#L3997,hugetlb.c#L3997,"if (IS_ERR(page))
    goto out;"
Omitted Curly Braces,27,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/accessible/base/nsCoreUtils.cpp#L485,nsCoreUtils.cpp#L485,"while (walkUp && walkUp != aRootContent && !walkUp->GetAttr(kNameSpaceID_None, nsGkAtoms::lang, aLanguage))
    walkUp = walkUp->GetParent();"
Omitted Curly Braces,28,https://github.com/mongodb/mongo/blob/67f735e6705091659e2a8cf46a9285f09bcf749a/src/third_party/libstemmer_c/src_c/stem_ISO_8859_1_french.c#L535,stem_ISO_8859_1_french.c#L535,"if (ret < 0)
    goto lab4;"
Omitted Curly Braces,29,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/modules/pdfium/pdfium/fxjs/cfxjse_runtimedata.cpp#L104,cfxjse_runtimedata.cpp#L104,"if (!pData->m_pFXJSERuntimeData)
    pData->m_pFXJSERuntimeData = CFXJSE_RuntimeData::Create(pIsolate);"
Omitted Curly Braces,30,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/libstdc++-v3/testsuite/tr1/5_numerical_facilities/special_functions/09_cyl_bessel_j/check_value.cc#L194,check_value.cc#L194,"if (std::abs(frac) > max_abs_frac)
    max_abs_frac = std::abs(frac);"
Omitted Curly Braces,31,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/llvm/tools/lldb/source/Utility/FastDemangle.cpp#L1261,FastDemangle.cpp#L1261,"if (!ParseSubstitution())
    return false;"
Omitted Curly Braces,32,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/gomp/loop-1.c#L74,loop-1.c#L74,for (j = 0;j < 16;j++);
Omitted Curly Braces,33,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/ath/ath_hal/ar5416/ar5416_reset.c#L1388,ar5416_reset.c#L1388,"if (type == HAL_RESET_COLD)
    rst_flags |= AR_RTC_RC_MAC_COLD;"
Omitted Curly Braces,34,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/netbsd-tests/lib/libcurses/slave/curses_commands.c#L6260,curses_commands.c#L6260,"if (check_arg_count(nargs, 1) == 1)
    return;"
Omitted Curly Braces,35,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/llvm/tools/lldb/source/Plugins/Process/Utility/RegisterContextThreadMemory.cpp#L99,RegisterContextThreadMemory.cpp#L99,"if (m_reg_ctx_sp)
    return m_reg_ctx_sp->ReadRegister(reg_info, reg_value);"
Omitted Curly Braces,36,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/arch/powerpc/mm/hash_utils_64.c#L1284,hash_utils_64.c#L1284,"if (user_region && mm_is_thread_local(mm))
    flags |= HPTE_LOCAL_UPDATE;"
Omitted Curly Braces,37,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/zstd/programs/bench.c#L356,bench.c#L356,"if (!dCompleted)
    memset(resultBuffer, 0xD6, srcSize);"
Omitted Curly Braces,38,https://github.com/apache/subversion/blob/0a73cab17bd4114d1ce96dc5b89b0e44ec0fd5d1/subversion/bindings/javahl/native/RemoteSession.cpp#L427,RemoteSession.cpp#L427,"if (JNIUtil::isExceptionThrown())
    return;"
Omitted Curly Braces,39,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/crypto/openssl/crypto/bn/bn_gcd.c#L267,bn_gcd.c#L267,"if (!BN_nnmod(B, B, A, ctx))
    goto err;"
Operator Precedence,0,https://github.com/mysql/mysql-server/blob/0138556a55168da12eaf0bc3038947148d6b0863/storage/myisam/mi_create.c#L853,mi_create.c#L853,file_length >= 1ULL << 24
Operator Precedence,1,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/usb/host/ohci-hcd.c#L425,ohci-hcd.c#L425,&ohci->regs->intrdisable
Operator Precedence,2,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/scsi/megaraid.c#L749,megaraid.c#L749,*cmd->cmnd
Operator Precedence,3,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/libarchive/libarchive/archive_read_support_format_rar.c#L1957,archive_read_support_format_rar.c#L1957,&rar->ppmd7_context
Operator Precedence,4,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/sound/core/control.c#L1857,control.c#L1857,&card->ctl_dev
Operator Precedence,5,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/gfx/cairo/cairo/src/cairo-xlib-surface.c#L2799,cairo-xlib-surface.c#L2799,&display->base
Operator Precedence,6,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/tcpdump/print-eigrp.c#L273,print-eigrp.c#L273,&eigrp_tlv_header->type
Operator Precedence,7,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/contrib/alpine-hal/al_hal_udma_config.c#L151,al_hal_udma_config.c#L151,&axi_m2s->desc_read
Operator Precedence,8,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/video/backlight/as3711_bl.c#L278,as3711_bl.c#L278,&pdata->su1_max_uA
Operator Precedence,9,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/media/i2c/noon010pc30.c#L490,noon010pc30.c#L490,&info->lock
Operator Precedence,10,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/cam/mmc/mmc_xpt.c#L770,mmc_xpt.c#L770,&done_ccb->mmcio
Operator Precedence,11,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/misc/atmel-ssc.c#L57,atmel-ssc.c#L57,&ssc->pdev->dev
Operator Precedence,12,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/net/ethernet/ibm/ibmveth.c#L1710,ibmveth.c#L1710,&dev->dev.kobj
Operator Precedence,13,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/media/pci/bt8xx/bttv-driver.c#L4246,bttv-driver.c#L4246,&btv->ctrl_handler
Operator Precedence,14,https://github.com/WebKit/webkit/blob/e8c73206a09f734bc64f77d6275a727aa2811754/Source/ThirdParty/libwebrtc/Source/third_party/protobuf/php/ext/google/protobuf/upb.c#L9872,upb.c#L9872,b64lookup(ptr[0]) << 18 | b64lookup(ptr[1]) << 12 | b64lookup(ptr[2]) << 6
Operator Precedence,15,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/s390/char/tty3270.c#L1167,tty3270.c#L1167,"i = 0, cell = line->cells"
Operator Precedence,16,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/kernel/workqueue.c#L3904,workqueue.c#L3904,&wq->dfl_pwq->pool->lock
Operator Precedence,17,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/security/nss/lib/softoken/pkcs11c.c#L1519,pkcs11c.c#L1519,*context->update
Operator Precedence,18,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/lib/CodeGen/CGCall.cpp#L292,CGCall.cpp#L292,"SmallVector < FunctionProtoType::ExtParameterInfo, 16 > paramInfos"
Operator Precedence,19,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/binutils/bfd/ieee.c#L930,ieee.c#L930,ieee->external_symbol_max_index - ieee->external_symbol_min_index + 1
Operator Precedence,20,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/pms/freebsd/driver/ini/src/agtiapi.c#L3111,agtiapi.c#L3111,&pmcsc->sendLock
Operator Precedence,21,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/net/wireless/ath/ath10k/mac.c#L6448,mac.c#L6448,&arvif->wmm_params
Operator Precedence,22,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.c-torture/compile/pr61684.c#L15,pr61684.c#L15,(c && 1) & *b
Operator Precedence,23,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/gpu/drm/i915/gvt/sched_policy.c#L238,sched_policy.c#L238,&gvt->service_request
Operator Precedence,24,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/fs/jffs2/write.c#L485,write.c#L485,&dir_f->vfs_inode
Operator Precedence,25,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/sparc64/pci/fire.c#L722,fire.c#L722,&sc->sc_dma_methods
Operator Precedence,26,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/ofed/libcxgb4/src/verbs.c#L320,verbs.c#L320,&qhp->ibv_qp
Operator Precedence,27,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/gfx/gl/SharedSurfaceEGL.cpp#L97,SharedSurfaceEGL.cpp#L97,!mGL || !mGL->MakeCurrent()
Operator Precedence,28,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/gpu/drm/i915/i915_gem.c#L2388,i915_gem.c#L2388,!i || sg->length >= max_segment || page_to_pfn(page) != last_pfn + 1
Operator Precedence,29,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/spi/spi-nuc900.c#L339,spi-nuc900.c#L339,&pdev->dev
Operator Precedence,30,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/usb/serial/f81534.c#L809,f81534.c#L809,&port->port
Operator Precedence,31,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/libquadmath/strtod/strtod_l.c#L188,strtod_l.c#L188,MIN_EXP - 1 - MANT_DIG
Operator Precedence,32,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/pinctrl/core.c#L199,core.c#L199,&pctldev->mutex
Operator Precedence,33,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/net/key/af_key.c#L191,af_key.c#L191,&sk->sk_write_queue
Operator Precedence,34,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/telnet/telnet/commands.c#L957,commands.c#L957,*c->variable
Operator Precedence,35,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/scsi/ipr.c#L5252,ipr.c#L5252,&ipr_cmd->s.ioasa.u.gata
Operator Precedence,36,https://github.com/WebKit/webkit/blob/e8c73206a09f734bc64f77d6275a727aa2811754/Source/ThirdParty/libwebrtc/Source/webrtc/api/mediaconstraintsinterface.cc#L216,mediaconstraintsinterface.cc#L216,&configuration->enable_dtls_srtp
Operator Precedence,37,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/fs/f2fs/super.c#L2178,super.c#L2178,FDEV(i).start_blk + (FDEV(i).total_segments << sbi->log_blocks_per_seg) - 1 + le32_to_cpu(raw_super->segment0_blkaddr)
Operator Precedence,38,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/net/xfrm/xfrm_state.c#L789,xfrm_state.c#L789,&net->xfrm.xfrm_state_lock
Operator Precedence,39,https://github.com/mongodb/mongo/blob/67f735e6705091659e2a8cf46a9285f09bcf749a/src/mongo/db/query/datetime/date_time_support.cpp#L391,date_time_support.cpp#L391,"std::unique_ptr < timelib_time, TimeZone::TimelibTimeDeleter > time(timelib_time_ctor())"
Post Increment,0,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/libstdc++-v3/testsuite/util/testsuite_character.h#L204,testsuite_character.h#L204,*to++
Post Increment,1,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/i2c/busses/i2c-kempld.c#L160,i2c-kempld.c#L160,msg->buf[i2c->pos++]
Post Increment,2,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/g++.dg/plugin/diagnostic-test-expressions-1.C#L89,diagnostic-test-expressions-1.C#L89,"__emit_expression_range(0, i++)"
Post Increment,3,https://github.com/WebKit/webkit/blob/e8c73206a09f734bc64f77d6275a727aa2811754/Source/WTF/wtf/dtoa.cpp#L1147,dtoa.cpp#L1147,*s++
Post Increment,4,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/staging/rtl8192e/rtllib_crypt_wep.c#L131,rtllib_crypt_wep.c#L131,*pos++
Post Increment,5,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/xz/src/liblzma/lzma/lzma2_encoder.c#L87,lzma2_encoder.c#L87,coder->buf[pos++]
Post Increment,6,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/media/webrtc/trunk/webrtc/voice_engine/test/cmd_test/voe_cmd_test.cc#L395,voe_cmd_test.cc#L395,"printf(""%i. Toggle CNG\n"", option_index++)"
Post Increment,7,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/pr42916.c#L12,pr42916.c#L12,*str++
Post Increment,8,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/gcclibs/libcpp/traditional.c#L191,traditional.c#L191,*pfile->out.cur++
Post Increment,9,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/intl/icu/source/common/patternprops.cpp#L204,patternprops.cpp#L204,*s++
Post Increment,10,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/lib/libc/string/strmode.c#L81,strmode.c#L81,*p++
Post Increment,11,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/intl/icu/source/common/uniset.cpp#L1789,uniset.cpp#L1789,buffer[k++]
Post Increment,12,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/third_party/rust/libz-sys/src/zlib-1.2.8/contrib/puff/puff.c#L280,puff.c#L280,"while (left--){
    code |= bitbuf & 1;
    bitbuf >>= 1;
    count = *next++;
    if (code - count < first){
        s->bitbuf = bitbuf;
        s->bitcnt = (s->bitcnt - len) & 7;
        return h->symbol[index + (code - first)];
    }
    index += count;
    first += count;
    first <<= 1;
    code <<= 1;
    len++;
}"
Post Increment,13,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/net/ethernet/agere/et131x.c#L2938,et131x.c#L2938,regs_buff[num++]
Post Increment,14,https://github.com/git/git/blob/ba78f398be65e941b93276680f68a81075716472/base85.c#L86,base85.c#L86,*data++
Post Increment,15,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/netinet/ip_mroute.c#L1088,ip_mroute.c#L1088,"if (nstl++)
    CTR1(KTR_IPMF, ""%s: multiple matches"", __func__);"
Post Increment,16,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/fs/nfsclient/nfs_clrpcops.c#L4347,nfs_clrpcops.c#L4347,*tl++
Post Increment,17,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/staging/rtl8192u/ieee80211/ieee80211_crypt_tkip.c#L334,ieee80211_crypt_tkip.c#L334,*pos++
Post Increment,18,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/s390/char/tty3270.c#L1190,tty3270.c#L1190,*cp++
Post Increment,19,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/isdn/hisax/l3dss1.c#L547,l3dss1.c#L547,*p++
Post Increment,20,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/binutils/opcodes/score-dis.c#L299,score-dis.c#L299,*c++
Post Increment,21,https://github.com/mysql/mysql-server/blob/0138556a55168da12eaf0bc3038947148d6b0863/storage/ndb/src/kernel/blocks/dbtup/DbtupMeta.cpp#L1611,DbtupMeta.cpp#L1611,dynfix_count++ + regTabPtr->m_attributes[ind].m_no_of_dyn_var
Post Increment,22,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/arch/m32r/platforms/oaks32r/io.c#L157,io.c#L157,"while (count--)
    *buf++ = *(volatile unsigned char*)portp;"
Post Increment,23,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/gpu/drm/radeon/r600.c#L2665,r600.c#L2665,be32_to_cpup(fw_data++)
Post Increment,24,https://github.com/mysql/mysql-server/blob/0138556a55168da12eaf0bc3038947148d6b0863/sql/partition_info.cc#L2129,partition_info.cc#L2129,subpart_field_buffers[i++]
Post Increment,25,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/net/dccp/options.c#L73,options.c#L73,*opt_ptr++
Post Increment,26,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/wpa/wpa_supplicant/wnm_sta.c#L467,wnm_sta.c#L467,*pos++
Post Increment,27,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/gfx/skia/skia/src/gpu/ops/GrMeshDrawOp.cpp#L75,GrMeshDrawOp.cpp#L75,fInlineUploads[currUploadIdx++]
Post Increment,28,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/usb/host/fotg210-hcd.c#L600,fotg210-hcd.c#L600,seen[seen_count++]
Post Increment,29,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/video/fbdev/aty/radeon_base.c#L1310,radeon_base.c#L1310,*transp++
Post Increment,30,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/binutils/gas/config/tc-ia64.c#L11835,tc-ia64.c#L11835,"while (prec--){
    number_to_chars_littleendian(lit, (long )(words[prec]), sizeof (LITTLENUM_TYPE));
    lit += sizeof (LITTLENUM_TYPE);
}"
Post Increment,31,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/fs/nfsserver/nfs_nfsdport.c#L1768,nfs_nfsdport.c#L1768,*tl++
Post Increment,32,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/nvi/vi/vs_line.c#L443,vs_line.c#L443,*kp++
Post Increment,33,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/fs/hfs/trans.c#L149,trans.c#L149,*dst++
Post Increment,34,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/sound/pci/ice1712/ice1724.c#L2704,ice1724.c#L2704,"snd_vt1724_pcm_spdif(ice, pcm_dev++)"
Post Increment,35,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/llvm/lib/LTO/LTO.cpp#L559,LTO.cpp#L559,*ResI++
Post Increment,36,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/boot/efi/libefi/efichar.c#L110,efichar.c#L110,*cp++
Post Increment,37,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/zstd/programs/datagen.c#L135,datagen.c#L135,buffPtr[pos++]
Post Increment,38,https://github.com/WebKit/webkit/blob/e8c73206a09f734bc64f77d6275a727aa2811754/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/codecs/isac/fix/source/decode_plc.c#L75,decode_plc.c#L75,*Out++
Post Increment,39,https://github.com/WebKit/webkit/blob/e8c73206a09f734bc64f77d6275a727aa2811754/Source/ThirdParty/libwebrtc/Source/third_party/protobuf/php/ext/google/protobuf/upb.c#L9551,upb.c#L9551,*(p++)
Pre Increment,0,https://github.com/vim/vim/blob/6ce650480844bfaa5410874416b4a2e15f40b870/src/xxd/xxd.c#L820,xxd.c#L820,l[++c]
Pre Increment,1,https://github.com/mongodb/mongo/blob/67f735e6705091659e2a8cf46a9285f09bcf749a/src/third_party/icu4c-57.1/source/i18n/collationrootelements.cpp#L213,collationrootelements.cpp#L213,elements[++index]
Pre Increment,2,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/scsi/BusLogic.c#L289,BusLogic.c#L289,ccb->serial = ++serial
Pre Increment,3,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/net/ethernet/chelsio/cxgb3/sge.c#L2485,sge.c#L2485,++q->credits >= (q->size / 4)
Pre Increment,4,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/pci/dwc/pci-dra7xx.c#L519,pci-dra7xx.c#L519,--i >= 0
Pre Increment,5,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.c-torture/execute/builtins/strcat.c#L62,strcat.c#L62,++d2 + 5
Pre Increment,6,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/gpu/drm/i915/i915_gem_request.c#L293,i915_gem_request.c#L293,!--i915->gt.active_requests
Pre Increment,7,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/scsi/ipr.c#L8250,ipr.c#L8250,++ioa_cfg->identify_hrrq_index < ioa_cfg->hrrq_num
Pre Increment,8,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/gfx/skia/skia/src/views/SkEvent.cpp#L361,SkEvent.cpp#L361,SkDEBUGCODE(--globals.fEventCounter)
Pre Increment,9,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/net/ethernet/freescale/fman/fman.c#L1881,fman.c#L1881,((ioread32be(&fman->fpm_regs->fm_rstc)) & FPM_RSTC_FM_RESET) && --count
Pre Increment,10,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/tcpdump/strtoaddr.c#L171,strtoaddr.c#L171,*++src
Pre Increment,11,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/fs/proc/proc_sysctl.c#L1534,proc_sysctl.c#L1534,*(--subheader)
Pre Increment,12,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/byacc/test/yacc/pure_calc.tab.c#L488,pure_calc.tab.c#L488,*++yystack.l_mark
Pre Increment,13,https://github.com/WebKit/webkit/blob/e8c73206a09f734bc64f77d6275a727aa2811754/Source/JavaScriptCore/yarr/YarrInterpreter.cpp#L1242,YarrInterpreter.cpp#L1242,!--remainingMatchCount
Pre Increment,14,https://github.com/git/git/blob/ba78f398be65e941b93276680f68a81075716472/builtin/pack-objects.c#L399,pack-objects.c#L399,dheader[--pos]
Pre Increment,15,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/modules/pdfium/pdfium/core/fpdftext/cpdf_textpage.cpp#L1234,cpdf_textpage.cpp#L1234,strCurText.GetAt(--nIndex)
Pre Increment,16,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/lib/Lex/LiteralSupport.cpp#L469,LiteralSupport.cpp#L469,*--ResultBuf
Pre Increment,17,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/vect/pr18536.c#L10,pr18536.c#L10,++a < 4
Pre Increment,18,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/media/webrtc/trunk/webrtc/modules/rtp_rtcp/source/fec_test_helper.cc#L104,fec_test_helper.cc#L104,return ++seq_num_;
Pre Increment,19,https://github.com/WebKit/webkit/blob/e8c73206a09f734bc64f77d6275a727aa2811754/PerformanceTests/StitchMarker/wtf/text/IntegerToStringConversion.h#L75,IntegerToStringConversion.h#L75,*--p
Pre Increment,20,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/telnet/telnet/commands.c#L188,commands.c#L188,*++cp
Pre Increment,21,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/crypto/openssh/rijndael.c#L651,rijndael.c#L651,++i == 10
Pre Increment,22,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/libgcc/config/sol2/gmon.c#L357,gmon.c#L357,toindex = ++tos[0].link
Pre Increment,23,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/atomic/pr65345-4.c#L20,pr65345-4.c#L20,(int)++i
Pre Increment,24,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/media/rc/sir_ir.c#L165,sir_ir.c#L165,++counter > 256
Pre Increment,25,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/firewire/net.c#L1335,net.c#L1335,++dev->queued_datagrams == FWNET_MAX_QUEUED_DATAGRAMS
Pre Increment,26,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/sys/bitstring.h#L240,bitstring.h#L240,*(++_curbitstr)
Pre Increment,27,https://github.com/mongodb/mongo/blob/67f735e6705091659e2a8cf46a9285f09bcf749a/src/third_party/boost-1.60.0/boost/chrono/io/time_point_get.hpp#L136,time_point_get.hpp#L136,++pattern == pat_end
Pre Increment,28,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/gcc/gen-protos.c#L90,gen-protos.c#L90,--param_nesting == 0
Pre Increment,29,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/sound/soc/au1x/psc-ac97.c#L94,psc-ac97.c#L94,"do{
    udelay(21);
    if (__raw_readl(AC97_EVNT(pscdata)) & PSC_AC97EVNT_CD)
        break;
} while (--tmo);"
Pre Increment,30,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/crypto/openssh/openbsd-compat/vis.c#L211,vis.c#L211,*++src
Pre Increment,31,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sbin/camcontrol/camcontrol.c#L2976,camcontrol.c#L2976,--pwd.revision == 0
Pre Increment,32,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/net/ethernet/chelsio/cxgb4vf/sge.c#L928,sge.c#L928,--nfrags == 0
Pre Increment,33,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/js/src/shell/js.cpp#L7923,js.cpp#L7923,args.rval().setInt32(++accessed)
Pre Increment,34,https://github.com/WebKit/webkit/blob/e8c73206a09f734bc64f77d6275a727aa2811754/Source/WTF/wtf/MD5.cpp#L86,MD5.cpp#L86,"do{
    uint32_t t = static_cast<uint32_t>buf[3] << 8 | buf[2] << 16 | buf[1] << 8 | buf[0];
    ASSERT_WITH_MESSAGE(!(reinterpret_cast<uintptr_t>buf % sizeof (t)), ""alignment error of buf"");
    memcpy(buf, &t, sizeof (t));
    buf += sizeof (t);
} while (--longs);"
Pre Increment,35,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/crypto/openssl/apps/srp.c#L328,srp.c#L328,--argc < 1
Pre Increment,36,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/tty/serial/pic32_uart.c#L318,pic32_uart.c#L318,--max_count == 0
Pre Increment,37,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/nvi/vi/v_section.c#L194,v_section.c#L194,!--cnt
Pre Increment,38,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/third_party/aom/aom_dsp/x86/blend_a64_mask_sse4.c#L187,blend_a64_mask_sse4.c#L187,"do{
    int c;
    for (c = 0;c < w;c += 16){
        const __m128i v_rl_b = xx_loadu_128(mask + 2 * c);
        const __m128i v_rh_b = xx_loadu_128(mask + 2 * c + 16);
        const __m128i v_al_b = _mm_avg_epu8(v_rl_b, _mm_srli_si128(v_rl_b, 1));
        const __m128i v_ah_b = _mm_avg_epu8(v_rh_b, _mm_srli_si128(v_rh_b, 1));
        const __m128i v_m0l_w = _mm_and_si128(v_al_b, v_zmask_b);
        const __m128i v_m0h_w = _mm_and_si128(v_ah_b, v_zmask_b);
        const __m128i v_m1l_w = _mm_sub_epi16(v_maxval_w, v_m0l_w);
        const __m128i v_m1h_w = _mm_sub_epi16(v_maxval_w, v_m0h_w);
        const __m128i v_resl_w = blend_8(src0 + c, src1 + c, v_m0l_w, v_m1l_w);
        const __m128i v_resh_w = blend_8(src0 + c + 8, src1 + c + 8, v_m0h_w, v_m1h_w);
        const __m128i v_res_b = _mm_packus_epi16(v_resl_w, v_resh_w);
        xx_storeu_128(dst + c, v_res_b);
    }
    dst += dst_stride;
    src0 += src0_stride;
    src1 += src1_stride;
    mask += mask_stride;
} while (--h);"
Pre Increment,39,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/arch/sh/mm/pmb.c#L511,pmb.c#L511,pmbe && --depth
Preprocessor In Statement,0,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/c-family/c-common.c#L3838,c-common.c#L3838,"{
    builtin_types[(int)BT_LAST] = NULL_TREE;
    c_init_attributes();
    targetm.init_builtins();
    build_common_builtin_nodes();
    if (flag_cilkplus)
        cilk_init_builtins();
}"
Preprocessor In Statement,1,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/security/nss/lib/ckfw/capi/cobject.c#L721,cobject.c#L721,"{
    DWORD mserror = GetLastError();
    label = DEFAULT_NICKNAME;
    size = sizeof (DEFAULT_NICKNAME);
    rv = 1;
}"
Preprocessor In Statement,2,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/net/ethernet/hisilicon/hns/hns_ethtool.c#L468,hns_ethtool.c#L468,"{
    struct hns_nic_priv* priv = netdev_priv(ndev);
    struct hnae_handle* h = priv->ae_handle;
    int i, j, lc, good_cnt, ret_val = 0;
    unsigned int size;
    netdev_tx_t tx_ret_val;
    struct sk_buff* skb;
    size = NIC_LB_TEST_FRAME_SIZE;
    skb = alloc_skb(size, GFP_KERNEL);
    if (!skb)
        return NIC_LB_TEST_NO_MEM_ERR;

    (void)skb_put(skb, size);
    skb->dev = ndev;
    __lb_other_process(NULL, skb);
    skb->queue_mapping = NIC_LB_TEST_RING_ID;
    lc = 1;
    for (j = 0;j < lc;j++){
        good_cnt = 0;
        for (i = 0;i < NIC_LB_TEST_PKT_NUM_PER_CYCLE;i++){
            (void)skb_get(skb);
            tx_ret_val = (netdev_tx_t)hns_nic_net_xmit_hw(ndev, skb, &tx_ring_data(priv, skb->queue_mapping));
            if (tx_ret_val == NETDEV_TX_OK)
                good_cnt++;
            else
                break;
        }
        if (good_cnt != NIC_LB_TEST_PKT_NUM_PER_CYCLE){
            ret_val = NIC_LB_TEST_TX_CNT_ERR;
            dev_err(priv->dev, ""%s sent fail, cnt=0x%x, budget=0x%x\n"", hns_nic_test_strs[loop_mode], good_cnt, NIC_LB_TEST_PKT_NUM_PER_CYCLE);
            break;
        }
        msleep(100);
        good_cnt = __lb_clean_rings(priv, h->q_num, h->q_num * 2 - 1, NIC_LB_TEST_PKT_NUM_PER_CYCLE);
        if (good_cnt != NIC_LB_TEST_PKT_NUM_PER_CYCLE){
            ret_val = NIC_LB_TEST_RX_CNT_ERR;
            dev_err(priv->dev, ""%s recv fail, cnt=0x%x, budget=0x%x\n"", hns_nic_test_strs[loop_mode], good_cnt, NIC_LB_TEST_PKT_NUM_PER_CYCLE);
            break;
        }
        (void)__lb_clean_rings(priv, NIC_LB_TEST_RING_ID, NIC_LB_TEST_RING_ID, NIC_LB_TEST_PKT_NUM_PER_CYCLE);
    }
    kfree_skb(skb);
    return ret_val;
}"
Preprocessor In Statement,3,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/ada/s-oscons-tmplt.c#L245,s-oscons-tmplt.c#L245,"{
    TXT(""--  This is the version for "" TARGET)TXT("""")TXT(""with Interfaces.C;"")C(""Target_OS"", OS_Type, TARGET_OS, """")CST(Target_Name, """")CND(SIZEOF_unsigned_int, ""Size of unsigned int"")CND(IOV_MAX, ""Maximum writev iovcnt"")CND(NAME_MAX, ""Maximum file name length"")CND(O_RDWR, ""Read/write"")CND(O_NOCTTY, ""Don't change ctrl tty"")CND(O_NDELAY, ""Nonblocking"")CND(F_GETFL, ""Get flags"")CND(F_SETFL, ""Set flags"")CND(FNDELAY, ""Nonblocking"")SUB(IOCTL_Req_T)CNI(FIONBIO, ""Set/clear non-blocking io"")CNI(FIONREAD, ""How many bytes to read"")CND(EAGAIN, ""Try again"")CND(ENOENT, ""File not found"")CND(ENOMEM, ""Out of memory"")CND(EACCES, ""Permission denied"")CND(EADDRINUSE, ""Address already in use"")CND(EADDRNOTAVAIL, ""Cannot assign address"")CND(EAFNOSUPPORT, ""Addr family not supported"")CND(EALREADY, ""Operation in progress"")CND(EBADF, ""Bad file descriptor"")CND(ECONNABORTED, ""Connection aborted"")CND(ECONNREFUSED, ""Connection refused"")CND(ECONNRESET, ""Connection reset by peer"")CND(EDESTADDRREQ, ""Destination addr required"")CND(EFAULT, ""Bad address"")CND(EHOSTDOWN, ""Host is down"")CND(EHOSTUNREACH, ""No route to host"")CND(EINPROGRESS, ""Operation now in progress"")CND(EINTR, ""Interrupted system call"")CND(EINVAL, ""Invalid argument"")CND(EIO, ""Input output error"")CND(EISCONN, ""Socket already connected"")CND(ELOOP, ""Too many symbolic links"")CND(EMFILE, ""Too many open files"")CND(EMSGSIZE, ""Message too long"")CND(ENAMETOOLONG, ""Name too long"")CND(ENETDOWN, ""Network is down"")CND(ENETRESET, ""Disconn. on network reset"")CND(ENETUNREACH, ""Network is unreachable"")CND(ENOBUFS, ""No buffer space available"")CND(ENOPROTOOPT, ""Protocol not available"")CND(ENOTCONN, ""Socket not connected"")CND(ENOTSOCK, ""Operation on non socket"")CND(EOPNOTSUPP, ""Operation not supported"")CND(EPIPE, ""Broken pipe"")CND(EPFNOSUPPORT, ""Unknown protocol family"")CND(EPROTONOSUPPORT, ""Unknown protocol"")CND(EPROTOTYPE, ""Unknown protocol type"")CND(ERANGE, ""Result too large"")CND(ESHUTDOWN, ""Cannot send once shutdown"")CND(ESOCKTNOSUPPORT, ""Socket type not supported"")CND(ETIMEDOUT, ""Connection timed out"")CND(ETOOMANYREFS, ""Too many references"")CND(EWOULDBLOCK, ""Operation would block"")CND(E2BIG, ""Argument list too long"")CND(EILSEQ, ""Illegal byte sequence"")CND(TCSANOW, ""Immediate"")CND(TCIFLUSH, ""Flush input"")CNU(IXON, ""Output sw flow control"")CNU(CLOCAL, ""Local"")CNU(CRTSCTS, ""Output hw flow control"")CNU(CREAD, ""Read"")CNU(CS5, ""5 data bits"")CNU(CS6, ""6 data bits"")CNU(CS7, ""7 data bits"")CNU(CS8, ""8 data bits"")CNU(CSTOPB, ""2 stop bits"")CNU(PARENB, ""Parity enable"")CNU(PARODD, ""Parity odd"")CNU(B0, ""0 bps"")CNU(B50, ""50 bps"")CNU(B75, ""75 bps"")CNU(B110, ""110 bps"")CNU(B134, ""134 bps"")CNU(B150, ""150 bps"")CNU(B200, ""200 bps"")CNU(B300, ""300 bps"")CNU(B600, ""600 bps"")CNU(B1200, ""1200 bps"")CNU(B1800, ""1800 bps"")CNU(B2400, ""2400 bps"")CNU(B4800, ""4800 bps"")CNU(B9600, ""9600 bps"")CNU(B19200, ""19200 bps"")CNU(B38400, ""38400 bps"")CNU(B57600, ""57600 bps"")CNU(B115200, ""115200 bps"")CNU(B230400, ""230400 bps"")CNU(B460800, ""460800 bps"")CNU(B500000, ""500000 bps"")CNU(B576000, ""576000 bps"")CNU(B921600, ""921600 bps"")CNU(B1000000, ""1000000 bps"")CNU(B1152000, ""1152000 bps"")CNU(B1500000, ""1500000 bps"")CNU(B2000000, ""2000000 bps"")CNU(B2500000, ""2500000 bps"")CNU(B3000000, ""3000000 bps"")CNU(B3500000, ""3500000 bps"")CNU(B4000000, ""4000000 bps"")CND(VINTR, ""Interrupt"")CND(VQUIT, ""Quit"")CND(VERASE, ""Erase"")CND(VKILL, ""Kill"")CND(VEOF, ""EOF"")CND(VTIME, ""Read timeout"")CND(VMIN, ""Read min chars"")CND(VSWTC, ""Switch"")CND(VSTART, ""Flow control start"")CND(VSTOP, ""Flow control stop"")CND(VSUSP, ""Suspend"")CND(VEOL, ""EOL"")CND(VREPRINT, ""Reprint unread"")CND(VDISCARD, ""Discard pending"")CND(VWERASE, ""Word erase"")CND(VLNEXT, ""Literal next"")CND(VEOL2, ""Alternative EOL"")CST(PTY_Library, ""for g-exptty"")CND(CLOCK_REALTIME, ""System realtime clock"")CND(CLOCK_THREAD_CPUTIME_ID, ""Thread CPU clock"")CNS(CLOCK_RT_Ada, """")CND(SIZEOF_struct_file_attributes, ""struct file_attributes""){
        struct dirent dent;
        CND(SIZEOF_struct_dirent_alloc, ""struct dirent allocation"")}
}"
Preprocessor In Statement,4,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/intl/icu/source/i18n/decNumber.cpp#L5683,decNumber.cpp#L5683,"{
    aset = *set;
    aset.round = DEC_ROUND_HALF_EVEN;
    uprv_decNumberFromString(res, LN10, &aset);
    *status |= (DEC_Inexact | DEC_Rounded);
    break;
}"
Preprocessor In Statement,5,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/lib/Sema/SemaDeclObjC.cpp#L4178,SemaDeclObjC.cpp#L4178,"{
    llvm_unreachable(""not an ObjC container!"");
}"
Preprocessor In Statement,6,https://github.com/WebKit/webkit/blob/e8c73206a09f734bc64f77d6275a727aa2811754/Source/JavaScriptCore/runtime/JSGlobalObject.cpp#L364,JSGlobalObject.cpp#L364,<!!!>
Preprocessor In Statement,7,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vcvt_f16.c#L21,vcvt_f16.c#L21,<!!!>
Preprocessor In Statement,8,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/telnet/telnet/commands.c#L1219,commands.c#L1219,"{
    struct togglelist* tl;
    struct setlist* sl;
    if (argc == 1){
        for (tl = Togglelist;tl->name;tl++){
            dotog(tl);
        }
        printf(""\n"");
        for (sl = Setlist;sl->name;sl++){
            doset(sl);
        }
    }else{
        int i;
        for (i = 1;i < argc;i++){
            sl = getset(argv[i]);
            tl = GETTOGGLE(argv[i]);
            if (Ambiguous((void*)sl) || Ambiguous((void*)tl)){
                printf(""?Ambiguous argument '%s'.\n"", argv[i]);
                return 0;
            }else
                if (!sl && !tl){
                    printf(""?Unknown argument '%s'.\n"", argv[i]);
                    return 0;
                }else{
                    if (tl){
                        dotog(tl);
                    }
                    if (sl){
                        doset(sl);
                    }
                }
        }
    }
    optionstatus();
    return 1;
}"
Preprocessor In Statement,9,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/gomp/pr34692.c#L9,pr34692.c#L9,"{
    int i;
    FOO (for (i = 0; i < 10; i++) { const char *vara =,
a
#define P parallel
#pragma omp P
#undef P
#define P for
b
#pragma omp P
#undef P
#define parallel atomic
cde f g h);
  }
}"
Preprocessor In Statement,10,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/js/src/jit/arm64/vixl/Disasm-vixl.cpp#L977,Disasm-vixl.cpp#L977,"{
    LOAD_STORE_PAIR_LIST(LSP_OFFSET)}"
Preprocessor In Statement,11,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/cxgb/common/cxgb_vsc7323.c#L287,cxgb_vsc7323.c#L287,"{
    int ret;
    u64 rx_ucast, tx_ucast;
    u32 stats0[NSTATS0], stats1[NSTATS1];
    ret = t3_elmr_blk_read(mac->adapter, ELMR_STAT(mac->ext_port, STATS0_START), stats0, NSTATS0);
    if (!ret)
        ret = t3_elmr_blk_read(mac->adapter, ELMR_STAT(mac->ext_port, STATS1_START), stats1, NSTATS1);

    if (ret)
        goto out;

    rx_ucast = mac->stats.rx_frames - mac->stats.rx_mcast_frames - mac->stats.rx_bcast_frames;
    rx_ucast += (u64)(stats0[6 - STATS0_START] - (u32)rx_ucast);
    tx_ucast = mac->stats.tx_frames - mac->stats.tx_mcast_frames - mac->stats.tx_bcast_frames;
    tx_ucast += (u64)(stats0[27 - STATS0_START] - (u32)tx_ucast);
    RMON_UPDATE(mac, rx_octets, stats0[4 - STATS0_START]);
    RMON_UPDATE(mac, rx_frames, stats0[6 - STATS0_START]);
    RMON_UPDATE(mac, rx_frames, stats0[7 - STATS0_START]);
    RMON_UPDATE(mac, rx_frames, stats0[8 - STATS0_START]);
    RMON_UPDATE(mac, rx_mcast_frames, stats0[7 - STATS0_START]);
    RMON_UPDATE(mac, rx_bcast_frames, stats0[8 - STATS0_START]);
    RMON_UPDATE(mac, rx_fcs_errs, stats0[9 - STATS0_START]);
    RMON_UPDATE(mac, rx_pause, stats0[2 - STATS0_START]);
    RMON_UPDATE(mac, rx_jabber, stats0[16 - STATS0_START]);
    RMON_UPDATE(mac, rx_short, stats0[11 - STATS0_START]);
    RMON_UPDATE(mac, rx_symbol_errs, stats0[1 - STATS0_START]);
    RMON_UPDATE(mac, rx_too_long, stats0[15 - STATS0_START]);
    RMON_UPDATE(mac, rx_frames_64,        stats0[17 - STATS0_START]);
    RMON_UPDATE(mac, rx_frames_65_127,    stats0[18 - STATS0_START]);
    RMON_UPDATE(mac, rx_frames_128_255,   stats0[19 - STATS0_START]);
    RMON_UPDATE(mac, rx_frames_256_511,   stats0[20 - STATS0_START]);
    RMON_UPDATE(mac, rx_frames_512_1023,  stats0[21 - STATS0_START]);
    RMON_UPDATE(mac, rx_frames_1024_1518, stats0[22 - STATS0_START]);
    RMON_UPDATE(mac, rx_frames_1519_max,  stats0[23 - STATS0_START]);
    RMON_UPDATE(mac, tx_octets, stats0[26 - STATS0_START]);
    RMON_UPDATE(mac, tx_frames, stats0[27 - STATS0_START]);
    RMON_UPDATE(mac, tx_frames, stats0[28 - STATS0_START]);
    RMON_UPDATE(mac, tx_frames, stats0[29 - STATS0_START]);
    RMON_UPDATE(mac, tx_mcast_frames, stats0[28 - STATS0_START]);
    RMON_UPDATE(mac, tx_bcast_frames, stats0[29 - STATS0_START]);
    RMON_UPDATE(mac, tx_pause, stats0[25 - STATS0_START]);
    RMON_UPDATE(mac, tx_underrun, 0);
    RMON_UPDATE(mac, tx_frames_64,        stats1[36 - STATS1_START]);
    RMON_UPDATE(mac, tx_frames_65_127,    stats1[37 - STATS1_START]);
    RMON_UPDATE(mac, tx_frames_128_255,   stats1[38 - STATS1_START]);
    RMON_UPDATE(mac, tx_frames_256_511,   stats1[39 - STATS1_START]);
    RMON_UPDATE(mac, tx_frames_512_1023,  stats1[40 - STATS1_START]);
    RMON_UPDATE(mac, tx_frames_1024_1518, stats1[41 - STATS1_START]);
    RMON_UPDATE(mac, tx_frames_1519_max,  stats1[42 - STATS1_START]);
    mac->stats.rx_frames = rx_ucast + mac->stats.rx_mcast_frames + mac->stats.rx_bcast_frames;
    mac->stats.tx_frames = tx_ucast + mac->stats.tx_mcast_frames + mac->stats.tx_bcast_frames;
    out:
    return &mac->stats;
}"
Preprocessor In Statement,12,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/usr.sbin/fwcontrol/fwcontrol.c#L729,fwcontrol.c#L729,"{
    u_int32_t crom_buf[1024 / 4];
    u_int32_t crom_buf_hex[1024 / 4];
    char devbase[64];
    const char* device_string = ""/dev/fw"";
    int fd = -1, ch, len = 1024;
    int32_t current_board = 0;
    bool command_set = false;
    bool open_needed = false;
    long tmp;
    struct fw_eui64 eui;
    struct eui64 target;
    fwmethod* recvfn = NULL;
    bool display_board_only = false;
    bool display_crom = false;
    bool send_bus_reset = false;
    bool display_crom_hex = false;
    bool load_crom_from_file = false;
    bool set_fwmem_target = false;
    bool dump_topology = false;
    bool dump_phy_reg = false;
    int32_t priority_budget = -1;
    int32_t set_root_node = -1;
    int32_t set_gap_count = -1;
    int32_t send_link_on = -1;
    int32_t send_reset_start = -1;
    char* crom_string = NULL;
    char* crom_string_hex = NULL;
    char* recv_data = NULL;
    char* send_data = NULL;
    if (argc < 2){
        for (current_board = 0;current_board < MAX_BOARDS;current_board++){
            snprintf(devbase, sizeof (devbase), ""%s%d.0"", device_string, current_board);
            if (open_dev(&fd, devbase) < 0){
                if (current_board == 0){
                    usage();
                    err(EX_IOERR, ""%s: Error opening firewire controller #%d %s"", __func__, current_board, devbase);
                }
                return (EIO);
            }
            list_dev(fd);
            close(fd);
            fd = -1;
        }
    }
    while ((ch = getopt(argc, argv, ""M:f:g:m:o:s:b:prtc:d:l:u:R:S:"")) != -1){
        switch (ch){
            case 'b':
                priority_budget = strtol(optarg, NULL, 0);
                if (priority_budget < 0 || priority_budget > INT32_MAX)
                    errx(EX_USAGE, ""%s: priority_budget out of range: %s"", __func__, optarg);

                command_set = true;
                open_needed = true;
                display_board_only = false;
                break;
            case 'c':
                crom_string = malloc(strlen(optarg) + 1);
                if (crom_string == NULL)
                    err(EX_SOFTWARE, ""%s:crom_string malloc"", __func__);

                if ((strtol(crom_string, NULL, 0) < 0) || strtol(crom_string, NULL, 0) > MAX_BOARDS)
                    errx(EX_USAGE, ""%s:Invalid value for node"", __func__);

                strcpy(crom_string, optarg);
                display_crom = 1;
                open_needed = true;
                command_set = true;
                display_board_only = false;
                break;
            case 'd':
                crom_string_hex = malloc(strlen(optarg) + 1);
                if (crom_string_hex == NULL)
                    err(EX_SOFTWARE, ""%s:crom_string_hex malloc"", __func__);

                strcpy(crom_string_hex, optarg);
                display_crom_hex = 1;
                open_needed = true;
                command_set = true;
                display_board_only = false;
                break;
            case 'f':
                set_root_node = strtol(optarg, NULL, 0);
                if ((set_root_node < 0) || (set_root_node > MAX_PHY_CONFIG))
                    errx(EX_USAGE, ""%s:set_root_node out of range"", __func__);

                open_needed = true;
                command_set = true;
                display_board_only = false;
                break;
            case 'g':
                set_gap_count = strtol(optarg, NULL, 0);
                if ((set_gap_count < 0) || (set_gap_count > MAX_PHY_CONFIG))
                    errx(EX_USAGE, ""%s:set_gap_count out of range"", __func__);

                open_needed = true;
                command_set = true;
                display_board_only = false;
                break;
            case 'l':
                load_crom_from_file = 1;
                load_crom(optarg, crom_buf);
                command_set = true;
                display_board_only = false;
                break;
            case 'm':
                set_fwmem_target = 1;
                open_needed = 0;
                command_set = true;
                display_board_only = false;
                if (eui64_hostton(optarg, &target) != 0 && eui64_aton(optarg, &target) != 0)
                    errx(EX_USAGE, ""%s: invalid target: %s"", __func__, optarg);

                break;
            case 'o':
                send_link_on = str2node(fd, optarg);
                if ((send_link_on < 0) || (send_link_on > MAX_PHY_CONFIG))
                    errx(EX_USAGE, ""%s: node out of range: %s\n"", __func__, optarg);

                open_needed = true;
                command_set = true;
                display_board_only = false;
                break;
            case 'p':
                dump_phy_reg = 1;
                open_needed = true;
                command_set = true;
                display_board_only = false;
                break;
            case 'r':
                send_bus_reset = 1;
                open_needed = true;
                command_set = true;
                display_board_only = false;
                break;
            case 's':
                send_reset_start = str2node(fd, optarg);
                if ((send_reset_start < 0) || (send_reset_start > MAX_PHY_CONFIG))
                    errx(EX_USAGE, ""%s: node out of range: %s\n"", __func__, optarg);

                open_needed = true;
                command_set = true;
                display_board_only = false;
                break;
            case 't':
                dump_topology = 1;
                open_needed = true;
                command_set = true;
                display_board_only = false;
                break;
            case 'u':
                if (!command_set)
                    display_board_only = true;

                current_board = strtol(optarg, NULL, 0);
                open_needed = true;
                break;
            case 'M':
                switch (optarg[0]){
                    case 'm':
                        recvfn = mpegtsrecv;
                        break;
                    case 'd':
                        recvfn = dvrecv;
                        break;
                    default:
                        errx(EX_USAGE, ""unrecognized method: %s"", optarg);
                }
                command_set = true;
                display_board_only = false;
                break;
            case 'R':
                recv_data = malloc(strlen(optarg) + 1);
                if (recv_data == NULL)
                    err(EX_SOFTWARE, ""%s:recv_data malloc"", __func__);

                strcpy(recv_data, optarg);
                open_needed = false;
                command_set = true;
                display_board_only = false;
                break;
            case 'S':
                send_data = malloc(strlen(optarg) + 1);
                if (send_data == NULL)
                    err(EX_SOFTWARE, ""%s:send_data malloc"", __func__);

                strcpy(send_data, optarg);
                open_needed = true;
                command_set = true;
                display_board_only = false;
                break;
            case '?':
            default:
                usage();
                warnc(EINVAL, ""%s: Unknown command line arguments"", __func__);
                return 0;
        }
    }
    if (!command_set && !display_board_only){
        usage();
        warnc(EINVAL, ""%s: Unknown command line arguments"", __func__);
        return 0;
    }
    if (open_needed){
        snprintf(devbase, sizeof (devbase), ""%s%d.0"", device_string, current_board);
        if (open_dev(&fd, devbase) < 0){
            err(EX_IOERR, ""%s: Error opening firewire controller #%d %s"", __func__, current_board, devbase);
        }
    }
    if (display_board_only)
        list_dev(fd);

    if (dump_phy_reg)
        dump_phy_registers(fd);

    if (send_bus_reset){
        if (ioctl(fd, FW_IBUSRST, &tmp) < 0)
            err(EX_IOERR, ""%s: Ioctl of bus reset failed for %s"", __func__, devbase);
    }
    if (display_crom){
        tmp = str2node(fd, crom_string);
        get_crom(fd, tmp, crom_buf, len);
        show_crom(crom_buf);
        free(crom_string);
    }
    if (display_crom_hex){
        tmp = str2node(fd, crom_string_hex);
        get_crom(fd, tmp, crom_buf_hex, len);
        dump_crom(crom_buf_hex);
        free(crom_string_hex);
    }
    if (priority_budget >= 0)
        set_pri_req(fd, priority_budget);

    if (set_root_node >= 0)
        send_phy_config(fd, set_root_node, -1);

    if (set_gap_count >= 0)
        send_phy_config(fd, -1, set_gap_count);

    if (load_crom_from_file)
        show_crom(crom_buf);

    if (set_fwmem_target){
        eui.hi = ntohl(*(u_int32_t*)&(target.octet[0]));
        eui.lo = ntohl(*(u_int32_t*)&(target.octet[4]));
    }
    if (send_link_on >= 0)
        link_on(fd, send_link_on);

    if (send_reset_start >= 0)
        reset_start(fd, send_reset_start);

    if (dump_topology)
        show_topology_map(fd);

    if (recv_data != NULL){
        if (recvfn == NULL){
            recvfn = detect_recv_fn(fd, TAG | CHANNEL);
            close(fd);
            fd = -1;
        }
        snprintf(devbase, sizeof (devbase), ""%s%d.0"", device_string, current_board);
        if (open_dev(&fd, devbase) < 0)
            err(EX_IOERR, ""%s: Error opening firewire controller #%d %s in recv_data\n"", __func__, current_board, devbase);

        (*recvfn)(fd, recv_data, TAG | CHANNEL, -1);
        free(recv_data);
    }
    if (send_data != NULL){
        dvsend(fd, send_data, TAG | CHANNEL, -1);
        free(send_data);
    }
    if (fd > 0){
        close(fd);
        fd = -1;
    }
    return 0;
}"
Preprocessor In Statement,13,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/security/nss/lib/certdb/alg1485.c#L912,alg1485.c#L912,"{
    const NameToKind* pn2k = name2kinds;
    SECItem* avaValue = NULL;
    char* unknownTag = NULL;
    char* encodedAVA = NULL;
    PRBool useHex = PR_FALSE;
    PRBool truncateName = PR_FALSE;
    PRBool truncateValue = PR_FALSE;
    SECOidTag endKind;
    SECStatus rv;
    unsigned int len;
    unsigned int nameLen, valueLen;
    unsigned int maxName, maxValue;
    EQMode mode = minimalEscapeAndQuote;
    NameToKind n2k = {NULL, 32767, SEC_OID_UNKNOWN, SEC_ASN1_DS};
    char tmpBuf[TMPBUF_LEN];
    endKind = (strict == CERT_N2A_READABLE) ? SEC_OID_UNKNOWN : SEC_OID_AVA_POSTAL_ADDRESS;
    tag = CERT_GetAVATag(ava);
    while (pn2k->kind != tag && pn2k->kind != endKind){
        ++pn2k;
    }
    if (pn2k->kind != endKind){
        n2k = *pn2k;
    }else
        if (strict != CERT_N2A_READABLE){
            useHex = PR_TRUE;
        }

    if (strict == CERT_N2A_INVERTIBLE && vt == SEC_ASN1_DS){
        tagName = NULL;
        useHex = PR_TRUE;
    }
    if (!useHex){
        avaValue = CERT_DecodeAVAValue(&ava->value);
        if (!avaValue){
            useHex = PR_TRUE;
            if (strict != CERT_N2A_READABLE){
                tagName = NULL;
            }
        }
    }
    if (!tagName){
        tagName = unknownTag = CERT_GetOidString(&ava->type);
        if (!tagName){
            if (avaValue)
                SECITEM_FreeItem(avaValue, PR_TRUE);

            return SECFailure;
        }
    }
    if (useHex){
        avaValue = get_hex_string(&ava->value);
        if (!avaValue){
            if (unknownTag)
                PR_smprintf_free(unknownTag);

            return SECFailure;
        }
    }
    nameLen = strlen(tagName);
    valueLen = (useHex ? avaValue->len : cert_RFC1485_GetRequiredLen((char*)avaValue->data, avaValue->len, &mode));
    len = nameLen + valueLen + 2;
    maxName = nameLen;
    maxValue = valueLen;
    if (len <= sizeof (tmpBuf)){
        encodedAVA = tmpBuf;
    }else
        if (strict != CERT_N2A_READABLE){
            encodedAVA = PORT_Alloc(len);
            if (!encodedAVA){
                SECITEM_FreeItem(avaValue, PR_TRUE);
                if (unknownTag)
                    PR_smprintf_free(unknownTag);

                return SECFailure;
            }
        }else{
            unsigned int fair = (sizeof tmpBuf) / 2 - 1;
            if (nameLen < fair){
                maxValue = (sizeof tmpBuf) - (nameLen + 6);
            }else
                if (valueLen < fair){
                    maxName = (sizeof tmpBuf) - (valueLen + 5);
                }else{
                    maxName = maxValue = fair - 3;
                }

            if (nameLen > maxName){
                PORT_Assert(unknownTag && unknownTag == tagName);
                truncateName = PR_TRUE;
                nameLen = maxName;
            }
            encodedAVA = tmpBuf;
        }

    memcpy(encodedAVA, tagName, nameLen);
    if (truncateName){
        encodedAVA[nameLen - 1] = '.';
        encodedAVA[nameLen - 2] = '.';
        encodedAVA[nameLen - 3] = '.';
    }
    encodedAVA[nameLen++] = '=';
    if (unknownTag)
        PR_smprintf_free(unknownTag);

    if (strict == CERT_N2A_READABLE && maxValue > maxBytes)
        maxValue = maxBytes;

    if (valueLen > maxValue){
        valueLen = maxValue;
        truncateValue = PR_TRUE;
    }
    if (useHex){
        char* end = encodedAVA + nameLen + valueLen;
        memcpy(encodedAVA + nameLen, (char*)avaValue->data, valueLen);
        end[0] = '\0';
        if (truncateValue){
            end[-1] = '.';
            end[-2] = '.';
            end[-3] = '.';
        }
        rv = SECSuccess;
    }else
        if (!truncateValue){
            rv = escapeAndQuote(encodedAVA + nameLen, len - nameLen, (char*)avaValue->data, avaValue->len, &mode);
        }else{
            char bigTmpBuf[TMPBUF_LEN * 3 + 3];
            PORT_Assert(valueLen < sizeof tmpBuf);
            rv = escapeAndQuote(bigTmpBuf, sizeof bigTmpBuf, (char*)avaValue->data, PR_MIN(avaValue->len, valueLen), &mode);
            bigTmpBuf[valueLen--] = '\0';
            while (((bigTmpBuf[valueLen] & 0xc0) == 0x80) && valueLen > 0){
                bigTmpBuf[valueLen--] = '\0';
            }
            bigTmpBuf[++valueLen] = '.';
            bigTmpBuf[++valueLen] = '.';
            bigTmpBuf[++valueLen] = '.';
            if (bigTmpBuf[0] == '""')
                bigTmpBuf[++valueLen] = '""';

            bigTmpBuf[++valueLen] = '\0';
            PORT_Assert(nameLen + valueLen <= (sizeof tmpBuf) - 1);
            memcpy(encodedAVA + nameLen, bigTmpBuf, valueLen + 1);
        }

    SECITEM_FreeItem(avaValue, PR_TRUE);
    if (rv == SECSuccess)
        rv = AppendStr(bufp, encodedAVA);

    if (encodedAVA != tmpBuf)
        PORT_Free(encodedAVA);

    return rv;
}"
Preprocessor In Statement,14,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/js/src/builtin/AtomicsObject.cpp#L278,AtomicsObject.cpp#L278,"{
    switch (viewType){
        case Scalar::Int8:
            {
                int8_t value = (int8_t)numberValue;
                INT_OP(viewData.cast<int8_t*>() + offset, value);
                return value;
        }
    case Scalar::Uint8:
        {
            uint8_t value = (uint8_t)numberValue;
            INT_OP(viewData.cast<uint8_t*>() + offset, value);
            return value;
    }
case Scalar::Int16:
    {
        int16_t value = (int16_t)numberValue;
        INT_OP(viewData.cast<int16_t*>() + offset, value);
        return value;
}
case Scalar::Uint16:
    {
        uint16_t value = (uint16_t)numberValue;
        INT_OP(viewData.cast<uint16_t*>() + offset, value);
        return value;
}
case Scalar::Int32:
    {
        int32_t value = numberValue;
        INT_OP(viewData.cast<int32_t*>() + offset, value);
        return value;
}
case Scalar::Uint32:
    {
        uint32_t value = (uint32_t)numberValue;
        INT_OP(viewData.cast<uint32_t*>() + offset, value);
        return (int32_t)value;
}
default:
    if (badArrayType)
        *badArrayType = true;

    return 0;
}
}"
Preprocessor In Statement,15,https://github.com/mongodb/mongo/blob/67f735e6705091659e2a8cf46a9285f09bcf749a/src/mongo/util/md5.cpp#L133,md5.cpp#L133,"{
    md5_word_t a = pms->abcd[0], b = pms->abcd[1], c = pms->abcd[2], d = pms->abcd[3];
    md5_word_t t;
    md5_word_t xbuf[16];
    const md5_word_t* X;
    {
        static const int w = 1;
        if (*((const md5_byte_t*)&w)){
            if (!((data - (const md5_byte_t*)0) & 3)){
                X = (const md5_word_t*)data;
            }else{
                memcpy(xbuf, data, 64);
                X = xbuf;
            }
        }else{
            const md5_byte_t* xp = data;
            int i;
            X = xbuf;
            for (i = 0;i < 16;++i, xp += 4)
                xbuf[i] = xp[0] + (xp[1] << 8) + (xp[2] << 16) + (xp[3] << 24);
        }
    }
    SET(a, b, c, d, 0, 7, T1);
    SET(d, a, b, c, 1, 12, T2);
    SET(c, d, a, b, 2, 17, T3);
    SET(b, c, d, a, 3, 22, T4);
    SET(a, b, c, d, 4, 7, T5);
    SET(d, a, b, c, 5, 12, T6);
    SET(c, d, a, b, 6, 17, T7);
    SET(b, c, d, a, 7, 22, T8);
    SET(a, b, c, d, 8, 7, T9);
    SET(d, a, b, c, 9, 12, T10);
    SET(c, d, a, b, 10, 17, T11);
    SET(b, c, d, a, 11, 22, T12);
    SET(a, b, c, d, 12, 7, T13);
    SET(d, a, b, c, 13, 12, T14);
    SET(c, d, a, b, 14, 17, T15);
    SET(b, c, d, a, 15, 22, T16);
    SET(a, b, c, d, 1, 5, T17);
    SET(d, a, b, c, 6, 9, T18);
    SET(c, d, a, b, 11, 14, T19);
    SET(b, c, d, a, 0, 20, T20);
    SET(a, b, c, d, 5, 5, T21);
    SET(d, a, b, c, 10, 9, T22);
    SET(c, d, a, b, 15, 14, T23);
    SET(b, c, d, a, 4, 20, T24);
    SET(a, b, c, d, 9, 5, T25);
    SET(d, a, b, c, 14, 9, T26);
    SET(c, d, a, b, 3, 14, T27);
    SET(b, c, d, a, 8, 20, T28);
    SET(a, b, c, d, 13, 5, T29);
    SET(d, a, b, c, 2, 9, T30);
    SET(c, d, a, b, 7, 14, T31);
    SET(b, c, d, a, 12, 20, T32);
    SET(a, b, c, d, 5, 4, T33);
    SET(d, a, b, c, 8, 11, T34);
    SET(c, d, a, b, 11, 16, T35);
    SET(b, c, d, a, 14, 23, T36);
    SET(a, b, c, d, 1, 4, T37);
    SET(d, a, b, c, 4, 11, T38);
    SET(c, d, a, b, 7, 16, T39);
    SET(b, c, d, a, 10, 23, T40);
    SET(a, b, c, d, 13, 4, T41);
    SET(d, a, b, c, 0, 11, T42);
    SET(c, d, a, b, 3, 16, T43);
    SET(b, c, d, a, 6, 23, T44);
    SET(a, b, c, d, 9, 4, T45);
    SET(d, a, b, c, 12, 11, T46);
    SET(c, d, a, b, 15, 16, T47);
    SET(b, c, d, a, 2, 23, T48);
    SET(a, b, c, d, 0, 6, T49);
    SET(d, a, b, c, 7, 10, T50);
    SET(c, d, a, b, 14, 15, T51);
    SET(b, c, d, a, 5, 21, T52);
    SET(a, b, c, d, 12, 6, T53);
    SET(d, a, b, c, 3, 10, T54);
    SET(c, d, a, b, 10, 15, T55);
    SET(b, c, d, a, 1, 21, T56);
    SET(a, b, c, d, 8, 6, T57);
    SET(d, a, b, c, 15, 10, T58);
    SET(c, d, a, b, 6, 15, T59);
    SET(b, c, d, a, 13, 21, T60);
    SET(a, b, c, d, 4, 6, T61);
    SET(d, a, b, c, 11, 10, T62);
    SET(c, d, a, b, 2, 15, T63);
    SET(b, c, d, a, 9, 21, T64);
    pms->abcd[0] += a;
    pms->abcd[1] += b;
    pms->abcd[2] += c;
    pms->abcd[3] += d;
}"
Preprocessor In Statement,16,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/fixincludes/fixtests.c#L137,fixtests.c#L137,"{
    static test_entry_t test_table[] = {FIX_TEST_TABLE, , {NULL, NULL}};
    int ct = TEST_TABLE_CT;
    test_entry_t* pte = test_table;
    do{
        if (strcmp(pte->test_name, tname) == 0)
            return (*pte->test_proc)(fname, text);

        pte++;
    } while (--ct > 0);
    fprintf(stderr, ""fixincludes error:  the `%s' fix test is unknown\n"", tname);
    exit(3);
}"
Preprocessor In Statement,17,https://github.com/git/git/blob/ba78f398be65e941b93276680f68a81075716472/compat/nedmalloc/malloc.c.h#L4797,malloc.c.h#L4797,"{
    mchunkptr p = mem2chunk(mem);
    if (!PREACTION(fm)){
        ;
        if (RTCHECK(ok_address(fm, p) && ok_cinuse(p))){
            size_t psize = chunksize(p);
            mchunkptr next = chunk_plus_offset(p, psize);
            if (!pinuse(p)){
                size_t prevsize = p->prev_foot;
                if ((prevsize & IS_MMAPPED_BIT) != 0){
                    prevsize &= ~IS_MMAPPED_BIT;
                    psize += prevsize + MMAP_FOOT_PAD;
                    if (CALL_MUNMAP((char*)p - prevsize, psize) == 0)
                        fm->footprint -= psize;

                    goto postaction;
                }else{
                    mchunkptr prev = chunk_minus_offset(p, prevsize);
                    psize += prevsize;
                    p = prev;
                    if (RTCHECK(ok_address(fm, prev))){
                        if (p != fm->dv){
                            unlink_chunk(fm, p, prevsize);
                        }else
                            if ((next->head & INUSE_BITS) == INUSE_BITS){
                                fm->dvsize = psize;
                                set_free_with_pinuse(p, psize, next);
                                goto postaction;
                            }
                    }else
                        goto erroraction;
                }
            }
            if (RTCHECK(ok_next(p, next) && ok_pinuse(next))){
                if (!cinuse(next)){
                    if (next == fm->top){
                        size_t tsize = fm->topsize += psize;
                        fm->top = p;
                        p->head = tsize | PINUSE_BIT;
                        if (p == fm->dv){
                            fm->dv = 0;
                            fm->dvsize = 0;
                        }
                        if (should_trim(fm, tsize))
                            sys_trim(fm, 0);

                        goto postaction;
                    }else
                        if (next == fm->dv){
                            size_t dsize = fm->dvsize += psize;
                            fm->dv = p;
                            set_size_and_pinuse_of_free_chunk(p, dsize);
                            goto postaction;
                        }else{
                            size_t nsize = chunksize(next);
                            psize += nsize;
                            unlink_chunk(fm, next, nsize);
                            set_size_and_pinuse_of_free_chunk(p, psize);
                            if (p == fm->dv){
                                fm->dvsize = psize;
                                goto postaction;
                            }
                        }
                }else
                    set_free_with_pinuse(p, psize, next);

                if (is_small(psize)){
                    insert_small_chunk(fm, p, psize);
                    ;
                }else{
                    tchunkptr tp = (tchunkptr)p;
                    insert_large_chunk(fm, tp, psize);
                    ;
                    if (--fm->release_checks == 0)
                        release_unused_segments(fm);
                }
                goto postaction;
            }
        }
        erroraction:
        USAGE_ERROR_ACTION(fm, p);
        postaction:
      POSTACTION(fm);
    }
}"
Preprocessor In Statement,18,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/config/arm/arm-builtins.c#L1202,arm-builtins.c#L1202,"{
    tree V16UQI_type_node = arm_simd_builtin_type(V16QImode, true, false);
    tree V4USI_type_node = arm_simd_builtin_type(V4SImode, true, false);
    tree v16uqi_ftype_v16uqi = build_function_type_list(V16UQI_type_node, V16UQI_type_node, NULL_TREE);
    tree v16uqi_ftype_v16uqi_v16uqi = build_function_type_list(V16UQI_type_node, V16UQI_type_node, V16UQI_type_node, NULL_TREE);
    tree v4usi_ftype_v4usi = build_function_type_list(V4USI_type_node, V4USI_type_node, NULL_TREE);
    tree v4usi_ftype_v4usi_v4usi = build_function_type_list(V4USI_type_node, V4USI_type_node, V4USI_type_node, NULL_TREE);
    tree v4usi_ftype_v4usi_v4usi_v4usi = build_function_type_list(V4USI_type_node, V4USI_type_node, V4USI_type_node, V4USI_type_node, NULL_TREE);
    tree uti_ftype_udi_udi = build_function_type_list(unsigned_intTI_type_node, unsigned_intDI_type_node, unsigned_intDI_type_node, NULL_TREE);
}"
Preprocessor In Statement,19,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/sparc64/pci/fire.c#L285,fire.c#L285,"{
    struct fire_softc* sc;
    const struct fire_desc* desc;
    struct ofw_pci_msi_ranges msi_ranges;
    struct ofw_pci_msi_addr_ranges msi_addr_ranges;
    struct ofw_pci_msi_eq_to_devino msi_eq_to_devino;
    struct fire_msiqarg* fmqa;
    struct timecounter* tc;
    bus_dma_tag_t dmat;
    uint64_t ino_bitmap, val;
    phandle_t node;
    uint32_t prop, prop_array[2];
    int i, j, mode;
    u_int lw;
    uint16_t mps;
    sc = device_get_softc(dev);
    node = ofw_bus_get_node(dev);
    desc = fire_get_desc(dev);
    mode = desc->fd_mode;
    sc->sc_dev = dev;
    sc->sc_mode = mode;
    sc->sc_flags = 0;
    mtx_init(&sc->sc_msi_mtx, ""msi_mtx"", NULL, MTX_DEF);
    mtx_init(&sc->sc_pcib_mtx, ""pcib_mtx"", NULL, MTX_SPIN);
    for (i = 0;i < FIRE_NREG;i++){
        j = i;
        sc->sc_mem_res[i] = bus_alloc_resource_any(dev, SYS_RES_MEMORY, &j, RF_ACTIVE);
        if (sc->sc_mem_res[i] == NULL)
            panic(""%s: could not allocate register bank %d"", __func__, i);
    }
    if (OF_getprop(node, ""portid"", &sc->sc_ign, sizeof (sc->sc_ign)) == -1)
        panic(""%s: could not determine IGN"", __func__);

    if (OF_getprop(node, ""module-revision#"", &prop, sizeof (prop)) == -1)
        panic(""%s: could not determine module-revision"", __func__);

    device_printf(dev, ""%s, module-revision %d, IGN %#x\n"", desc->fd_name, prop, sc->sc_ign);
    i = OF_getprop(node, ""ino-bitmap"", (void*)prop_array, sizeof (prop_array));
    if (i == -1)
        panic(""%s: could not get ino-bitmap"", __func__);

    ino_bitmap = ((uint64_t)prop_array[1] << 32) | prop_array[0];
    for (i = 0;i <= FO_MAX_INO;i++){
        if ((ino_bitmap & (1ULL << i)) == 0)
            continue;

        j = fire_intr_register(sc, i);
        if (j != 0)
            device_printf(dev, ""could not register interrupt controller for INO %d (%d)\n"", i, j);
    }
    FIRE_CTRL_SET(sc, FO_XBC_ERR_LOG_EN, ~0ULL);
    FIRE_CTRL_SET(sc, FO_XBC_ERR_STAT_CLR, ~0ULL);
    FIRE_CTRL_SET(sc, FO_XBC_INT_EN, ~0ULL);
    if (sc->sc_mode == FIRE_MODE_FIRE){
        FIRE_CTRL_SET(sc, FIRE_JBUS_PAR_CTRL,
		    FIRE_JBUS_PAR_CTRL_P_EN);
        FIRE_CTRL_SET(sc, FIRE_JBC_FATAL_RST_EN,
		    ((1ULL << FIRE_JBC_FATAL_RST_EN_SPARE_P_INT_SHFT) &
		    FIRE_JBC_FATAL_RST_EN_SPARE_P_INT_MASK) |
		    FIRE_JBC_FATAL_RST_EN_MB_PEA_P_INT |
		    FIRE_JBC_FATAL_RST_EN_CPE_P_INT |
		    FIRE_JBC_FATAL_RST_EN_APE_P_INT |
		    FIRE_JBC_FATAL_RST_EN_PIO_CPE_INT |
		    FIRE_JBC_FATAL_RST_EN_JTCEEW_P_INT |
		    FIRE_JBC_FATAL_RST_EN_JTCEEI_P_INT |
		    FIRE_JBC_FATAL_RST_EN_JTCEER_P_INT);
        FIRE_CTRL_SET(sc, FIRE_JBC_CORE_BLOCK_INT_EN, ~0ULL);
    }
    FIRE_PCI_SET(sc, FO_PCI_TLU_OEVENT_STAT_CLR,
	    FO_PCI_TLU_OEVENT_S_MASK | FO_PCI_TLU_OEVENT_P_MASK);
    FIRE_PCI_SET(sc, FO_PCI_TLU_OEVENT_INT_EN,
	    FO_PCI_TLU_OEVENT_S_MASK | FO_PCI_TLU_OEVENT_P_MASK);
    FIRE_PCI_SET(sc, FO_PCI_TLU_UERR_STAT_CLR,
	    FO_PCI_TLU_UERR_INT_S_MASK | FO_PCI_TLU_UERR_INT_P_MASK);
    FIRE_PCI_SET(sc, FO_PCI_TLU_UERR_INT_EN,
	    FO_PCI_TLU_UERR_INT_S_MASK | FO_PCI_TLU_UERR_INT_P_MASK);
    FIRE_PCI_SET(sc, FO_PCI_TLU_CERR_STAT_CLR,
	    FO_PCI_TLU_CERR_INT_S_MASK | FO_PCI_TLU_CERR_INT_P_MASK);
    FIRE_PCI_SET(sc, FO_PCI_TLU_CERR_INT_EN,
	    FO_PCI_TLU_CERR_INT_S_MASK | FO_PCI_TLU_CERR_INT_P_MASK);
    val = FIRE_PCI_READ_8(sc, FO_PCI_TLU_CTRL) | ((FO_PCI_TLU_CTRL_L0S_TIM_DFLT << FO_PCI_TLU_CTRL_L0S_TIM_SHFT) & FO_PCI_TLU_CTRL_L0S_TIM_MASK) | ((FO_PCI_TLU_CTRL_CFG_DFLT << FO_PCI_TLU_CTRL_CFG_SHFT) & FO_PCI_TLU_CTRL_CFG_MASK);
    if (sc->sc_mode == FIRE_MODE_OBERON)
        val &= ~FO_PCI_TLU_CTRL_NWPR_EN;

    val |= FO_PCI_TLU_CTRL_CFG_REMAIN_DETECT_QUIET;
    FIRE_PCI_SET(sc, FO_PCI_TLU_CTRL, val);
    FIRE_PCI_SET(sc, FO_PCI_TLU_DEV_CTRL, 0);
    FIRE_PCI_SET(sc, FO_PCI_TLU_LNK_CTRL, FO_PCI_TLU_LNK_CTRL_CLK);
    if (sc->sc_mode == FIRE_MODE_OBERON)
        FIRE_PCI_SET(sc, FO_PCI_LPU_INT_MASK, 0);
    else
        FIRE_PCI_SET(sc, FO_PCI_LPU_RST, 0);

    FIRE_PCI_SET(sc, FO_PCI_LPU_LNK_LYR_CFG,
	    FO_PCI_LPU_LNK_LYR_CFG_VC0_EN);
    FIRE_PCI_SET(sc, FO_PCI_LPU_FLW_CTRL_UPDT_CTRL,
	    FO_PCI_LPU_FLW_CTRL_UPDT_CTRL_FC0_NP_EN |
	    FO_PCI_LPU_FLW_CTRL_UPDT_CTRL_FC0_P_EN);
    if (sc->sc_mode == FIRE_MODE_OBERON)
        FIRE_PCI_SET(sc, FO_PCI_LPU_TXLNK_RPLY_TMR_THRS,
		    (OBERON_PCI_LPU_TXLNK_RPLY_TMR_THRS_DFLT <<
		    FO_PCI_LPU_TXLNK_RPLY_TMR_THRS_SHFT) &
		    FO_PCI_LPU_TXLNK_RPLY_TMR_THRS_MASK);
    else{
        switch ((FIRE_PCI_READ_8(sc, FO_PCI_TLU_LNK_STAT) & FO_PCI_TLU_LNK_STAT_WDTH_MASK) >> FO_PCI_TLU_LNK_STAT_WDTH_SHFT){
            case 1:
                lw = 0;
                break;
            case 4:
                lw = 1;
                break;
            case 8:
                lw = 2;
                break;
            case 16:
                lw = 3;
                break;
            default:
                lw = 0;
        }
        mps = (FIRE_PCI_READ_8(sc, FO_PCI_TLU_CTRL) & FO_PCI_TLU_CTRL_CFG_MPS_MASK) >> FO_PCI_TLU_CTRL_CFG_MPS_SHFT;
        i = sizeof (fire_freq_nak_tmr_thrs) / sizeof (*fire_freq_nak_tmr_thrs);
        if (mps >= i)
            mps = i - 1;

        FIRE_PCI_SET(sc, FO_PCI_LPU_TXLNK_FREQ_LAT_TMR_THRS,
		    (fire_freq_nak_tmr_thrs[mps][lw] <<
		    FO_PCI_LPU_TXLNK_FREQ_LAT_TMR_THRS_SHFT) &
		    FO_PCI_LPU_TXLNK_FREQ_LAT_TMR_THRS_MASK);
        FIRE_PCI_SET(sc, FO_PCI_LPU_TXLNK_RPLY_TMR_THRS,
		    (fire_rply_tmr_thrs[mps][lw] <<
		    FO_PCI_LPU_TXLNK_RPLY_TMR_THRS_SHFT) &
		    FO_PCI_LPU_TXLNK_RPLY_TMR_THRS_MASK);
        FIRE_PCI_SET(sc, FO_PCI_LPU_TXLNK_RTR_FIFO_PTR,
		    ((FO_PCI_LPU_TXLNK_RTR_FIFO_PTR_TL_DFLT <<
		    FO_PCI_LPU_TXLNK_RTR_FIFO_PTR_TL_SHFT) &
		    FO_PCI_LPU_TXLNK_RTR_FIFO_PTR_TL_MASK) |
		    ((FO_PCI_LPU_TXLNK_RTR_FIFO_PTR_HD_DFLT <<
		    FO_PCI_LPU_TXLNK_RTR_FIFO_PTR_HD_SHFT) &
		    FO_PCI_LPU_TXLNK_RTR_FIFO_PTR_HD_MASK));
        FIRE_PCI_SET(sc, FO_PCI_LPU_LTSSM_CFG2,
		    (FO_PCI_LPU_LTSSM_CFG2_12_TO_DFLT <<
		    FO_PCI_LPU_LTSSM_CFG2_12_TO_SHFT) &
		    FO_PCI_LPU_LTSSM_CFG2_12_TO_MASK);
        FIRE_PCI_SET(sc, FO_PCI_LPU_LTSSM_CFG3,
		    (FO_PCI_LPU_LTSSM_CFG3_2_TO_DFLT <<
		    FO_PCI_LPU_LTSSM_CFG3_2_TO_SHFT) &
		    FO_PCI_LPU_LTSSM_CFG3_2_TO_MASK);
        FIRE_PCI_SET(sc, FO_PCI_LPU_LTSSM_CFG4,
		    ((FO_PCI_LPU_LTSSM_CFG4_DATA_RATE_DFLT <<
		    FO_PCI_LPU_LTSSM_CFG4_DATA_RATE_SHFT) &
		    FO_PCI_LPU_LTSSM_CFG4_DATA_RATE_MASK) |
		    ((FO_PCI_LPU_LTSSM_CFG4_N_FTS_DFLT <<
		    FO_PCI_LPU_LTSSM_CFG4_N_FTS_SHFT) &
		    FO_PCI_LPU_LTSSM_CFG4_N_FTS_MASK));
        FIRE_PCI_SET(sc, FO_PCI_LPU_LTSSM_CFG5, 0);
    }
    FIRE_PCI_SET(sc, FO_PCI_ILU_ERR_STAT_CLR, ~0ULL);
    FIRE_PCI_SET(sc, FO_PCI_ILU_INT_EN, ~0ULL);
    FIRE_PCI_SET(sc, FO_PCI_IMU_ERR_STAT_CLR, ~0ULL);
    FIRE_PCI_SET(sc, FO_PCI_IMU_INT_EN,
	    FIRE_PCI_READ_8(sc, FO_PCI_IMU_INT_EN) &
	    ~(FO_PCI_IMU_ERR_INT_FATAL_MES_NOT_EN_S |
	    FO_PCI_IMU_ERR_INT_NFATAL_MES_NOT_EN_S |
	    FO_PCI_IMU_ERR_INT_COR_MES_NOT_EN_S |
	    FO_PCI_IMU_ERR_INT_FATAL_MES_NOT_EN_P |
	    FO_PCI_IMU_ERR_INT_NFATAL_MES_NOT_EN_P |
	    FO_PCI_IMU_ERR_INT_COR_MES_NOT_EN_P));
    FIRE_PCI_SET(sc, FO_PCI_MMU_ERR_STAT_CLR,
	    FO_PCI_MMU_ERR_INT_S_MASK | FO_PCI_MMU_ERR_INT_P_MASK);
    FIRE_PCI_SET(sc, FO_PCI_MMU_INT_EN,
	    FO_PCI_MMU_ERR_INT_S_MASK | FO_PCI_MMU_ERR_INT_P_MASK);
    FIRE_PCI_SET(sc, FO_PCI_DMC_CORE_BLOCK_INT_EN, ~0ULL);
    FIRE_PCI_SET(sc, FO_PCI_DMC_DBG_SEL_PORTA, 0);
    FIRE_PCI_SET(sc, FO_PCI_DMC_DBG_SEL_PORTB, 0);
    FIRE_PCI_SET(sc, FO_PCI_PEC_CORE_BLOCK_INT_EN, ~0ULL);
    if ((ino_bitmap & (1ULL << FO_DMC_PEC_INO)) != 0)
        fire_set_intr(sc, 1, FO_DMC_PEC_INO, fire_dmc_pec, sc);

    if ((ino_bitmap & (1ULL << FO_XCB_INO)) != 0)
        fire_set_intr(sc, 0, FO_XCB_INO, fire_xcb, sc);

    if (OF_getprop(node, ""#msi"", &sc->sc_msi_count, sizeof (sc->sc_msi_count)) == -1)
        panic(""%s: could not determine MSI count"", __func__);

    if (OF_getprop(node, ""msi-ranges"", &msi_ranges, sizeof (msi_ranges)) == -1)
        sc->sc_msi_first = 0;
    else
        sc->sc_msi_first = msi_ranges.first;

    if (OF_getprop(node, ""msi-data-mask"", &sc->sc_msi_data_mask, sizeof (sc->sc_msi_data_mask)) == -1)
        panic(""%s: could not determine MSI data mask"", __func__);

    if (OF_getprop(node, ""msix-data-width"", &sc->sc_msix_data_width, sizeof (sc->sc_msix_data_width)) > 0)
        sc->sc_flags |= FIRE_MSIX;

    if (OF_getprop(node, ""msi-address-ranges"", &msi_addr_ranges, sizeof (msi_addr_ranges)) == -1)
        panic(""%s: could not determine MSI address ranges"", __func__);

    sc->sc_msi_addr32 = OFW_PCI_MSI_ADDR_RANGE_32(&msi_addr_ranges);
    sc->sc_msi_addr64 = OFW_PCI_MSI_ADDR_RANGE_64(&msi_addr_ranges);
    if (OF_getprop(node, ""#msi-eqs"", &sc->sc_msiq_count, sizeof (sc->sc_msiq_count)) == -1)
        panic(""%s: could not determine MSI event queue count"", __func__);

    if (OF_getprop(node, ""msi-eq-size"", &sc->sc_msiq_size, sizeof (sc->sc_msiq_size)) == -1)
        panic(""%s: could not determine MSI event queue size"", __func__);

    if (OF_getprop(node, ""msi-eq-to-devino"", &msi_eq_to_devino, sizeof (msi_eq_to_devino)) == -1 && OF_getprop(node, ""msi-eq-devino"", &msi_eq_to_devino, sizeof (msi_eq_to_devino)) == -1){
        sc->sc_msiq_first = 0;
        sc->sc_msiq_ino_first = FO_EQ_FIRST_INO;
    }else{
        sc->sc_msiq_first = msi_eq_to_devino.eq_first;
        sc->sc_msiq_ino_first = msi_eq_to_devino.devino_first;
    }
    if (sc->sc_msiq_ino_first < FO_EQ_FIRST_INO || sc->sc_msiq_ino_first + sc->sc_msiq_count - 1 > FO_EQ_LAST_INO)
        panic(""%s: event queues exceed INO range"", __func__);

    sc->sc_msi_bitmap = malloc(roundup2(sc->sc_msi_count, NBBY) / NBBY, M_DEVBUF, M_NOWAIT | M_ZERO);
    if (sc->sc_msi_bitmap == NULL)
        panic(""%s: could not malloc MSI bitmap"", __func__);

    sc->sc_msi_msiq_table = malloc(sc->sc_msi_count * sizeof (*sc->sc_msi_msiq_table), M_DEVBUF, M_NOWAIT | M_ZERO);
    if (sc->sc_msi_msiq_table == NULL)
        panic(""%s: could not malloc MSI-MSI event queue table"", __func__);

    sc->sc_msiq_bitmap = malloc(roundup2(sc->sc_msiq_count, NBBY) / NBBY, M_DEVBUF, M_NOWAIT | M_ZERO);
    if (sc->sc_msiq_bitmap == NULL)
        panic(""%s: could not malloc MSI event queue bitmap"", __func__);

    j = FO_EQ_RECORD_SIZE * FO_EQ_NRECORDS * sc->sc_msiq_count;
    sc->sc_msiq = contigmalloc(j, M_DEVBUF, M_NOWAIT, 0, ~0UL, FO_EQ_ALIGNMENT, 0);
    if (sc->sc_msiq == NULL)
        panic(""%s: could not contigmalloc MSI event queue"", __func__);

    memset(sc->sc_msiq, 0, j);
    FIRE_PCI_SET(sc, FO_PCI_EQ_BASE_ADDR, FO_PCI_EQ_BASE_ADDR_BYPASS |
	    (pmap_kextract((vm_offset_t)sc->sc_msiq) &
	    FO_PCI_EQ_BASE_ADDR_MASK));
    for (i = 0;i < sc->sc_msi_count;i++){
        j = (i + sc->sc_msi_first) << 3;
        FIRE_PCI_WRITE_8(sc, FO_PCI_MSI_MAP_BASE + j,
		    FIRE_PCI_READ_8(sc, FO_PCI_MSI_MAP_BASE + j) &
		    ~FO_PCI_MSI_MAP_V);
    }
    for (i = 0;i < sc->sc_msiq_count;i++){
        j = i + sc->sc_msiq_ino_first;
        if ((ino_bitmap & (1ULL << j)) == 0){
            mtx_lock(&sc->sc_msi_mtx);
            setbit(sc->sc_msiq_bitmap, i);
            mtx_unlock(&sc->sc_msi_mtx);
        }
        fmqa = intr_vectors[INTMAP_VEC(sc->sc_ign, j)].iv_icarg;
        mtx_init(&fmqa->fmqa_mtx, ""msiq_mtx"", NULL, MTX_SPIN);
        fmqa->fmqa_base = (struct fo_msiq_record*)((caddr_t)sc->sc_msiq + (FO_EQ_RECORD_SIZE * FO_EQ_NRECORDS * i));
        j = i + sc->sc_msiq_first;
        fmqa->fmqa_msiq = j;
        j <<= 3;
        fmqa->fmqa_head = FO_PCI_EQ_HD_BASE + j;
        fmqa->fmqa_tail = FO_PCI_EQ_TL_BASE + j;
        FIRE_PCI_WRITE_8(sc, FO_PCI_EQ_CTRL_CLR_BASE + j,
		    FO_PCI_EQ_CTRL_CLR_COVERR | FO_PCI_EQ_CTRL_CLR_E2I |
		    FO_PCI_EQ_CTRL_CLR_DIS);
        FIRE_PCI_WRITE_8(sc, fmqa->fmqa_tail,
		    (0 << FO_PCI_EQ_TL_SHFT) & FO_PCI_EQ_TL_MASK);
        FIRE_PCI_WRITE_8(sc, fmqa->fmqa_head,
		    (0 << FO_PCI_EQ_HD_SHFT) & FO_PCI_EQ_HD_MASK);
    }
    FIRE_PCI_SET(sc, FO_PCI_MSI_32_BIT_ADDR, sc->sc_msi_addr32 &
	    FO_PCI_MSI_32_BIT_ADDR_MASK);
    FIRE_PCI_SET(sc, FO_PCI_MSI_64_BIT_ADDR, sc->sc_msi_addr64 &
	    FO_PCI_MSI_64_BIT_ADDR_MASK);
    mtx_lock(&sc->sc_msi_mtx);
    for (i = 0;i < sc->sc_msiq_count;i++){
        if (isclr(sc->sc_msiq_bitmap, i) != 0){
            j = i;
            break;
        }
    }
    if (i == sc->sc_msiq_count){
        mtx_unlock(&sc->sc_msi_mtx);
        panic(""%s: no spare event queue for PCIe messages"", __func__);
    }
    setbit(sc->sc_msiq_bitmap, j);
    mtx_unlock(&sc->sc_msi_mtx);
    i = INTMAP_VEC(sc->sc_ign, j + sc->sc_msiq_ino_first);
    if (bus_set_resource(dev, SYS_RES_IRQ, 2, i, 1) != 0)
        panic(""%s: failed to add interrupt for PCIe messages"", __func__);

    fire_set_intr(sc, 2, INTINO(i), fire_pcie, intr_vectors[i].iv_icarg);
    j += sc->sc_msiq_first;
    if (j > 35)
        panic(""%s: invalid queue for PCIe messages (%d)"", __func__, j);

    FIRE_PCI_SET(sc, FO_PCI_ERR_COR, FO_PCI_ERR_PME_V |
	    ((j << FO_PCI_ERR_PME_EQNUM_SHFT) & FO_PCI_ERR_PME_EQNUM_MASK));
    FIRE_PCI_SET(sc, FO_PCI_ERR_NONFATAL, FO_PCI_ERR_PME_V |
	    ((j << FO_PCI_ERR_PME_EQNUM_SHFT) & FO_PCI_ERR_PME_EQNUM_MASK));
    FIRE_PCI_SET(sc, FO_PCI_ERR_FATAL, FO_PCI_ERR_PME_V |
	    ((j << FO_PCI_ERR_PME_EQNUM_SHFT) & FO_PCI_ERR_PME_EQNUM_MASK));
    FIRE_PCI_SET(sc, FO_PCI_PM_PME, 0);
    FIRE_PCI_SET(sc, FO_PCI_PME_TO_ACK, 0);
    FIRE_PCI_WRITE_8(sc, FO_PCI_EQ_CTRL_SET_BASE + (j << 3),
	    FO_PCI_EQ_CTRL_SET_EN);
    if (device_get_unit(dev) == 0){
        FIRE_CTRL_SET(sc, FO_XBC_PRF_CNT0, 0);
        FIRE_CTRL_SET(sc, FO_XBC_PRF_CNT1, 0);
        FIRE_CTRL_SET(sc, FO_XBC_PRF_CNT_SEL,
		    (FO_XBC_PRF_CNT_NONE << FO_XBC_PRF_CNT_CNT1_SHFT) |
		    (FO_XBC_PRF_CNT_XB_CLK << FO_XBC_PRF_CNT_CNT0_SHFT));
        tc = malloc(sizeof (*tc), M_DEVBUF, M_NOWAIT | M_ZERO);
        if (tc == NULL)
            panic(""%s: could not malloc timecounter"", __func__);

        tc->tc_get_timecount = fire_get_timecount;
        tc->tc_counter_mask = TC_COUNTER_MAX_MASK;
        if (OF_getprop(OF_peer(0), ""clock-frequency"", &prop, sizeof (prop)) == -1)
            panic(""%s: could not determine clock frequency"", __func__);

        tc->tc_frequency = prop;
        tc->tc_name = strdup(device_get_nameunit(dev), M_DEVBUF);
        tc->tc_priv = sc;
        if (fire_get_timecount(tc) - fire_get_timecount(tc) != 0)
            tc->tc_quality = FIRE_PERF_CNT_QLTY;
        else
            tc->tc_quality = -FIRE_PERF_CNT_QLTY;

        tc_init(tc);
    }
    memcpy(&sc->sc_dma_methods, &iommu_dma_methods, sizeof (sc->sc_dma_methods));
    sc->sc_is.is_flags = IOMMU_FIRE | IOMMU_PRESERVE_PROM;
    if (sc->sc_mode == FIRE_MODE_OBERON){
        sc->sc_is.is_flags |= IOMMU_FLUSH_CACHE;
        sc->sc_is.is_pmaxaddr = IOMMU_MAXADDR(OBERON_IOMMU_BITS);
    }else{
        sc->sc_dma_methods.dm_dmamap_sync = fire_dmamap_sync;
        sc->sc_is.is_pmaxaddr = IOMMU_MAXADDR(FIRE_IOMMU_BITS);
    }
    sc->sc_is.is_sb[0] = sc->sc_is.is_sb[1] = 0;
    sc->sc_is.is_bustag = rman_get_bustag(sc->sc_mem_res[FIRE_PCI]);
    sc->sc_is.is_bushandle = rman_get_bushandle(sc->sc_mem_res[FIRE_PCI]);
    sc->sc_is.is_iommu = FO_PCI_MMU;
    val = FIRE_PCI_READ_8(sc, FO_PCI_MMU + IMR_CTL);
    iommu_init(device_get_nameunit(dev), &sc->sc_is, 7, -1, 0);
    if (bus_dma_tag_create(bus_get_dma_tag(dev), 8, 0x100000000, sc->sc_is.is_pmaxaddr, ~0, NULL, NULL, sc->sc_is.is_pmaxaddr, 0xff, 0xffffffff, 0, NULL, NULL, &dmat) != 0)
        panic(""%s: could not create PCI DMA tag"", __func__);

    dmat->dt_cookie = &sc->sc_is;
    dmat->dt_mt = &sc->sc_dma_methods;
    if (ofw_pci_attach_common(dev, dmat, FO_IO_SIZE, FO_MEM_SIZE) != 0)
        panic(""%s: ofw_pci_attach_common() failed"", __func__);

    FIRE_SYSCTL_ADD_UINT(""ilu_err"", &sc->sc_stats_ilu_err,
	    ""ILU unknown errors"");
    FIRE_SYSCTL_ADD_UINT(""jbc_ce_async"", &sc->sc_stats_jbc_ce_async,
	    ""JBC correctable errors"");
    FIRE_SYSCTL_ADD_UINT(""jbc_unsol_int"", &sc->sc_stats_jbc_unsol_int,
	    ""JBC unsolicited interrupt ACK/NACK errors"");
    FIRE_SYSCTL_ADD_UINT(""jbc_unsol_rd"", &sc->sc_stats_jbc_unsol_rd,
	    ""JBC unsolicited read response errors"");
    FIRE_SYSCTL_ADD_UINT(""mmu_err"", &sc->sc_stats_mmu_err, ""MMU errors"");
    FIRE_SYSCTL_ADD_UINT(""tlu_ce"", &sc->sc_stats_tlu_ce,
	    ""DLU/TLU correctable errors"");
    FIRE_SYSCTL_ADD_UINT(""tlu_oe_non_fatal"",
	    &sc->sc_stats_tlu_oe_non_fatal,
	    ""DLU/TLU other event non-fatal errors summary"");
    FIRE_SYSCTL_ADD_UINT(""tlu_oe_rx_err"", &sc->sc_stats_tlu_oe_rx_err,
	    ""DLU/TLU receive other event errors"");
    FIRE_SYSCTL_ADD_UINT(""tlu_oe_tx_err"", &sc->sc_stats_tlu_oe_tx_err,
	    ""DLU/TLU transmit other event errors"");
    FIRE_SYSCTL_ADD_UINT(""ubc_dmardue"", &sc->sc_stats_ubc_dmardue,
	    ""UBC DMARDUE erros"");
    device_add_child(dev, ""pci"", -1);
    return (bus_generic_attach(dev));
}"
Preprocessor In Statement,20,https://github.com/apache/subversion/blob/0a73cab17bd4114d1ce96dc5b89b0e44ec0fd5d1/subversion/tests/libsvn_fs/fs-test.c#L3009,fs-test.c#L3009,"{
    SVN_ERR(svn_fs_begin_txn(&txn, fs, rev, subpool));
    SVN_ERR(svn_fs_txn_root(&txn_root, txn, subpool));
    SVN_ERR(svn_test__set_file_contents(txn_root, ""iota"", iota_contents_2, subpool));
    SVN_ERR(svn_fs_commit_txn(NULL, &rev, txn, subpool));
    SVN_TEST_ASSERT(SVN_IS_VALID_REVNUM(rev));
    svn_pool_clear(subpool);
    SVN_ERR(svn_fs_begin_txn(&txn, fs, rev, subpool));
    SVN_ERR(svn_fs_txn_root(&txn_root, txn, subpool));
    SVN_ERR(svn_test__set_file_contents(txn_root, ""iota"", iota_contents_3, subpool));
    SVN_ERR(svn_fs_commit_txn(NULL, &rev, txn, subpool));
    SVN_TEST_ASSERT(SVN_IS_VALID_REVNUM(rev));
    svn_pool_clear(subpool);
    SVN_ERR(svn_fs_begin_txn(&txn, fs, rev, subpool));
    SVN_ERR(svn_fs_txn_root(&txn_root, txn, subpool));
    SVN_ERR(svn_test__set_file_contents(txn_root, ""iota"", iota_contents_4, subpool));
    SVN_ERR(svn_fs_commit_txn(NULL, &rev, txn, subpool));
    SVN_TEST_ASSERT(SVN_IS_VALID_REVNUM(rev));
    svn_pool_clear(subpool);
    SVN_ERR(svn_fs_begin_txn(&txn, fs, rev, subpool));
    SVN_ERR(svn_fs_txn_root(&txn_root, txn, subpool));
    SVN_ERR(svn_test__set_file_contents(txn_root, ""iota"", iota_contents_5, subpool));
    SVN_ERR(svn_fs_commit_txn(NULL, &rev, txn, subpool));
    SVN_TEST_ASSERT(SVN_IS_VALID_REVNUM(rev));
    svn_pool_clear(subpool);
    SVN_ERR(svn_fs_begin_txn(&txn, fs, rev, subpool));
    SVN_ERR(svn_fs_txn_root(&txn_root, txn, subpool));
    SVN_ERR(svn_test__set_file_contents(txn_root, ""iota"", iota_contents_6, subpool));
    SVN_ERR(svn_fs_commit_txn(NULL, &rev, txn, subpool));
    SVN_TEST_ASSERT(SVN_IS_VALID_REVNUM(rev));
    svn_pool_clear(subpool);
    SVN_ERR(svn_fs_begin_txn(&txn, fs, rev, subpool));
    SVN_ERR(svn_fs_txn_root(&txn_root, txn, subpool));
    SVN_ERR(svn_test__set_file_contents(txn_root, ""iota"", iota_contents_7, subpool));
    SVN_ERR(svn_fs_commit_txn(NULL, &rev, txn, subpool));
    SVN_TEST_ASSERT(SVN_IS_VALID_REVNUM(rev));
    svn_pool_clear(subpool);
    {
        svn_fs_root_t* root;
        static svn_test__tree_entry_t expected_entries[] = {{""iota"", iota_contents_1}, {""A"", 0}, {""A/mu"", ""This is the file 'mu'.\n""}, {""A/B"", 0}, {""A/B/lambda"", ""This is the file 'lambda'.\n""}, {""A/B/E"", 0}, {""A/B/E/alpha"", ""This is the file 'alpha'.\n""}, {""A/B/E/beta"", ""This is the file 'beta'.\n""}, {""A/B/F"", 0}, {""A/C"", 0}, {""A/D"", 0}, {""A/D/gamma"", ""This is the file 'gamma'.\n""}, {""A/D/G"", 0}, {""A/D/G/pi"", ""This is the file 'pi'.\n""}, {""A/D/G/rho"", ""This is the file 'rho'.\n""}, {""A/D/G/tau"", ""This is the file 'tau'.\n""}, {""A/D/H"", 0}, {""A/D/H/chi"", ""This is the file 'chi'.\n""}, {""A/D/H/psi"", ""This is the file 'psi'.\n""}, {""A/D/H/omega"", ""This is the file 'omega'.\n""}};
        SVN_ERR(svn_fs_revision_root(&root, fs, 1, pool));
        SVN_ERR(svn_test__validate_tree(root, expected_entries, 20, pool));
    }
    {
        svn_fs_root_t* root;
        static svn_test__tree_entry_t expected_entries[] = {{""iota"", iota_contents_2}, {""A"", 0}, {""A/mu"", ""This is the file 'mu'.\n""}, {""A/B"", 0}, {""A/B/lambda"", ""This is the file 'lambda'.\n""}, {""A/B/E"", 0}, {""A/B/E/alpha"", ""This is the file 'alpha'.\n""}, {""A/B/E/beta"", ""This is the file 'beta'.\n""}, {""A/B/F"", 0}, {""A/C"", 0}, {""A/D"", 0}, {""A/D/gamma"", ""This is the file 'gamma'.\n""}, {""A/D/G"", 0}, {""A/D/G/pi"", ""This is the file 'pi'.\n""}, {""A/D/G/rho"", ""This is the file 'rho'.\n""}, {""A/D/G/tau"", ""This is the file 'tau'.\n""}, {""A/D/H"", 0}, {""A/D/H/chi"", ""This is the file 'chi'.\n""}, {""A/D/H/psi"", ""This is the file 'psi'.\n""}, {""A/D/H/omega"", ""This is the file 'omega'.\n""}};
        SVN_ERR(svn_fs_revision_root(&root, fs, 2, pool));
        SVN_ERR(svn_test__validate_tree(root, expected_entries, 20, pool));
    }
    {
        svn_fs_root_t* root;
        static svn_test__tree_entry_t expected_entries[] = {{""iota"", iota_contents_3}, {""A"", 0}, {""A/mu"", ""This is the file 'mu'.\n""}, {""A/B"", 0}, {""A/B/lambda"", ""This is the file 'lambda'.\n""}, {""A/B/E"", 0}, {""A/B/E/alpha"", ""This is the file 'alpha'.\n""}, {""A/B/E/beta"", ""This is the file 'beta'.\n""}, {""A/B/F"", 0}, {""A/C"", 0}, {""A/D"", 0}, {""A/D/gamma"", ""This is the file 'gamma'.\n""}, {""A/D/G"", 0}, {""A/D/G/pi"", ""This is the file 'pi'.\n""}, {""A/D/G/rho"", ""This is the file 'rho'.\n""}, {""A/D/G/tau"", ""This is the file 'tau'.\n""}, {""A/D/H"", 0}, {""A/D/H/chi"", ""This is the file 'chi'.\n""}, {""A/D/H/psi"", ""This is the file 'psi'.\n""}, {""A/D/H/omega"", ""This is the file 'omega'.\n""}};
        SVN_ERR(svn_fs_revision_root(&root, fs, 3, pool));
        SVN_ERR(svn_test__validate_tree(root, expected_entries, 20, pool));
    }
    {
        svn_fs_root_t* root;
        static svn_test__tree_entry_t expected_entries[] = {{""iota"", iota_contents_4}, {""A"", 0}, {""A/mu"", ""This is the file 'mu'.\n""}, {""A/B"", 0}, {""A/B/lambda"", ""This is the file 'lambda'.\n""}, {""A/B/E"", 0}, {""A/B/E/alpha"", ""This is the file 'alpha'.\n""}, {""A/B/E/beta"", ""This is the file 'beta'.\n""}, {""A/B/F"", 0}, {""A/C"", 0}, {""A/D"", 0}, {""A/D/gamma"", ""This is the file 'gamma'.\n""}, {""A/D/G"", 0}, {""A/D/G/pi"", ""This is the file 'pi'.\n""}, {""A/D/G/rho"", ""This is the file 'rho'.\n""}, {""A/D/G/tau"", ""This is the file 'tau'.\n""}, {""A/D/H"", 0}, {""A/D/H/chi"", ""This is the file 'chi'.\n""}, {""A/D/H/psi"", ""This is the file 'psi'.\n""}, {""A/D/H/omega"", ""This is the file 'omega'.\n""}};
        SVN_ERR(svn_fs_revision_root(&root, fs, 4, pool));
        SVN_ERR(svn_test__validate_tree(root, expected_entries, 20, pool));
    }
    {
        svn_fs_root_t* root;
        static svn_test__tree_entry_t expected_entries[] = {{""iota"", iota_contents_5}, {""A"", 0}, {""A/mu"", ""This is the file 'mu'.\n""}, {""A/B"", 0}, {""A/B/lambda"", ""This is the file 'lambda'.\n""}, {""A/B/E"", 0}, {""A/B/E/alpha"", ""This is the file 'alpha'.\n""}, {""A/B/E/beta"", ""This is the file 'beta'.\n""}, {""A/B/F"", 0}, {""A/C"", 0}, {""A/D"", 0}, {""A/D/G"", 0}, {""A/D/gamma"", ""This is the file 'gamma'.\n""}, {""A/D/G/pi"", ""This is the file 'pi'.\n""}, {""A/D/G/rho"", ""This is the file 'rho'.\n""}, {""A/D/G/tau"", ""This is the file 'tau'.\n""}, {""A/D/H"", 0}, {""A/D/H/chi"", ""This is the file 'chi'.\n""}, {""A/D/H/psi"", ""This is the file 'psi'.\n""}, {""A/D/H/omega"", ""This is the file 'omega'.\n""}};
        SVN_ERR(svn_fs_revision_root(&root, fs, 5, pool));
        SVN_ERR(svn_test__validate_tree(root, expected_entries, 20, pool));
    }
    {
        svn_fs_root_t* root;
        static svn_test__tree_entry_t expected_entries[] = {{""iota"", iota_contents_6}, {""A"", 0}, {""A/mu"", ""This is the file 'mu'.\n""}, {""A/B"", 0}, {""A/B/lambda"", ""This is the file 'lambda'.\n""}, {""A/B/E"", 0}, {""A/B/E/alpha"", ""This is the file 'alpha'.\n""}, {""A/B/E/beta"", ""This is the file 'beta'.\n""}, {""A/B/F"", 0}, {""A/C"", 0}, {""A/D"", 0}, {""A/D/gamma"", ""This is the file 'gamma'.\n""}, {""A/D/G"", 0}, {""A/D/G/pi"", ""This is the file 'pi'.\n""}, {""A/D/G/rho"", ""This is the file 'rho'.\n""}, {""A/D/G/tau"", ""This is the file 'tau'.\n""}, {""A/D/H"", 0}, {""A/D/H/chi"", ""This is the file 'chi'.\n""}, {""A/D/H/psi"", ""This is the file 'psi'.\n""}, {""A/D/H/omega"", ""This is the file 'omega'.\n""}};
        SVN_ERR(svn_fs_revision_root(&root, fs, 6, pool));
        SVN_ERR(svn_test__validate_tree(root, expected_entries, 20, pool));
    }
    {
        svn_fs_root_t* root;
        static svn_test__tree_entry_t expected_entries[] = {{""iota"", iota_contents_7}, {""A"", 0}, {""A/mu"", ""This is the file 'mu'.\n""}, {""A/B"", 0}, {""A/B/lambda"", ""This is the file 'lambda'.\n""}, {""A/B/E"", 0}, {""A/B/E/alpha"", ""This is the file 'alpha'.\n""}, {""A/B/E/beta"", ""This is the file 'beta'.\n""}, {""A/B/F"", 0}, {""A/C"", 0}, {""A/D"", 0}, {""A/D/gamma"", ""This is the file 'gamma'.\n""}, {""A/D/G"", 0}, {""A/D/G/pi"", ""This is the file 'pi'.\n""}, {""A/D/G/rho"", ""This is the file 'rho'.\n""}, {""A/D/G/tau"", ""This is the file 'tau'.\n""}, {""A/D/H"", 0}, {""A/D/H/chi"", ""This is the file 'chi'.\n""}, {""A/D/H/psi"", ""This is the file 'psi'.\n""}, {""A/D/H/omega"", ""This is the file 'omega'.\n""}};
        SVN_ERR(svn_fs_revision_root(&root, fs, 7, pool));
        SVN_ERR(svn_test__validate_tree(root, expected_entries, 20, pool));
    }
}"
Preprocessor In Statement,21,https://github.com/mysql/mysql-server/blob/0138556a55168da12eaf0bc3038947148d6b0863/extra/rapidjson/include/rapidjson/reader.h#L1057,reader.h#L1057,"{
    static const unsigned char tokenMap[256] = {N16, , , , , , , , , , , , , , , , N16, , , , , , , , , , , , , , , , N, N, StringToken, N, N, N, N, N, N, N, N, N, CommaToken, N, N, N, N, N, N, N, N, N, N, N, N, N, ColonToken, N, N, N, N, N, N16, , , , , , , , , , , , , , , , N, N, N, N, N, N, N, N, N, N, N, LeftBracketToken, N, RightBracketToken, N, N, N, N, N, N, N, N, FalseToken, N, N, N, N, N, N, N, NullToken, N, N, N, N, N, TrueToken, N, N, N, N, N, N, LeftCurlyBracketToken, N, RightCurlyBracketToken, N, N, N16, , , , , , , , , , , , , , , , N16, , , , , , , , , , , , , , , , N16, , , , , , , , , , , , , , , , N16, , , , , , , , , , , , , , , , N16, , , , , , , , , , , , , , , , N16, , , , , , , , , , , , , , , , N16, , , , , , , , , , , , , , , , N16, , , , , , , , , , , , , , , };
    if (sizeof (Ch) == 1 || unsigned (c) < 256)
        return (Token)tokenMap[(unsigned char)c];
    else
        return NumberToken;
}"
Preprocessor In Statement,22,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/elftoolchain/libdwarf/libdwarf_frame.c#L918,libdwarf_frame.c#L918,"{
    uint8_t *p, *pe;
    uint8_t high2, low6;
    uint64_t reg, reg2, uoff, soff, blen;
    *count = 0;
    p = insts;
    pe = p + len;
    while (p < pe){
        SET_INSTR_OFFSET(p - insts);
        if (*p == DW_CFA_nop){
            p++;
            (*count)++;
            continue;
        }
        high2 = *p & 0xc0;
        low6 = *p & 0x3f;
        p++;
        if (high2 > 0){
            switch (high2){
                case DW_CFA_advance_loc:
                    SET_BASE_OP(high2);
                    SET_OFFSET(low6);
                    break;
                case DW_CFA_offset:
                    SET_BASE_OP(high2);
                    SET_REGISTER(low6);
                    uoff = _dwarf_decode_uleb128(&p);
                    SET_OFFSET(uoff);
                    break;
                case DW_CFA_restore:
                    SET_BASE_OP(high2);
                    SET_REGISTER(low6);
                    break;
                default:
                    DWARF_SET_ERROR(dbg, error, DW_DLE_FRAME_INSTR_EXEC_ERROR);
                    return (DW_DLE_FRAME_INSTR_EXEC_ERROR);
            }
            (*count)++;
            continue;
        }
        SET_EXTENDED_OP(low6);
        switch (low6){
            case DW_CFA_set_loc:
                uoff = dbg->decode(&p, addr_size);
                SET_OFFSET(uoff);
                break;
            case DW_CFA_advance_loc1:
                uoff = dbg->decode(&p, 1);
                SET_OFFSET(uoff);
                break;
            case DW_CFA_advance_loc2:
                uoff = dbg->decode(&p, 2);
                SET_OFFSET(uoff);
                break;
            case DW_CFA_advance_loc4:
                uoff = dbg->decode(&p, 4);
                SET_OFFSET(uoff);
                break;
            case DW_CFA_offset_extended:
            case DW_CFA_def_cfa:
            case DW_CFA_val_offset:
                reg = _dwarf_decode_uleb128(&p);
                uoff = _dwarf_decode_uleb128(&p);
                SET_REGISTER(reg);
                SET_OFFSET(uoff);
                break;
            case DW_CFA_restore_extended:
            case DW_CFA_undefined:
            case DW_CFA_same_value:
            case DW_CFA_def_cfa_register:
                reg = _dwarf_decode_uleb128(&p);
                SET_REGISTER(reg);
                break;
            case DW_CFA_register:
                reg = _dwarf_decode_uleb128(&p);
                reg2 = _dwarf_decode_uleb128(&p);
                SET_REGISTER(reg);
                SET_OFFSET(reg2);
                break;
            case DW_CFA_remember_state:
            case DW_CFA_restore_state:
                break;
            case DW_CFA_def_cfa_offset:
                uoff = _dwarf_decode_uleb128(&p);
                SET_OFFSET(uoff);
                break;
            case DW_CFA_def_cfa_expression:
                blen = _dwarf_decode_uleb128(&p);
                SET_BLOCK_LEN(blen);
                SET_EXPR_BLOCK(p, blen);
                p += blen;
                break;
            case DW_CFA_expression:
            case DW_CFA_val_expression:
                reg = _dwarf_decode_uleb128(&p);
                blen = _dwarf_decode_uleb128(&p);
                SET_REGISTER(reg);
                SET_BLOCK_LEN(blen);
                SET_EXPR_BLOCK(p, blen);
                p += blen;
                break;
            case DW_CFA_offset_extended_sf:
            case DW_CFA_def_cfa_sf:
            case DW_CFA_val_offset_sf:
                reg = _dwarf_decode_uleb128(&p);
                soff = _dwarf_decode_sleb128(&p);
                SET_REGISTER(reg);
                SET_OFFSET(soff);
                break;
            case DW_CFA_def_cfa_offset_sf:
                soff = _dwarf_decode_sleb128(&p);
                SET_OFFSET(soff);
                break;
            default:
                DWARF_SET_ERROR(dbg, error, DW_DLE_FRAME_INSTR_EXEC_ERROR);
                return (DW_DLE_FRAME_INSTR_EXEC_ERROR);
        }
        (*count)++;
    }
    return (DW_DLE_NONE);
}"
Preprocessor In Statement,23,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/fs/ocfs2/cluster/heartbeat.c#L691,heartbeat.c#L691,"{
    struct o2hb_disk_slot* slot;
    struct o2hb_disk_heartbeat_block* hb_block;
    char* errstr;
    slot = &reg->hr_slots[o2nm_this_node()];
    if (!slot->ds_last_time)
        return 0;

    hb_block = slot->ds_raw_block;
    if (le64_to_cpu(hb_block->hb_seq) == slot->ds_last_time && le64_to_cpu(hb_block->hb_generation) == slot->ds_last_generation && hb_block->hb_node == slot->ds_node_num)
        return 1;

    if (hb_block->hb_node != slot->ds_node_num)
        errstr = ERRSTR1;
    else
        if (le64_to_cpu(hb_block->hb_generation) != slot->ds_last_generation)
            errstr = ERRSTR2;
        else
            errstr = ERRSTR3;

    mlog(ML_ERROR, ""%s (%s): expected(%u:0x%llx, 0x%llx), ondisk(%u:0x%llx, 0x%llx)\n"", errstr, reg->hr_dev_name, slot->ds_node_num, (unsigned long long )slot->ds_last_generation, (unsigned long long )slot->ds_last_time, hb_block->hb_node, (unsigned long long )le64_to_cpu(hb_block->hb_generation), (unsigned long long )le64_to_cpu(hb_block->hb_seq));
    return 0;
}"
Preprocessor In Statement,24,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/net/wireless/ath/ath9k/mac.c#L171,mac.c#L171,"{
    int wait_time = ATH9K_TX_STOP_DMA_TIMEOUT / ATH9K_TIME_QUANTUM;
    int wait;
    REG_WRITE(ah, AR_Q_TXD, 1 << q);
    for (wait = wait_time;wait != 0;wait--){
        if (wait != wait_time)
            udelay(ATH9K_TIME_QUANTUM);

        if (ath9k_hw_numtxpending(ah, q) == 0)
            break;
    }
    REG_WRITE(ah, AR_Q_TXD, 0);
    return wait != 0;
}"
Preprocessor In Statement,25,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vabal.c#L29,vabal.c#L29,<!!!>
Preprocessor In Statement,26,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/gcc/cp/pt.c#L8455,pt.c#L8455,"{
    tree purpose, value, chain;
    if (t == NULL)
        return t;

    if (TREE_CODE(t) != TREE_LIST)
        return tsubst_copy_and_build(t, args, complain, in_decl, false, false);

    if (t == void_list_node)
        return t;

    purpose = TREE_PURPOSE(t);
    if (purpose)
        purpose = RECUR (purpose);

    value = TREE_VALUE(t);
    if (value)
        value = RECUR (value);

    chain = TREE_CHAIN(t);
    if (chain && chain != void_type_node)
        chain = RECUR (chain);

    return tree_cons(purpose, value, chain);
}"
Preprocessor In Statement,27,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/tnftp/src/fetch.c#L148,fetch.c#L148,"{
    const char *cp, *scheme, *errormsg;
    char *ep, *clear, *realm;
    char uuser[BUFSIZ], *gotpass;
    const char* upass;
    int rval;
    size_t len, clen, rlen;
    *response = NULL;
    clear = realm = NULL;
    rval = -1;
    cp = challenge;
    scheme = ""Basic"";
    gotpass = NULL;
    DPRINTF(""auth_url: challenge `%s'\n"", challenge);
    if (!match_token(&cp, scheme)){
        warnx(""Unsupported authentication challenge `%s'"", challenge);
        goto cleanup_auth_url;
    }
    if (STRNEQUAL(cp, REALM))
        cp += sizeof (REALM) - 1;
    else{
        warnx(""Unsupported authentication challenge `%s'"", challenge);
        goto cleanup_auth_url;
    }
    if ((ep = strchr(cp, '\""')) != NULL){
        len = ep - cp;
        realm = (char*)ftp_malloc(len + 1);
        (void)strlcpy(realm, cp, len + 1);
    }else{
        warnx(""Unsupported authentication challenge `%s'"", challenge);
        goto cleanup_auth_url;
    }
    fprintf(ttyout, ""Username for `%s': "", realm);
    if (guser != NULL){
        (void)strlcpy(uuser, guser, sizeof (uuser));
        fprintf(ttyout, ""%s\n"", uuser);
    }else{
        (void)fflush(ttyout);
        if (get_line(stdin, uuser, sizeof (uuser), &errormsg) < 0){
            warnx(""%s; can't authenticate"", errormsg);
            goto cleanup_auth_url;
        }
    }
    if (gpass != NULL)
        upass = gpass;
    else{
        gotpass = getpass(""Password: "");
        if (gotpass == NULL){
            warnx(""Can't read password"");
            goto cleanup_auth_url;
        }
        upass = gotpass;
    }
    clen = strlen(uuser) + strlen(upass) + 2;
    clear = (char*)ftp_malloc(clen);
    (void)strlcpy(clear, uuser, clen);
    (void)strlcat(clear, "":"", clen);
    (void)strlcat(clear, upass, clen);
    if (gotpass)
        memset(gotpass, 0, strlen(gotpass));

    rlen = strlen(scheme) + 1 + (clen + 2) * 4 / 3 + 1;
    *response = (char*)ftp_malloc(rlen);
    (void)strlcpy(*response, scheme, rlen);
    len = strlcat(*response, "" "", rlen);
    base64_encode((unsigned char*)clear, clen - 1, (unsigned char*)*response + len);
    memset(clear, 0, clen);
    rval = 0;
    cleanup_auth_url:
    FREEPTR(clear);
    FREEPTR(realm);
    return (rval);
}"
Preprocessor In Statement,28,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vshr_n.c#L37,vshr_n.c#L37,<!!!>
Preprocessor In Statement,29,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/staging/rtlwifi/base.c#L1230,base.c#L1230,"{
    struct rtl_priv* rtlpriv = rtl_priv(hw);
    struct rtl_mac* rtlmac = rtl_mac(rtl_priv(hw));
    struct ieee80211_hdr* hdr = rtl_get_hdr(skb);
    struct rtl_sta_info* sta_entry = (sta ? (struct rtl_sta_info*)sta->drv_priv : NULL);
    __le16 fc = rtl_get_fc(skb);
    tcb_desc->hw_rate = _rtl_get_tx_hw_rate(hw, info);
    if (rtl_is_tx_report_skb(hw, skb))
        tcb_desc->use_spe_rpt = 1;

    if (ieee80211_is_data(fc)){
        if (info->control.rates[0].idx == 0 || ieee80211_is_nullfunc(fc)){
            tcb_desc->use_driver_rate = true;
            tcb_desc->ratr_index = SET_RATE_ID(RATR_INX_WIRELESS_MC);
            tcb_desc->disable_ratefallback = 1;
        }else{
            if (sta && sta->vht_cap.vht_supported){
                tcb_desc->hw_rate = _rtl_get_vht_highest_n_rate(hw, sta);
            }else{
                if (sta && (sta->ht_cap.ht_supported)){
                    tcb_desc->hw_rate = _rtl_get_highest_n_rate(hw, sta);
                }else{
                    if (rtlmac->mode == WIRELESS_MODE_B){
                        tcb_desc->hw_rate = rtlpriv->cfg->maps[RTL_RC_CCK_RATE11M];
                    }else{
                        tcb_desc->hw_rate = rtlpriv->cfg->maps[RTL_RC_OFDM_RATE54M];
                    }
                }
            }
        }
        if (is_multicast_ether_addr(hdr->addr1))
            tcb_desc->multicast = 1;
        else
            if (is_broadcast_ether_addr(hdr->addr1))
                tcb_desc->broadcast = 1;

        _rtl_txrate_selectmode(hw, sta, tcb_desc);
        _rtl_query_bandwidth_mode(hw, sta, tcb_desc);
        _rtl_qurey_shortpreamble_mode(hw, tcb_desc, info);
        _rtl_query_shortgi(hw, sta, tcb_desc, info);
        _rtl_query_protection_mode(hw, tcb_desc, info);
    }else{
        tcb_desc->use_driver_rate = true;
        tcb_desc->ratr_index = SET_RATE_ID(RATR_INX_WIRELESS_MC);
        tcb_desc->disable_ratefallback = 1;
        tcb_desc->mac_id = 0;
        tcb_desc->packet_bw = false;
    }
}"
Preprocessor In Statement,30,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/ath/ath_hal/ar5416/ar5416_reset.c#L822,ar5416_reset.c#L822,"{
    uint32_t coef_exp, coef_man;
    for (coef_exp = 31;coef_exp > 0;coef_exp--)
        if ((coef_scaled >> coef_exp) & 0x1)
            break;
    HALASSERT(coef_exp);
    coef_exp = 14 - (coef_exp - COEF_SCALE_S);
    coef_man = coef_scaled + (1 << (COEF_SCALE_S - coef_exp - 1));
    *coef_mantissa = coef_man >> (COEF_SCALE_S - coef_exp);
    *coef_exponent = coef_exp - 16;
}"
Preprocessor In Statement,31,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/lib/AST/Type.cpp#L332,Type.cpp#L332,"{
}"
Preprocessor In Statement,32,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/dom/canvas/WebGLFramebuffer.h#L105,WebGLFramebuffer.h#L105,"{
    if (!IsDefined() || !other.IsDefined())
        return false;

    return (_(mRenderbufferPtr) && _(mTexturePtr) && _(mTexImageTarget.get()) && _(mTexImageLevel) && _(mTexImageLayer));
}"
Preprocessor In Statement,33,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/libdecnumber/dpd/decimal128.c#L82,decimal128.c#L82,"{
    uInt status = 0;
    Int ae;
    decNumber dw;
    decContext dc;
    uInt comb, exp;
    uInt uiwork;
    uInt targar[4] = {0, 0, 0, 0};
    ae = dn->exponent + dn->digits - 1;
    if (dn->digits > DECIMAL128_Pmax || ae > DECIMAL128_Emax || ae < DECIMAL128_Emin){
        decContextDefault(&dc, DEC_INIT_DECIMAL128);
        dc.round = set->round;
        decNumberPlus(&dw, dn, &dc);
        dw.bits |= dn->bits & DECNEG;
        status = dc.status;
        dn = &dw;
    }
    if (dn->bits & DECSPECIAL){
        if (dn->bits & DECINF)
            targhi = DECIMAL_Inf << 24;
        else{
            if ((*dn->lsu != 0 || dn->digits > 1) && (dn->digits < DECIMAL128_Pmax)){
                decDigitsToDPD(dn, targar, 0);
            }
            if (dn->bits & DECNAN)
                targhi |= DECIMAL_NaN << 24;
            else
                targhi |= DECIMAL_sNaN << 24;
        }
    }else{
        if (decNumberIsZero(dn)){
            if (dn->exponent < -DECIMAL128_Bias){
                exp = 0;
                status |= DEC_Clamped;
            }else{
                exp = dn->exponent + DECIMAL128_Bias;
                if (exp > DECIMAL128_Ehigh){
                    exp = DECIMAL128_Ehigh;
                    status |= DEC_Clamped;
                }
            }
            comb = (exp >> 9) & 0x18;
        }else{
            uInt msd;
            Int pad = 0;
            exp = (uInt)(dn->exponent + DECIMAL128_Bias);
            if (exp > DECIMAL128_Ehigh){
                pad = exp - DECIMAL128_Ehigh;
                exp = DECIMAL128_Ehigh;
                status |= DEC_Clamped;
            }
            decDigitsToDPD(dn, targar, pad);
            msd = targhi >> 14;
            targhi &= 0x00003fff;
            if (msd >= 8)
                comb = 0x18 | ((exp >> 11) & 0x06) | (msd & 0x01);
            else
                comb = ((exp >> 9) & 0x18) | msd;
        }
        targhi |= comb << 26;
        targhi |= (exp & 0xfff) << 14;
    }
    if (dn->bits & DECNEG)
        targhi |= 0x80000000;

    if (DECLITEND){
        UBFROMUI(d128->bytes, targlo);
        UBFROMUI(d128->bytes + 4, targml);
        UBFROMUI(d128->bytes + 8, targmh);
        UBFROMUI(d128->bytes + 12, targhi);
    }else{
        UBFROMUI(d128->bytes, targhi);
        UBFROMUI(d128->bytes + 4, targmh);
        UBFROMUI(d128->bytes + 8, targml);
        UBFROMUI(d128->bytes + 12, targlo);
    }
    if (status != 0)
        decContextSetStatus(set, status);

    return d128;
}"
Preprocessor In Statement,34,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/net/ethernet/mellanox/mlx5/core/en_main.c#L2361,en_main.c#L2361,"{
    void* hfso = inner ? MLX5_ADDR_OF(tirc, tirc, rx_hash_field_selector_inner) : MLX5_ADDR_OF(tirc, tirc, rx_hash_field_selector_outer);
    MLX5_SET(tirc, tirc, rx_hash_fn, mlx5e_rx_hash_fn(params->rss_hfunc));
    if (params->rss_hfunc == ETH_RSS_HASH_TOP){
        void* rss_key = MLX5_ADDR_OF(tirc, tirc, rx_hash_toeplitz_key);
        size_t len = MLX5_FLD_SZ_BYTES(tirc, rx_hash_toeplitz_key);
        MLX5_SET(tirc, tirc, rx_hash_symmetric, 1);
        memcpy(rss_key, params->toeplitz_hash_key, len);
    }
    switch (tt){
        case MLX5E_TT_IPV4_TCP:
            MLX5_SET(rx_hash_field_select, hfso, l3_prot_type, MLX5_L3_PROT_TYPE_IPV4);
            MLX5_SET(rx_hash_field_select, hfso, l4_prot_type, MLX5_L4_PROT_TYPE_TCP);
            MLX5_SET(rx_hash_field_select, hfso, selected_fields, MLX5_HASH_IP_L4PORTS);
            break;
        case MLX5E_TT_IPV6_TCP:
            MLX5_SET(rx_hash_field_select, hfso, l3_prot_type, MLX5_L3_PROT_TYPE_IPV6);
            MLX5_SET(rx_hash_field_select, hfso, l4_prot_type, MLX5_L4_PROT_TYPE_TCP);
            MLX5_SET(rx_hash_field_select, hfso, selected_fields, MLX5_HASH_IP_L4PORTS);
            break;
        case MLX5E_TT_IPV4_UDP:
            MLX5_SET(rx_hash_field_select, hfso, l3_prot_type, MLX5_L3_PROT_TYPE_IPV4);
            MLX5_SET(rx_hash_field_select, hfso, l4_prot_type, MLX5_L4_PROT_TYPE_UDP);
            MLX5_SET(rx_hash_field_select, hfso, selected_fields, MLX5_HASH_IP_L4PORTS);
            break;
        case MLX5E_TT_IPV6_UDP:
            MLX5_SET(rx_hash_field_select, hfso, l3_prot_type, MLX5_L3_PROT_TYPE_IPV6);
            MLX5_SET(rx_hash_field_select, hfso, l4_prot_type, MLX5_L4_PROT_TYPE_UDP);
            MLX5_SET(rx_hash_field_select, hfso, selected_fields, MLX5_HASH_IP_L4PORTS);
            break;
        case MLX5E_TT_IPV4_IPSEC_AH:
            MLX5_SET(rx_hash_field_select, hfso, l3_prot_type, MLX5_L3_PROT_TYPE_IPV4);
            MLX5_SET(rx_hash_field_select, hfso, selected_fields, MLX5_HASH_IP_IPSEC_SPI);
            break;
        case MLX5E_TT_IPV6_IPSEC_AH:
            MLX5_SET(rx_hash_field_select, hfso, l3_prot_type, MLX5_L3_PROT_TYPE_IPV6);
            MLX5_SET(rx_hash_field_select, hfso, selected_fields, MLX5_HASH_IP_IPSEC_SPI);
            break;
        case MLX5E_TT_IPV4_IPSEC_ESP:
            MLX5_SET(rx_hash_field_select, hfso, l3_prot_type, MLX5_L3_PROT_TYPE_IPV4);
            MLX5_SET(rx_hash_field_select, hfso, selected_fields, MLX5_HASH_IP_IPSEC_SPI);
            break;
        case MLX5E_TT_IPV6_IPSEC_ESP:
            MLX5_SET(rx_hash_field_select, hfso, l3_prot_type, MLX5_L3_PROT_TYPE_IPV6);
            MLX5_SET(rx_hash_field_select, hfso, selected_fields, MLX5_HASH_IP_IPSEC_SPI);
            break;
        case MLX5E_TT_IPV4:
            MLX5_SET(rx_hash_field_select, hfso, l3_prot_type, MLX5_L3_PROT_TYPE_IPV4);
            MLX5_SET(rx_hash_field_select, hfso, selected_fields, MLX5_HASH_IP);
            break;
        case MLX5E_TT_IPV6:
            MLX5_SET(rx_hash_field_select, hfso, l3_prot_type, MLX5_L3_PROT_TYPE_IPV6);
            MLX5_SET(rx_hash_field_select, hfso, selected_fields, MLX5_HASH_IP);
            break;
        default:
            WARN_ONCE(true, ""%s: bad traffic type!\n"", __func__);
    }
}"
Preprocessor In Statement,35,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/nfs/bootp_subr.c#L1808,bootp_subr.c#L1808,"{
    struct mbuf* m;
    int error;
    int authunixok;
    int authcount;
    int authver;
    error = krpc_portmap(mdsin, RPCPROG_MNT, RPCMNT_VER1, &mdsin->sin_port, td);
    if (error != 0)
        return error;

    m = xdr_string_encode(path, strlen(path));
    error = krpc_call(mdsin, RPCPROG_MNT, RPCMNT_VER1, RPCMNT_MOUNT, &m, NULL, td);
    if (error != 0)
        return error;

    if (xdr_int_decode(&m, &error) != 0 || error != 0)
        goto bad;

    if ((args->flags & NFSMNT_NFSV3) != 0){
        if (xdr_int_decode(&m, fhsizep) != 0 || *fhsizep > NFSX_V3FHMAX || *fhsizep <= 0)
            goto bad;
    }else
        *fhsizep = NFSX_V2FH;

    if (xdr_opaque_decode(&m, fhp, *fhsizep) != 0)
        goto bad;

    if (args->flags & NFSMNT_NFSV3){
        if (xdr_int_decode(&m, &authcount) != 0)
            goto bad;

        authunixok = 0;
        if (authcount < 0 || authcount > 100)
            goto bad;

        while (authcount > 0){
            if (xdr_int_decode(&m, &authver) != 0)
                goto bad;

            if (authver == AUTH_UNIX)
                authunixok = 1;

            authcount--;
        }
        if (authunixok == 0)
            goto bad;
    }
    error = krpc_portmap(mdsin, NFS_PROG, (args->flags & NFSMNT_NFSV3) ? NFS_VER3 : NFS_VER2, &mdsin->sin_port, td);
    goto out;
    bad:
    error = EBADRPC;
    out:
    m_freem(m);
    return error;
}"
Preprocessor In Statement,36,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/toolkit/components/url-classifier/chromium/safebrowsing.pb.cc#L6609,safebrowsing.pb.cc#L6609,"{
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(::google::protobuf::NewPermanentCallback(&_internal_metadata_, &::google::protobuf::internal::InternalMetadataWithArenaLite::mutable_unknown_fields));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(&unknown_fields_string, false);
    for (;;){
        ::std::pair<::google::protobuf::uint32,bool> p = input->ReadTagWithCutoffNoLastTag(127u);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;

        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)){
            case 1:
                {
                    if (static_cast<::google::protobuf::uint8>tag == static_cast<::google::protobuf::uint8>8u){
                        int value;
                        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
                        if (::mozilla::safebrowsing::ThreatType_IsValid(value)){
                            set_threat_type(static_cast<::mozilla::safebrowsing::ThreatType>value);
                    }else{
                        unknown_fields_stream.WriteVarint32(8u);
                        unknown_fields_stream.WriteVarint32(static_cast<::google::protobuf::uint32>value);
                    }
                }else{
                    goto handle_unusual;
                }
                break;
            }
        case 2:
            {
                if (static_cast<::google::protobuf::uint8>tag == static_cast<::google::protobuf::uint8>16u){
                    int value;
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
                    if (::mozilla::safebrowsing::PlatformType_IsValid(value)){
                        set_platform_type(static_cast<::mozilla::safebrowsing::PlatformType>value);
                }else{
                    unknown_fields_stream.WriteVarint32(16u);
                    unknown_fields_stream.WriteVarint32(static_cast<::google::protobuf::uint32>value);
                }
            }else{
                goto handle_unusual;
            }
            break;
        }
    case 3:
        {
            if (static_cast<::google::protobuf::uint8>tag == static_cast<::google::protobuf::uint8>26u){
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_entry()));
        }else{
            goto handle_unusual;
        }
        break;
    }
case 4:
    {
        if (static_cast<::google::protobuf::uint8>tag == static_cast<::google::protobuf::uint8>34u){
            DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_resources()));
    }else{
        goto handle_unusual;
    }
    break;
}
case 5:
    {
        if (static_cast<::google::protobuf::uint8>tag == static_cast<::google::protobuf::uint8>42u){
            DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_client_info()));
    }else{
        goto handle_unusual;
    }
    break;
}
case 6:
    {
        if (static_cast<::google::protobuf::uint8>tag == static_cast<::google::protobuf::uint8>50u){
            DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user_info()));
    }else{
        goto handle_unusual;
    }
    break;
}
default:
    {
        handle_unusual:
        if (tag == 0){
            goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
    break;
}
}
}
success:
return true;
failure:
return false;
}"
Preprocessor In Statement,37,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/usr.sbin/ndp/ndp.c#L921,ndp.c#L921,"{
    int clear = 0;
    char* cp = argv[i];
    if (*cp == '-'){
        clear = 1;
        cp++;
    }
    SETFLAG(""disabled"", ND6_IFF_IFDISABLED);
    SETFLAG(""nud"", ND6_IFF_PERFORMNUD);
    SETVALUE(""basereachable"", ND.basereachable);
    SETVALUE(""retrans"", ND.retrans);
    SETVALUE(""curhlim"", ND.chlim);
    ND.flags = newflags;
    if (ioctl(s, SIOCSIFINFO_IN6, (caddr_t) & nd) < 0){
        err(1, ""ioctl(SIOCSIFINFO_IN6)"");
    }
}"
Preprocessor In Statement,38,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/dev/hyperv/utilities/unicode.h#L147,unicode.h#L147,"{
    uint16_t spos, dpos;
    int error;
    error = 0;
    dpos = 0;
    for (spos = 0;spos < src_len;spos++){
        if (src[spos] < 0x80){
            CHECK_LENGTH(1);
            ADD_BYTE(src[spos]);
        }else
            if (src[spos] < 0x800){
                CHECK_LENGTH(2);
                ADD_BYTE(0xc0 | (src[spos]>>6));
                ADD_BYTE(0x80 | (src[spos] & 0x3f));
            }else
                if ((src[spos] & 0xdc00) == 0xd800){
                    uint32_t c;
                    if (spos == src_len - 1 || (src[spos] & 0xdc00) != 0xdc00){
                        error++;
                        continue;
                    }
                    spos++;
                    CHECK_LENGTH(4);
                    c = (((src[spos] & 0x3ff) << 10) | (src[spos + 1] & 0x3ff)) + 0x10000;
                    ADD_BYTE(0xf0 | (c>>18));
                    ADD_BYTE(0x80 | ((c>>12) & 0x3f));
                    ADD_BYTE(0x80 | ((c>>6) & 0x3f));
                    ADD_BYTE(0x80 | (c & 0x3f));
                }else
                    if ((src[spos] & 0xdc00) == 0xdc00){
                        error++;
                    }else{
                        CHECK_LENGTH(3);
                        ADD_BYTE(0xe0 | src[spos]>>12);
                        ADD_BYTE(0x80 | ((src[spos]>>6) & 0x3f));
                        ADD_BYTE(0x80 | (src[spos] & 0x3f));
                    }
    }
    if (errp)
        *errp = error;

    return dpos;
}"
Preprocessor In Statement,39,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/binutils/binutils/readelf.c#L5244,readelf.c#L5244,"{
    bfd_vma offset;
    const char* procname;
    find_symbol_for_address(aux->symtab, aux->nsyms, aux->strtab, aux->strtab_size, tp->start, &procname, &offset);
    fputs(""\n<"", stdout);
    if (procname){
        fputs(procname, stdout);
        if (offset)
            printf(""+%lx"", (unsigned long )offset);
    }
    fputs("">: ["", stdout);
    print_vma(tp->start.offset, PREFIX_HEX);
    fputc('-', stdout);
    print_vma(tp->end.offset, PREFIX_HEX);
    printf(""]\n\t"");
    PF(Cannot_unwind);
    PF(Millicode);
    PF(Millicode_save_sr0);
    PF(Entry_SR);
    PV(Entry_FR);
    PV(Entry_GR);
    PF(Args_stored);
    PF(Variable_Frame);
    PF(Separate_Package_Body);
    PF(Frame_Extension_Millicode);
    PF(Stack_Overflow_Check);
    PF(Two_Instruction_SP_Increment);
    PF(Ada_Region);
    PF(cxx_info);
    PF(cxx_try_catch);
    PF(sched_entry_seq);
    PF(Save_SP);
    PF(Save_RP);
    PF(Save_MRP_in_frame);
    PF(extn_ptr_defined);
    PF(Cleanup_defined);
    PF(MPE_XL_interrupt_marker);
    PF(HP_UX_interrupt_marker);
    PF(Large_frame);
    PF(Pseudo_SP_Set);
    PV(Total_frame_size);
}"
Repurposed Variable,0,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/media/i2c/ov13858.c#L1100,ov13858.c#L1100,val = cpu_to_be32(val)
Repurposed Variable,1,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/crypto/serpent_generic.c#L258,serpent_generic.c#L258,"S1(r2, r0, r4, r3, r1)"
Repurposed Variable,2,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/tree-ssa/vrp82.c#L29,vrp82.c#L29,b = (b & 1) + 1
Repurposed Variable,3,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/kern/vfs_cluster.c#L654,vfs_cluster.c#L654,gbflags &= ~GB_UNMAPPED
Repurposed Variable,4,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/Sema/conversion.c#L10,conversion.c#L10,c = c
Repurposed Variable,5,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/fs/nfs/flexfilelayout/flexfilelayout.c#L835,flexfilelayout.c#L835,strict_iomode = true
Repurposed Variable,6,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/fs/nfsclient/nfs_clrpcops.c#L7570,nfs_clrpcops.c#L7570,"laystat = nfscl_adddevinfo(nmp, dip, tflp)"
Repurposed Variable,7,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/gcc/config/arm/arm.c#L13275,arm.c#L13275,reg_containing_return_addr = LR_REGNUM
Repurposed Variable,8,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/contrib/ck/src/ck_rhs.c#L733,ck_rhs.c#L733,"probe_limit = ck_rhs_map_bound_get(map, h)"
Repurposed Variable,9,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/arch/m68k/mac/iop.c#L533,iop.c#L533,code_len--
Repurposed Variable,10,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/gcc/calls.c#L188,calls.c#L188,"static_chain_value = convert_memory_address(Pmode, static_chain_value)"
Repurposed Variable,11,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/gdb/gdb/sparc64-tdep.c#L369,sparc64-tdep.c#L369,regnum = SPARC64_F32_REGNUM + 2 * (regnum - SPARC64_Q32_REGNUM)
Repurposed Variable,12,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/net/phonet/af_phonet.c#L78,af_phonet.c#L78,protocol = PN_PROTO_PHONET
Repurposed Variable,13,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/pr69592.c#L14,pr69592.c#L14,C(3)
Repurposed Variable,14,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/gfx/skia/skia/src/core/SkBlitter_RGB16.cpp#L37,SkBlitter_RGB16.cpp#L37,dst++
Repurposed Variable,15,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/x86/iommu/intel_idpgtbl.c#L778,intel_idpgtbl.c#L778,base += isize
Repurposed Variable,16,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/net/wireless/broadcom/b43legacy/main.c#L939,main.c#L939,ram_offset += sizeof (u32)
Repurposed Variable,17,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/media/libvpx/libvpx/third_party/libyuv/source/convert_from.cc#L741,convert_from.cc#L741,dst_stride_rgb565 = -dst_stride_rgb565
Repurposed Variable,18,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/crypto/openssl/crypto/modes/gcm128.c#L1023,gcm128.c#L1023,len -= 16
Repurposed Variable,19,https://github.com/WebKit/webkit/blob/e8c73206a09f734bc64f77d6275a727aa2811754/Source/WebKit/Shared/SharedStringHashStore.cpp#L46,SharedStringHashStore.cpp#L46,v |= v >> 8
Repurposed Variable,20,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/media/pci/ivtv/ivtv-ioctl.c#L218,ivtv-ioctl.c#L218,cur_speed = -cur_speed
Repurposed Variable,21,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/net/wireless/atmel/atmel.c#L987,atmel.c#L987,rx_packet_loc += ETH_ALEN
Repurposed Variable,22,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/tty/tty_buffer.c#L281,tty_buffer.c#L281,size = 0
Repurposed Variable,23,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/gcc/config/i386/i386.c#L11090,i386.c#L11090,op0 = op1
Repurposed Variable,24,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/crypto/openssl/ssl/t1_trce.c#L1070,t1_trce.c#L1070,msglen -= 4
Repurposed Variable,25,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/modules/pdfium/pdfium/core/fpdfapi/render/cpdf_renderstatus.cpp#L776,cpdf_renderstatus.cpp#L776,left *= 2
Repurposed Variable,26,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/intl/icu/source/i18n/collationdatabuilder.cpp#L389,collationdatabuilder.cpp#L389,"primary = Collation::incThreeBytePrimaryByOffset(primary, isCompressible, step)"
Repurposed Variable,27,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/mips/mips/cache_mipsNN.c#L697,cache_mipsNN.c#L697,va += 64
Repurposed Variable,28,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.c-torture/execute/20060930-1.c#L19,20060930-1.c#L19,e = -e
Repurposed Variable,29,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/modules/pdfium/pdfium/core/fxcodec/codec/fx_codec_fax.cpp#L106,fx_codec_fax.cpp#L106,"endpos = std::min(std::max(endpos, 0), columns)"
Repurposed Variable,30,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/fs/nfsserver/nfs_nfsdport.c#L1367,nfs_nfsdport.c#L1367,cnt -= iosize
Repurposed Variable,31,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/usr.bin/mkimg/mbr.c#L58,mbr.c#L58,blk += (where == SCHEME_META_IMG_START) ? 1 : 0
Repurposed Variable,32,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/intl/icu/source/common/uniset.cpp#L1900,uniset.cpp#L1900,polarity ^= 2
Repurposed Variable,33,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sys/compat/linuxkpi/common/src/linux_slab.c#L84,linux_slab.c#L84,align = UMA_ALIGN_CACHE
Repurposed Variable,34,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/dom/xul/templates/nsTreeRows.cpp#L282,nsTreeRows.cpp#L282,++aIndex
Repurposed Variable,35,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/mm/frame_vector.c#L46,frame_vector.c#L46,nr_frames = vec->nr_allocated
Repurposed Variable,36,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/gfx/graphite2/src/inc/List.h#L151,List.h#L151,++p
Repurposed Variable,37,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/llvm/lib/Target/Lanai/LanaiISelLowering.cpp#L757,LanaiISelLowering.cpp#L757,"Chain = DAG.getNode(LanaiISD::CALL, DL, NodeTys, ArrayRef < SDValue > (&Ops[0], Ops.size()))"
Repurposed Variable,38,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/lib/swiotlb.c#L865,swiotlb.c#L865,attrs |= DMA_ATTR_SKIP_CPU_SYNC
Repurposed Variable,39,https://github.com/mysql/mysql-server/blob/0138556a55168da12eaf0bc3038947148d6b0863/storage/myisam/mi_create.c#L856,mi_create.c#L856,def = 3
Reversed Subscript,0,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/Parser/cxx-bool.cpp#L9,cxx-bool.cpp#L9,"true[""clang""]"
Reversed Subscript,1,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/SemaCXX/overloaded-builtin-operators.cpp#L154,overloaded-builtin-operators.cpp#L154,17[cip]
Reversed Subscript,2,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/array-8.c#L42,array-8.c#L42,0[fp]
Reversed Subscript,3,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/Profile/c-general.c#L232,c-general.c#L232,i[weights]
Reversed Subscript,4,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/torture/pr70421.c#L12,pr70421.c#L12,((V)v)[u[0]]
Reversed Subscript,5,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/pointer-arith-4.c#L38,pointer-arith-4.c#L38,0[f]
Reversed Subscript,6,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/CodeGenCXX/typeid-should-throw.cpp#L52,typeid-should-throw.cpp#L52,0[x]
Reversed Subscript,7,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/pointer-arith-2.c#L35,pointer-arith-2.c#L35,0[p]
Reversed Subscript,8,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/array-8.c#L47,array-8.c#L47,0[sip]
Reversed Subscript,9,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/array-8.c#L36,array-8.c#L36,0[f().c]
Reversed Subscript,10,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/Wchar-subscripts-1.c#L21,Wchar-subscripts-1.c#L21,sc[p]
Reversed Subscript,11,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/Sema/warn-char-subscripts.c#L12,warn-char-subscripts.c#L12,subscript[array]
Reversed Subscript,12,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/CodeGenCXX/cxx1z-eval-order.cpp#L103,cxx1z-eval-order.cpp#L103,get_index()[get_arr()]
Reversed Subscript,13,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/g++.dg/conversion/simd4.C#L19,simd4.C#L19,u[b]
Reversed Subscript,14,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/pointer-arith-1.c#L34,pointer-arith-1.c#L34,0[p]
Reversed Subscript,15,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/g++.dg/cpp0x/constexpr-nullptr-2.C#L127,constexpr-nullptr-2.C#L127,3[null()]
Reversed Subscript,16,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.c-torture/execute/pr22061-1.c#L14,pr22061-1.c#L14,N[(char*)x]
Reversed Subscript,17,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/Wchar-subscripts-1.c#L18,Wchar-subscripts-1.c#L18,uc[a]
Reversed Subscript,18,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/Wchar-subscripts-1.c#L28,Wchar-subscripts-1.c#L28,c[p]
Reversed Subscript,19,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/g++.dg/conversion/simd4.C#L21,simd4.C#L21,w[b]
Reversed Subscript,20,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/array-8.c#L30,array-8.c#L30,c[p]
Reversed Subscript,21,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/g++.old-deja/g++.bugs/900321_05.C#L18,900321_05.C#L18,i[cp]
Reversed Subscript,22,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/pointer-arith-3.c#L38,pointer-arith-3.c#L38,0[f]
Reversed Subscript,23,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/crypto/heimdal/appl/ftp/ftpd/security.c#L667,security.c#L667,"level[""CSEP""]"
Reversed Subscript,24,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/CodeGenCXX/catch-undef-behavior.cpp#L275,catch-undef-behavior.cpp#L275,n[a]
Reversed Subscript,25,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/pointer-arith-3.c#L35,pointer-arith-3.c#L35,0[p]
Reversed Subscript,26,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/array-8.c#L27,array-8.c#L27,c[a]
Reversed Subscript,27,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/array-8.c#L40,array-8.c#L40,1.0[a]
Reversed Subscript,28,https://github.com/vim/vim/blob/6ce650480844bfaa5410874416b4a2e15f40b870/runtime/macros/maze/mazeclean.c#L16,mazeclean.c#L16,A[line - Z]
Reversed Subscript,29,https://github.com/vim/vim/blob/6ce650480844bfaa5410874416b4a2e15f40b870/runtime/macros/maze/mazeclean.c#L16,mazeclean.c#L16,"Z[A - (E = A[line - Z]) && !C & A == M[A] | RAND_MAX / 3 < rand() || !C & !Z ? line[M[E] = M[A]] = E, line[M[A] = A - Z] = A, ""_."" : "" |""]"
Reversed Subscript,30,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/crypto/heimdal/appl/ftp/ftp/security.c#L667,security.c#L667,"level[""CSEP""]"
Reversed Subscript,31,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/Wchar-subscripts-1.c#L27,Wchar-subscripts-1.c#L27,c[a]
Reversed Subscript,32,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/CodeGenCXX/cxx1z-eval-order.cpp#L118,cxx1z-eval-order.cpp#L118,get_index()[make_c()]
Reversed Subscript,33,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/pointer-arith-1.c#L36,pointer-arith-1.c#L36,0[f]
Reversed Subscript,34,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/SemaCXX/typo-correction.cpp#L681,typo-correction.cpp#L681,0[sizeof (c0is0)]
Reversed Subscript,35,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/Wchar-subscripts-1.c#L17,Wchar-subscripts-1.c#L17,sc[a]
Reversed Subscript,36,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/g++.old-deja/g++.bugs/900321_05.C#L17,900321_05.C#L17,"3[""abcdef""]"
Reversed Subscript,37,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/array-8.c#L44,array-8.c#L44,0[pv]
Reversed Subscript,38,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/SemaCXX/overloaded-builtin-operators.cpp#L225,overloaded-builtin-operators.cpp#L225,zero[foo]
Reversed Subscript,39,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/g++.dg/conversion/simd4.C#L20,simd4.C#L20,v[b]
Reversed Subscript,40,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.target/i386/pr70662.c#L15,pr70662.c#L15,((v64u64)v64u64_0)[v64u32_0[0]]
Reversed Subscript,41,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/Sema/c89.c#L78,c89.c#L78,1[test13a().X]
Reversed Subscript,42,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/CodeGenCXX/temporaries.cpp#L802,temporaries.cpp#L802,"2[T{4, 5, 6}]"
Reversed Subscript,43,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/g++.dg/cpp0x/constexpr-nullptr-2.C#L121,constexpr-nullptr-2.C#L121,0[p0]
Reversed Subscript,44,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/SemaCXX/return-stack-addr.cpp#L20,return-stack-addr.cpp#L20,i[x]
Reversed Subscript,45,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/g++.dg/conversion/simd4.C#L18,simd4.C#L18,t[b]
Reversed Subscript,46,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/CodeGen/2003-07-22-ArrayAccessTypeSafety.c#L5,2003-07-22-ArrayAccessTypeSafety.c#L5,N[array]
Reversed Subscript,47,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/Sema/warn-char-subscripts.c#L24,warn-char-subscripts.c#L24,subscript[array]
Reversed Subscript,48,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/Wchar-subscripts-1.c#L22,Wchar-subscripts-1.c#L22,uc[p]
Reversed Subscript,49,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/pointer-arith-4.c#L35,pointer-arith-4.c#L35,0[p]
Reversed Subscript,50,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/pointer-arith-2.c#L38,pointer-arith-2.c#L38,0[f]
Type Conversion,0,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/pinctrl/qcom/pinctrl-spmi-mpp.c#L505,pinctrl-spmi-mpp.c#L505,pad->is_enabled << PMIC_MPP_REG_MASTER_EN_SHIFT
Type Conversion,1,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/dom/media/webaudio/PannerNode.cpp#L714,PannerNode.cpp#L714,1 - x
Type Conversion,2,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/telnet/telnetd/utility.c#L171,utility.c#L171,*look++ & 0xff
Type Conversion,3,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/block/paride/pcd.c#L486,pcd.c#L486,buf[12] & 0xff
Type Conversion,4,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/g++.dg/warn/Wconversion-real-integer.C#L100,Wconversion-real-integer.C#L100,uc = 500.0
Type Conversion,5,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.target/aarch64/extr.c#L29,extr.c#L29,w != 0x2002002000200380ll
Type Conversion,6,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/gfx/cairo/libpixman/src/pixman-linear-gradient.c#L87,pixman-linear-gradient.c#L87,-1 < inc
Type Conversion,7,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/lib/libiconv_modules/MSKanji/citrus_mskanji.c#L189,citrus_mskanji.c#L189,psenc->ch[0] & 0xff
Type Conversion,8,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/graphite/pr39260.c#L16,pr39260.c#L16,7680 * f[ch]
Type Conversion,9,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/hwmon/sis5595.c#L621,sis5595.c#L621,val & 0x80
Type Conversion,10,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/gcc.dg/vect/pr60841.c#L93,pr60841.c#L93,g += 20.0
Type Conversion,11,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/gfx/skia/skia/src/pathops/SkPathOpsPoint.h#L88,SkPathOpsPoint.h#L88,1 / this->length()
Type Conversion,12,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/thermal/intel_powerclamp.c#L630,intel_powerclamp.c#L630,*state = -1
Type Conversion,13,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/Sema/conversion.c#L58,conversion.c#L58,(int)BIG
Type Conversion,14,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/OpenMP/target_parallel_for_simd_loop_messages.cpp#L51,target_parallel_for_simd_loop_messages.cpp#L51,(int)fi
Type Conversion,15,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/g++.dg/cpp0x/gnu_fno-ext-numeric-literals.C#L48,gnu_fno-ext-numeric-literals.C#L48,4 * (n + 1)
Type Conversion,16,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/binutils/binutils/readelf.c#L7411,readelf.c#L7411,nzero_counts * 100.0
Type Conversion,17,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/OpenMP/target_teams_distribute_simd_loop_messages.cpp#L201,target_teams_distribute_simd_loop_messages.cpp#L201,(int)(0.8 - 0.45)
Type Conversion,18,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/OpenMP/distribute_simd_loop_messages.cpp#L264,distribute_simd_loop_messages.cpp#L264,(int)(0.8 - 0.45)
Type Conversion,19,https://github.com/mongodb/mongo/blob/67f735e6705091659e2a8cf46a9285f09bcf749a/src/third_party/mozjs-45/extract/js/src/vm/CharacterEncoding.cpp#L52,CharacterEncoding.cpp#L52,c2 - 0xDC00
Type Conversion,20,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/sbin/rcorder/rcorder.c#L527,rcorder.c#L527,head->head = SET
Type Conversion,21,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/lib/msun/src/s_erf.c#L211,s_erf.c#L211,8 * x
Type Conversion,22,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/arch/powerpc/kvm/book3s_pr_papr.c#L164,book3s_pr_papr.c#L164,(tsh & H_BULK_REMOVE_TYPE) != H_BULK_REMOVE_REQUEST
Type Conversion,23,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/block/paride/pg.c#L348,pg.c#L348,cmd[k] & 0xff
Type Conversion,24,https://github.com/WebKit/webkit/blob/e8c73206a09f734bc64f77d6275a727aa2811754/Source/WebCore/rendering/TextDecorationPainter.cpp#L143,TextDecorationPainter.cpp#L143,2 * step
Type Conversion,25,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/lib/lru_cache.c#L383,lru_cache.c#L383,"__lc_find(lc, enr, 1)"
Type Conversion,26,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/parser/html/nsHtml5TokenizerCppSupplement.h#L147,nsHtml5TokenizerCppSupplement.h#L147,c != 0xFFFD
Type Conversion,27,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp#L1993,HexagonBitSimplify.cpp#L1993,!isInt < 8
Type Conversion,28,https://github.com/WebKit/webkit/blob/e8c73206a09f734bc64f77d6275a727aa2811754/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/aec/aec_core.cc#L626,aec_core.cc#L626,1 - suppressor_gain[i] * suppressor_gain[i]
Type Conversion,29,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/staging/media/atomisp/i2c/ov2722.c#L717,ov2722.c#L717,"gpio_ctrl(sd, 1)"
Type Conversion,30,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/contrib/llvm/tools/clang/lib/Headers/avx512fintrin.h#L9866,avx512fintrin.h#L9866,_mm512_set1_epi64(0x7FFFFFFFFFFFFFFF)
Type Conversion,31,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/gpu/drm/bridge/adv7511/adv7511_drv.c#L267,adv7511_drv.c#L267,output_format_422 << 7
Type Conversion,32,https://github.com/freebsd/freebsd/blob/c2b6ea8fa56ce6aba773d820fbf64a4d3efac9f5/lib/libiconv_modules/EUCTW/citrus_euctw.c#L241,citrus_euctw.c#L241,psenc->ch[2] & 0x80
Type Conversion,33,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/OpenMP/distribute_parallel_for_simd_misc_messages.c#L961,distribute_parallel_for_simd_misc_messages.c#L961,(int)fi
Type Conversion,34,https://github.com/gcc-mirror/gcc/blob/2201c33012d4c6dc522ddbfa97f5aa95a209e24d/gcc/testsuite/g++.dg/warn/Wsign-conversion.C#L58,Wsign-conversion.C#L58,ui = -1
Type Conversion,35,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/gpu/drm/nouveau/nvkm/subdev/bios/perf.c#L117,perf.c#L117,"(signed char)nvbios_rd08(bios, perf + 0x08) * 1000"
Type Conversion,36,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/sound/pci/au88x0/au88x0_a3d.c#L393,au88x0_a3d.c#L393,(esp0 & 0x7fffffff) | 0xB8000000
Type Conversion,37,https://github.com/mozilla/gecko-dev/blob/dd47bee6468de7e1221b4d006342ad6b9813d0e5/gfx/skia/skia/src/core/SkBitmapScaler.cpp#L179,SkBitmapScaler.cpp#L179,1 / filterSum
Type Conversion,38,https://github.com/llvm-mirror/clang/blob/2bcd2d052e5508c12374390e4a2d572988622caf/test/OpenMP/target_parallel_for_misc_messages.c#L311,target_parallel_for_misc_messages.c#L311,(int)fi
Type Conversion,39,https://github.com/torvalds/linux/blob/f34157878d3b17641ad2366988600c23c89d98b2/drivers/net/wireless/realtek/rtlwifi/rtl8192ee/dm.c#L1160,dm.c#L1160,collision_state == 1
