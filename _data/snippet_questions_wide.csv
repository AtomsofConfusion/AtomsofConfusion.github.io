"","Pair","ID","Code_c","Answer_c","Type_c","Code_nc","Answer_nc","Type_nc","AtomName","Errata"
"1",2,1,"void main(){
   int V1 = 10, V2 = 3;
   if (! (V1 % V2)){
      printf(""%s\n"", ""true"");
   }
   else{
      printf(""%s\n"", ""false"");
   }
}

","false","Confusing","void main(){
   int V1 = 1, V2 = 2;
   if ( (V2 - V1) == 0){
      printf(""%s\n"", ""true"");
   }
   else{
      printf(""%s\n"", ""false"");
   }
}","false","Non-confusing","Implicit Predicate",""
"2",4,3,"void main() { 
   int V1 = 7; 
   if (V1 = 8) 
      printf(""true\n""); 
   else
      printf(""false\n""); 
}","true","Confusing","void main()
{
   int V1 = 7;
   if ((V1 = 8) != 0)
      printf(""true"");
   else
      printf(""false"");
}","true","Non-confusing","Implicit Predicate",""
"3",6,5,"void main() {
   if (""V1"")
      printf(""true"");
   else
      printf(""false"");
}","true","Confusing","void main() {
   if (""V1"" != '\0')
      printf(""true\n"");
   else
      printf(""false\n"");
}","true","Non-confusing","Implicit Predicate",""
"4",8,7,"void main() { 
   int V1;
   V1 = 2 - 4 / 2;
   printf(""%d\n"", V1);
}","0","Confusing","void main() { 
   int V1;
   V1 = 3 + (9 / 3);
   printf(""%d\n"", V1);
}","6","Non-confusing","Infix Operator Precedence",""
"5",10,9,"void main() {
   if (! 0 && 2) {
      printf(""true"");
   } else {
      printf(""false"");
   }
}","true","Confusing","void main() {
   if ( 1 && (! 0) ) {
      printf(""true"");
   } else {
      printf(""false"");
   }
}","true","Non-confusing","Infix Operator Precedence",""
"6",12,11,"void main() {
   if (0 && 1 || 2) {
      printf(""true"");
   } else {
      printf(""false"");
   }
}","true","Confusing","void main() {
   if ((2 && 0) || 5) {
      printf(""true"");
   } else {
      printf(""false"");
   }
}","true","Non-confusing","Infix Operator Precedence",""
"7",14,13,"void main() { 
   int V1 = 2;
   int V2 = 3 + V1++;
   printf(""%d %d\n"", V1, V2);
}","3 5","Confusing","void main() { 
   int V1 =  2, V2;
   V2 = V1 + 3;
   V1++;
   printf(""%d %d\n"", V1, V2);
}","3 5","Non-confusing","Post-Increment/Decrement",""
"8",16,15,"void main() { 
   int V1 = 0;
   if (V1++ == 0) {
      printf(""true "");
   }
   else {
      printf(""false "");
   }
   printf(""%d"", V1);
}","true 1","Confusing","void main() { 
   int V1 = 0;
   if (V1 == 0) {
      printf(""true "");
   }
   else {
      printf(""false "");
   }
   V1++;
   printf(""%d"", V1);
}","true 1","Non-confusing","Post-Increment/Decrement",""
"9",18,17,"void main() { 
   int V1 = 2;
   if (V1-- == 1) {
      printf(""true "");
   }
   else {
      printf(""false "");
   }
   printf(""%d"", V1);
}","false 1","Confusing","void main() { 
   int V1 = 2;
   if (V1 == 1) {
      printf(""true "");
   }
   else {
      printf(""false "");
   }
   V1--;
   printf(""%d"", V1);
}","false 1","Non-confusing","Post-Increment/Decrement",""
"10",20,19,"void main() { 
   int V1 = 2;
   int V2 = ++V1 - 2;
   printf(""%d %d\n"", V1, V2);
}","3 1","Confusing","void main() { 
   int V1 = 5, V2;
   ++V1;
   V2 = 5 - V1;
   printf(""%d %d\n"", V1, V2);
}","6 -1","Non-confusing","Pre-Increment/Decrement",""
"11",22,21,"void main() { 
   int V1 = 2;
   if (--V1 == 1) {
      printf(""true "");
   }
   else {
      printf(""false "");
   }
   printf(""%d"", V1);
}","true 1","Confusing","void main() { 
   int V1 = 2;
   V1--;
   if (V1 == 1) {
      printf(""true "");
   }
   else {
      printf(""false "");
   }
   printf(""%d"", V1);
}","true 1","Non-confusing","Pre-Increment/Decrement",""
"12",24,23,"void main() { 
   int V1 = 2;
   int V2 = --V1 + 3;
   printf(""%d %d\n"", V1, V2);
}","1 4","Confusing","void main() { 
   int V1 = 6, V2;
   V2 = 9 - V1;
   --V1;
   printf(""%d %d\n"", V1, V2);
}","5 3","Non-confusing","Pre-Increment/Decrement",""
"13",26,25,"void main() {
   int V1 = 3;
   int V2 = V1 + 2;
   printf(""%d\n"", V2);
}","5","Confusing","void main() {
   int V1 =  2 + 3;
   printf(""%d\n"", V1);
}","5","Non-confusing","Constant Variables",""
"14",28,27,"void main() {
   int V1 = 2;
   int V2 = 2 * V1;
   printf(""%d\n"", V2);
}","4","Confusing","void main() {
   int V1 = 3 * 2;
   printf(""%d\n"", V1);
}","6","Non-confusing","Constant Variables",""
"15",30,29,"void main() {
   int V1 = 2;
   printf(""%f\n"", 2.5 * V1);
}","5","Confusing","void main() {
   printf(""%f\n"", 2 * 4.5);
}","9","Non-confusing","Constant Variables",""
"16",32,31,"void main() {
   int V1 = 2;
   int V2 = 0;
   int V3 = 3;

   if (V1)
      if (V2)
         V3 = V3 + 2;
   else
      V3 = V3 + 4;

   printf(""%d\n"", V3);
}","7","Confusing","void main() {
   int V1 = 2;
   int V2 = 0;
   int V3 = 5;

   if (V1)
      if (V2)
         V3 = V3 + 2;
      else
         V3 = V3 + 4;

   printf(""%d\n"", V3);
}","9","Non-confusing","Indentation no Braces","indentation"
"17",34,33,"void main() {
   int V1 = 5, V2 = 5;
   while (V2 > 0)
      V2--;
      V1++;
   printf(""%d\n"",V1);
}

","6","Confusing","void main() {
   int V1 = 5, V2 = 5;
   while (V2 > 0)
      V2--;
   V1++;
   printf(""%d\n"",V1);
}","6","Non-confusing","Indentation no Braces","indentation"
"18",36,35,"void main() {
   int V1 = 1, V2 = 2;
   if (V1 > V2)
   V2 = 1;
   V1 = 2;
   printf(""%d %d\n"",V1, V2);
}","2 2","Confusing","void main() {
   int V1 = 5, V2 = 2;
   if (V1 < V2)
      V1 = 2;
   V2 = 5;
   printf(""%d %d\n"",V1, V2);
}","5 5","Non-confusing","Indentation no Braces","indentation"
"19",38,37,"#define M1 64 - 1

void main(){
   int V1;
   V1 = M1 * 2;
   printf(""%d\n"", V1);
}","62","Confusing","void main(){
   int V1;
   V1 = 128 - 1 * 2;
   printf(""%d\n"", V1);
}","126","Non-confusing","Macro Operator Precedence","big_literal"
"20",40,39,"#define M1(V1, V2) V1 * V2

void main(){
   int V3 = M1(1 + 2, 3 + 4);
   printf(""%d\n"", V3);
}

","11","Confusing","void main(){
   int V1 = 2 + 1 * 4 + 3;
   printf(""%d\n"", V1);
}","9","Non-confusing","Macro Operator Precedence","macro_name"
"21",42,41,"#define M1(V1, V2) (V1) * (V2)

void main(){
   int V3 = M1(1 + 2, 3 + 4);
   printf(""%d\n"", V3);
}

","21","Confusing","void main(){
   int V1 = (2 + 1) * (3 + 4);
   printf(""%d\n"", V1);
}","21","Non-confusing","Macro Operator Precedence","macro_parens"
"22",44,43,"void main() {
   char *V1 = ""abcdef"" + 3;
   printf(""%s\n"", V1);
}","def","Confusing","void main() {
   char *V1 = &(""abcdef""[2]);
   printf(""%s\n"", V1);
}","cdef","Non-confusing","Pointer Arithmetic","pointer_arithmetic"
"23",46,45,"void main() {
   int V1[] = {4, 2, 7, 5};
   int *V2 = V1 + 1;
   printf(""%d\n"", *V2);
}","2","Confusing","void main() {
   int V1[] = {3, 1, 4, 6};
   int *V2 = &V1[1];
   printf(""%d\n"", *V2);
}","1","Non-confusing","Pointer Arithmetic","pointer_arithmetic"
"24",48,47,"void main() {
   int V1[] = {4, 7, 2, 3};
   int *V2 = V1 + 1;
   V2 = V2 + 2;
   printf(""%d\n"", *V2);
}","3","Confusing","void main() {
   int V1[] = {3, 2, 9, 4};
   int *V2 = &V1[1];
   V2 = &V2[2];
   printf(""%d\n"", *V2);
}","4","Non-confusing","Pointer Arithmetic","pointer_arithmetic"
"25",50,49,"void main() {
   int V1 = 4;

   int V2 = V1 == 3 ? 2 : 1;

   printf(""%d\n"", V2);
}","1","Confusing","void main() {
   int V1 = 4;
   int V2 = 3;
   int V3;
  
   if (V1 == 3) {
      V3 = 2;
   } else {
      V3 = 1;
   }

   printf(""%d\n"", V3);
}","1","Non-confusing","Conditional Operator",""
"26",52,51,"void main() {
   int V1 = 2;
   int V2 = 3;
   int V3 = 1;

   int V4 = (V1 == 2 ? (V3 == 2 ? 1 : 2) : (V2 == 2 ? 3 : 4));

   printf(""%d\n"", V4);
}","2","Confusing","void main() {
   int V1 = 2;
   int V2 = 3;
   int V3 = 1;

   int V4;
   if (V1 == 2) {
      if (V3 == 2) {
         V4 = 1;
      } else {
         V4 = 2;
      }
   } else {
      if (V2 == 2) {
         V4 = 3;
      } else {
         V4 = 4;
      }
   }

   printf(""%d\n"", V4);
}","2","Non-confusing","Conditional Operator","nested"
"27",54,53,"void main() {
   int V1 = 2;
   int V2 = 3;
   int V3 = 1;

   int V4 = V1 == 3 ? V2 : V3;

   printf(""%d\n"", V4);
}","1","Confusing","void main() {
   int V1 = 2;
   int V2 = 3;
   int V3 = 1;

   int V4;
   if (V1 == 3){
      V4 = V2;
   }
   else{
      V4 = V3;
   }

   printf(""%d\n"", V4);
}","1","Non-confusing","Conditional Operator",""
"28",56,55,"void main() {
   int V1 = 8;

   if ((V1 - 3) * (7 - V1) <= 0) {
      printf(""true\n"");
   } else {
      printf(""false\n"");
   }
}","true","Confusing","void main() {
   int V1 = 8;

   if (3 <= V1 || V1 >= 7) {
      printf(""true\n"");
   } else {
      printf(""false\n"");
   }
}","true","Non-confusing","Arithmetic as Logic",""
"29",58,57,"void main() {
   int V1 = 2;

   if ((V1 - 2) * (6 - V1) > 0) {
      printf(""true\n"");
   } else {
      printf(""false\n"");
   }
}","false","Confusing","void main() {
   int V1 = 2;

   if (V1 < 2 || 6 < V1) {
      printf(""true\n"");
   } else {
      printf(""false\n"");
   }
}","false","Non-confusing","Arithmetic as Logic",""
"30",60,59,"void main() {
   int V1 = 5;

   if (V1 + 5 != 0) {
      printf(""true\n"");
   } else {
      printf(""false\n"");
   }
}","true","Confusing","void main() {
   int V1 = 5;

   if (V1 != -5) {
      printf(""true\n"");
   } else {
      printf(""false\n"");
   }
}","true","Non-confusing","Arithmetic as Logic",""
"31",62,61,"void main() {
   int V1, V2;

   V1 = (V2 = 1, 2);

   printf(""%d %d\n"", V1, V2);
}","2 1","Confusing","void main() {
   int V1, V2;

   V1 = 2;
   V2 = 1;

   printf(""%d %d\n"", V1, V2);
}","2 1","Non-confusing","Comma Operator",""
"32",64,63,"void main() {
   int V1 = 3;
   int V2 = (V1 *= 2, V1 += 1);

   printf(""%d %d\n"", V1, V2);
}","7 7","Confusing","void main() {
   int V1 = 3;
  
   V1 *= 2;

   int V2 = (V1 += 1);

   printf(""%d %d\n"", V1, V2);
}","7 7","Non-confusing","Comma Operator",""
"33",66,65,"void main() {
   int V1 = 3;
   int V2 = (V1 += 1, V1 *= 2);

   printf(""%d %d\n"", V1, V2);
}

","8 8","Confusing","void main() {
   int V1 = 3;
  
   V1 += 1;

   int V2 = (V1 *= 2);

   printf(""%d %d\n"", V1, V2);
}","8 8","Non-confusing","Comma Operator",""
"34",68,67,"void main() {
   char *V1 = ""abcdef""
   #define M1
   ""abcdef"";

   printf(""%s\n"", V1);
}

","abcdefabcdef","Confusing","void main() {
   char *V1 = ""abcdef""
   ""abcdef"";

   #define M1

   printf(""%s\n"", V1);
}","abcdefabcdef","Non-confusing","Preprocessor in Statement",""
"35",70,69,"void main() {
   int V1;
   V1 = 4;

   int V2 = 1
   #define M1 1
   +
   #define M2 2
   V1;

   printf(""%d %d\n"", V1, V2);
}","4 5","Confusing","void main() {
   #define M1 1
   #define M2 2

   int V1;
   V1 = 4;

   int V2 = 1 + V1;

   printf(""%d %d\n"", V1, V2);
}","4 5","Non-confusing","Preprocessor in Statement",""
"36",72,71,"void main() {
   int V1 = 1, V2 = 2;

   if (V1 < V2) {
      #define M1 1
      #define M2 2
   } else {
      #define M1 2
      #define M2 1
   }

   printf(""%d %d\n"", M1, M2);
}","2 1","Confusing","void main() {
   int V1 = 1, V2 = 2;
   #define M1 2
   #define M2 1

   printf(""%d %d\n"", M1, M2);
}","2 1","Non-confusing","Preprocessor in Statement","preprocessor_simplification"
"37",74,73,"void main() {
   int V1 = 2;

   if (V1 = 1) {
      printf(""true\n"");
   } else {
      printf(""false\n"");
   }
}","true","Confusing","void main() {
   int V1 = 7;
   V1 = 1;
   if (1) {
      printf(""true\n"");
   } else {
      printf(""false\n"");
   }
}","true","Non-confusing","Assignment as Value",""
"38",76,75,"void main() {
   int V1 = 0;

   if (V1 = 0) {
      printf(""true\n"");
   } else {
      printf(""false\n"");
   }
}","false","Confusing","void main() {
   int V1 = 0;

   V1 = 0;

   if (V1) {
      printf(""true\n"");
   } else {
      printf(""false\n"");
   }
}","false","Non-confusing","Assignment as Value",""
"39",78,77,"void main() {
   int V1 = 0;
   int V2 = 9;

   while (!(V1 = 3)) {
      V2--;
      V1++;
   }

   printf(""%d %d\n"", V1, V2);
}","3 9","Confusing","void main() {
   int V1 = 0;
   int V2 = 7;

   V1 = 4;

   while (!4) {
      V2--;
      V1++;
   }

   printf(""%d %d\n"", V1, V2);
}","4 7","Non-confusing","Assignment as Value",""
"40",80,79,"void main() {
   int V1 = 1;
   int V2 = 5;

   if (++V1 || ++V2) {
      V1 = V1 * 2;
      V2 = V2 * 2;
   }

   printf(""%d %d\n"", V1, V2);
}","4 10","Confusing","void main() {
   int V1 = 2;
   int V2 = 4;

   if (++V1) {
        V1 = V1 * 2;
        V2 = V2 * 2;
   } else if (++V2) {
        V1 = V1 * 2;
        V2 = V2 * 2;
   }

   printf(""%d %d\n"", V1, V2);
}","6 8","Non-confusing","Logic as Control Flow",""
"41",82,81,"void main() {
   int V1 = 1;
   int V2 = 5;

   V1 == V2 && ++V1 || ++V2;

   printf(""%d %d\n"", V1, V2);
}","1 6","Confusing","void main() {
   int V1 = 2;
   int V2 = 6;

   if (V1 == V2) {
      ++V1;
   } else {
      ++V2;
   }

   printf(""%d %d\n"", V1, V2);
}","2 7","Non-confusing","Logic as Control Flow",""
"42",84,83,"void main() {
   int V1 = 3;
   int V2 = 5;
   int V3 = 0;

   while (V1 != V2 && ++V1) {
      V3++;
   }

   printf(""%d %d %d\n"", V1, V2, V3);
}","5 5 2","Confusing","void main() {
   int V1 = 1;
   int V2 = 11;
   int V3 = 0;

   while (V1 != V2) {
      ++V1;
      if (!V1) break;

      V3++;
   }

   printf(""%d %d %d\n"", V1, V2, V3);
}","11 11 10","Non-confusing","Logic as Control Flow",""
"43",86,85,"void main() {
   int V1[5];
   V1[4] = 3;

   while (V1[4]) {
      V1[3 - V1[4]] = V1[4];
      V1[4] = V1[4] - 1;
   }

   printf(""%d %d\n"", V1[1], V1[4]);
}","2 0","Confusing","void main() {
   int V1[6];
   int V2 = 5;

   while (V2) {
      V1[5 - V2] = V2;
      V2 = V2 - 1;
   }

   printf(""%d %d\n"", V1[1], V2);
}","4 0","Non-confusing","Repurposed Variables",""
"44",88,87,"void main() {
   int V3 = 0;

   for (int V1 = 0; V1 < 2; V1++) {
      for (int V2 = 0; V1 < 2; V1++) {
        V3 = 4 * V1 + V2;
      }
   }

   printf(""%d\n"", V3);
}","4","Confusing","void main() {
   int V3 = 0;

   for (int V1 = 0; V1 < 2; V1++) {
      for (int V2 = 0; V2 < 2; V2++) {
         V3 = 4 * V1 + V2;
         V1 = V2;
      }
   }

   printf(""%d\n"", V3);
}","1","Non-confusing","Repurposed Variables",""
"45",90,89,"void main() {
   int V1;
   for (int V2 = 0; V2 < 2; V2++) {
      V1 = (V2 < 1);
      if (V1) {
         V1 = V2 + 5;
      } else {
         V1 = V1 + 2;
      }
   }
   printf(""%d\n"", V1);
}","2","Confusing","void main() {
   int V1;
   for (int V2 = 0; V2 < 2; V2++) {
      int V3 = (V2 < 1);
      if (V3) {
         V1 = V2 + 4;
      } else {
         V1 = V3 + 4;
      }
   }
   printf(""%d\n"", V1);
}","4","Non-confusing","Repurposed Variables",""
"46",92,91,"void main() {
   char V1 = 2[""qwert""];

   printf(""%c\n"", V1);
}","e","Confusing","void main() {
   char V1 = ""zxcvb""[4];

   printf(""%c\n"", V1);
}","b","Non-confusing","Reversed Subscripts",""
"47",94,93,"void main() {
   char V1 = 3;
   char V2 = V1[""zxcvb""];

   printf(""%c\n"", V2);
}","v","Confusing","void main() {
   char V1 = 2;
   char V2 = ""asdfg""[V1];

   printf(""%c\n"", V2);
}","d","Non-confusing","Reversed Subscripts",""
"48",96,95,"void main() {
   char V1 = 4;
   char* V2 = ""qazwsx"";
   char V3 = V1[V2];

   printf(""%c\n"", V3);
}","s","Confusing","void main() {
   char V1 = 4;
   char* V2 = ""abcdef"";
   char V3 = V2[V1];

   printf(""%c\n"", V3);
}","e","Non-confusing","Reversed Subscripts",""
"49",98,97,"void main() {
   int V1 = 1;

   V1 = 3;
   V1 = 2;

   printf(""%d\n"", V1);
}","2","Confusing","void main() {
  int V1 = 1;

  V1 = 2;

  printf(""%d\n"", V1);
}","2","Non-confusing","Dead, Unreachable, Repeated",""
"50",100,99,"void main() {
   int V1 = 1;

   if (0) {
      V1 = 3;
   }

   printf(""%d\n"", V1);
}","1","Confusing","void main() {
   int V1 = 1;

   printf(""%d\n"", V1);
}","1","Non-confusing","Dead, Unreachable, Repeated",""
"51",102,101,"void main() {
   int V1 = 0;

   V1 = V1;

   printf(""%d\n"", V1);
}","0","Confusing","void main() {
   int V1 = 0;

   printf(""%d\n"", V1);
}","0","Non-confusing","Dead, Unreachable, Repeated",""
"52",104,103,"void main() {
   char V1 = 104;
   printf(""%c\n"", V1);
}","h","Confusing","void main() {
   char V1 = 'g';

   printf(""%c\n"", V1);
}","g","Non-confusing","Change of Literal Encoding",""
"53",106,105,"void main() {
   int V1 = 013;

   printf(""%d\n"", V1);
}","11","Confusing","void main() {
   char V1 = 23;
 
   printf(""%d\n"", V1);
}","23","Non-confusing","Change of Literal Encoding",""
"54",108,107,"void main() {
   int V1 = 208 & 13;

   printf(""%d\n"", V1);
}","0","Confusing","void main() {
   char V1 = 0xD0 & 0x0D;

   printf(""%d\n"", V1);
}","0","Non-confusing","Change of Literal Encoding","big_literal"
"55",110,109,"void main() {
   int V1 = 2;

   if (0) V1++; V1++;

   printf(""%d\n"", V1);
}","3","Confusing","void main() {
   int V1 = 2;

   if (0) { V1++; } V1++;

   printf(""%d\n"", V1);
}","3","Non-confusing","Omitted Curly Braces",""
"56",112,111,"void main() {
   int V1 = 4;

   int V2 = 0;
   while (V2 < 3) V2++; V1++;

   printf(""%d %d\n"", V1, V2);
}","5 3","Confusing","void main() {
   int V1 = 7;

   int V2 = 1;
   while (V2 < 3) { V2++; } V1++;
 
   printf(""%d %d\n"", V1, V2);
}","8 3","Non-confusing","Omitted Curly Braces",""
"57",114,113,"void main() {
   int V1 = 3;

   for (int V2 = 0; V2 < 3; V2++) V1++; V1++;

   printf(""%d\n"", V1);
}","7","Confusing","void main() {
   int V1 = 4;

   for (int V2 = 0; V2 < 3; V2++) { V1++; } V1++;

   printf(""%d\n"", V1);
}","8","Non-confusing","Omitted Curly Braces",""
"58",116,115,"void main() {
   float V1 = 1.99;

   int V2 = V1;
 
   printf(""%d\n"", V2);
}","1","Confusing","#include &lt;math.h&gt;
void main() {
   float V1 = 2.87;

   int V2 = trunc(V1);

   printf(""%d\n"", V2);
}","2","Non-confusing","Type Conversion",""
"59",118,117,"void main() {
   int V1 = -1;

   unsigned int V2 = V1;

   int V3;
   if (V2 > 0) {
      V3 = 4;
   } else {
      V3 = 5;
   }

   printf(""%d\n"", V3);
}","4","Confusing","#include  &lt;limits.h&gt;
void main() {
   int V1 = -1;

   unsigned int V2;
   if (V1 >= 0) {
      V2 = V1;
   } else {
      V2 = UINT_MAX + (V1 + 1);
   }

   int V3;
   if (V2 >= 0) {
      V3 = 4;
   } else {
      V3 = 5;
   }  

   printf(""%d\n"", V3);
}","4","Non-confusing","Type Conversion",""
"60",120,119,"void main() {
   int V1 = 261;

   char V2 = V1;

   printf(""%d\n"", V2);
}","5","Confusing","void main() {
   int V1 = 288;

   char V2 = V1 % 256;

   printf(""%d\n"", V2);
}","32","Non-confusing","Type Conversion","big_literal"
"61",122,121,"void main() {
   int V1 = 0;
   int V2 = 2;

   if (V1) {}
      V2 = 4;

   printf(""%d\n"", V2);
}","4","Confusing","void main() {
   int V1 = 0;
   int V2 = 2;

   if (V1) {}
   V2 = 4;

   printf(""%d\n"", V2);
}","4","Non-confusing","Indentation with Braces","indentation"
"62",124,123,"void main() {
   int V1 = 0;
   int V2 = 1;

   if (V1) {
      V2 = 2;
   }
      V2 = V2 * 3;

   printf(""%d\n"", V2);
}","3","Confusing","void main() {
   int V1 = 0;
   int V2 = 5;

   if (V1) {
      V2 = 2;
   }
   V2 = V2 * 2;

   printf(""%d\n"", V2);
}","10","Non-confusing","Indentation with Braces","indentation"
"63",126,125,"void main() {
   int V1 = 2;
   int V2 = 0;
   int V3 = 3;

   if (V1) {
      if (V2) {
         V3 = V3 +2;
   } else {
      V3 = V3 + 4;
   }
   }

   printf(""%d\n"", V3);
}","7","Confusing","void main() {
  int V1 = 2;
  int V2 = 0;
  int V3 = 5;

  if (V1) {
     if (V2) {
        V3 = V3 + 2;
     } else {
        V3 = V3 + 4;
     }
  }

  printf(""%d\n"", V3);
}","9","Non-confusing","Indentation with Braces","indentation"
